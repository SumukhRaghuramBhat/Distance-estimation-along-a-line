<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="13:RssiBaseAppC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f8fd8170330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f8fd92c60f0"/></to>
    </wire>
    <wire loc="92:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f8fd92c60f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f8fd9299670"/></to>
    </wire>
    <wire loc="25:RssiBaseAppC.nc">
      <from><interface-ref name="RssiMsgIntercept" scoped="" ref="0x7f8fd8173c20"/></from>
      <to><interface-ref name="RadioIntercept" scoped="" ref="0x7f8fd95d6e40"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="12:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="SerialIntercept" scoped="" ref="0x7f8fd95dcb00"/></from>
      <to><interface-ref name="SerialIntercept" scoped="" ref="0x7f8fd93967b0"/></to>
    </wire>
    <wire loc="11:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="RadioIntercept" scoped="" ref="0x7f8fd95d6e40"/></from>
      <to><interface-ref name="RadioIntercept" scoped="" ref="0x7f8fd93a0ae0"/></to>
    </wire>
    <wire loc="17:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f8fd93d98f0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f8fd95d2830"/></to>
    </wire>
    <wire loc="72:/home/sumukh/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f8fd95d2830"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f8fd95cfdd0"/></to>
    </wire>
    <wire loc="19:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7f8fd93d70e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f8fd9307d60"/></to>
    </wire>
    <wire loc="76:/home/sumukh/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f8fd9307d60"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f8fd92d62f0"/></to>
    </wire>
    <wire loc="20:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f8fd93d24a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f8fd86175d0"/></to>
    </wire>
    <wire loc="61:/home/sumukh/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f8fd86175d0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f8fd85ac4e0"/></to>
    </wire>
    <wire loc="22:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="UartSend" scoped="" ref="0x7f8fd93c7ba0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f8fd8614600"/></to>
    </wire>
    <wire loc="63:/home/sumukh/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f8fd8614600"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f8fd860cb40"/></to>
    </wire>
    <wire loc="23:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="UartReceive" scoped="" ref="0x7f8fd93c1bc0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f8fd8613800"/></to>
    </wire>
    <wire loc="64:/home/sumukh/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f8fd8613800"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f8fd85b69e0"/></to>
    </wire>
    <wire loc="24:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="UartPacket" scoped="" ref="0x7f8fd93b86c0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f8fd8613e10"/></to>
    </wire>
    <wire loc="65:/home/sumukh/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f8fd8613e10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f8fd85b3720"/></to>
    </wire>
    <wire loc="25:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="UartAMPacket" scoped="" ref="0x7f8fd93a88c0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f8fd8612ab0"/></to>
    </wire>
    <wire loc="66:/home/sumukh/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f8fd8612ab0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f8fd85b5020"/></to>
    </wire>
    <wire loc="27:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f8fd93b9530"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f8fd9304e00"/></to>
    </wire>
    <wire loc="78:/home/sumukh/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f8fd9304e00"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f8fd92d5320"/></to>
    </wire>
    <wire loc="28:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f8fd93a78c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f8fd9301020"/></to>
    </wire>
    <wire loc="79:/home/sumukh/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f8fd9301020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f8fd92d4510"/></to>
    </wire>
    <wire loc="29:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="RadioSnoop" scoped="" ref="0x7f8fd93a5510"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f8fd9301c00"/></to>
    </wire>
    <wire loc="80:/home/sumukh/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f8fd9301c00"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f8fd92d21d0"/></to>
    </wire>
    <wire loc="30:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f8fd93a5bd0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f8fd93002b0"/></to>
    </wire>
    <wire loc="81:/home/sumukh/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f8fd93002b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f8fd92d0020"/></to>
    </wire>
    <wire loc="31:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="RadioAMPacket" scoped="" ref="0x7f8fd93a49e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f8fd92ff020"/></to>
    </wire>
    <wire loc="82:/home/sumukh/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f8fd92ff020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f8fd92d2800"/></to>
    </wire>
    <wire loc="33:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f8fd9397bf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f8fd9337c80"/></to>
    </wire>
    <wire loc="51:/home/sumukh/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f8fd9337c80"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f8fd9330710"/></to>
    </wire>
    <wire loc="49:/home/sumukh/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8fd95d4cf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8fd818dd10"/></to>
    </wire>
    <wire loc="65:/home/sumukh/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8fd95d4cf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8fd81ba380"/></to>
    </wire>
    <wire loc="72:/home/sumukh/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8fd95d4cf0"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x7f8fd83c6d30"/></to>
    </wire>
    <wire loc="73:/home/sumukh/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8fd95d4cf0"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x7f8fd83c0ce0"/></to>
    </wire>
    <wire loc="61:/home/sumukh/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8fd95d4cf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8fd83ee020"/></to>
    </wire>
    <wire loc="59:/home/sumukh/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8fd95d4cf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8fd85afe60"/></to>
    </wire>
    <wire loc="104:/home/sumukh/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8fd95d4cf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8fd86eddd0"/></to>
    </wire>
    <wire loc="60:/home/sumukh/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8fd95d4cf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8fd8777b70"/></to>
    </wire>
    <wire loc="58:/home/sumukh/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8fd95d4cf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8fd8796750"/></to>
    </wire>
    <wire loc="52:/home/sumukh/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8fd95d4cf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8fd87b3080"/></to>
    </wire>
    <wire loc="53:/home/sumukh/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8fd95d4cf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8fd8938200"/></to>
    </wire>
    <wire loc="66:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8fd95d4cf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8fd8a3c810"/></to>
    </wire>
    <wire loc="62:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8fd95d4cf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8fd8b1e450"/></to>
    </wire>
    <wire loc="63:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8fd95d4cf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8fd91517f0"/></to>
    </wire>
    <wire loc="96:/home/sumukh/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8fd95d4cf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8fd7d17d70"/></to>
    </wire>
    <wire loc="74:/home/sumukh/tinyos-main/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8fd95d4cf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8fd8d6d020"/></to>
    </wire>
    <wire loc="60:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8fd95d4cf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8fd92014a0"/></to>
    </wire>
    <wire loc="67:/home/sumukh/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f8fd9414470"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f8fd97730d0"/></to>
    </wire>
    <wire loc="53:/home/sumukh/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f8fd97730d0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f8fd96ad0c0"/></to>
    </wire>
    <wire loc="68:/home/sumukh/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f8fd9413020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8fd95d3c00"/></to>
    </wire>
    <wire loc="58:/home/sumukh/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f8fd95d3c00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8fd95c30c0"/></to>
    </wire>
    <wire loc="71:/home/sumukh/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8fd9413720"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f8fd95d4cf0"/></to>
    </wire>
    <wire loc="26:/home/sumukh/tinyos-main/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f8fd95cbd50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8fd829abe0"/></to>
    </wire>
    <wire loc="26:/home/sumukh/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f8fd95cbd50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8fd8fd3e80"/></to>
    </wire>
    <wire loc="59:/home/sumukh/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f8fd95cb020"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f8fd9434310"/></to>
    </wire>
    <wire loc="61:/home/sumukh/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7f8fd95c2020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8fd9435b80"/></to>
    </wire>
    <wire loc="54:/home/sumukh/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f8fd95c37a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8fd930c2e0"/></to>
    </wire>
    <wire loc="62:/home/sumukh/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f8fd95c37a0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f8fd95c59e0"/></to>
    </wire>
    <wire loc="46:/home/sumukh/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f8fd95c59e0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f8fd95bb530"/></to>
    </wire>
    <wire loc="63:/home/sumukh/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f8fd95be110"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f8fd95cbd50"/></to>
    </wire>
    <wire loc="48:/home/sumukh/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x7f8fd95b4ad0"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x7f8fd95a8060"/></to>
    </wire>
    <wire loc="141:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7f8fd95a8060"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f8fd951eda0"/></to>
    </wire>
    <wire loc="49:/home/sumukh/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f8fd95b9cd0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f8fd95be110"/></to>
    </wire>
    <wire loc="191:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7f8fd9572cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd9486120"/></to>
    </wire>
    <wire loc="165:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7f8fd958e4e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f8fd94f22b0"/></to>
    </wire>
    <wire loc="67:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f8fd94f22b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd7fece20"/></to>
    </wire>
    <wire loc="176:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7f8fd9582350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f8fd94e18f0"/></to>
    </wire>
    <wire loc="69:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f8fd94e18f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd7f7a3f0"/></to>
    </wire>
    <wire loc="185:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7f8fd9578cb0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f8fd94d28f0"/></to>
    </wire>
    <wire loc="69:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f8fd94d28f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd7f0d3f0"/></to>
    </wire>
    <wire loc="143:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7f8fd95a6670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f8fd951b2b0"/></to>
    </wire>
    <wire loc="72:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f8fd951b2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd81219b0"/></to>
    </wire>
    <wire loc="183:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7f8fd957b670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f8fd94d45d0"/></to>
    </wire>
    <wire loc="67:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f8fd94d45d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd7f14e20"/></to>
    </wire>
    <wire loc="146:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7f8fd95a4cb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f8fd9513a20"/></to>
    </wire>
    <wire loc="66:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f8fd9513a20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd80c5a60"/></to>
    </wire>
    <wire loc="157:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7f8fd9598cb0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f8fd9501020"/></to>
    </wire>
    <wire loc="68:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f8fd9501020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd80530a0"/></to>
    </wire>
    <wire loc="168:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7f8fd958be40"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f8fd94ef760"/></to>
    </wire>
    <wire loc="70:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f8fd94ef760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd7fe16d0"/></to>
    </wire>
    <wire loc="179:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7f8fd957fcb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f8fd94deda0"/></to>
    </wire>
    <wire loc="72:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f8fd94deda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd7f70e20"/></to>
    </wire>
    <wire loc="138:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7f8fd95ac800"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f8fd95218f0"/></to>
    </wire>
    <wire loc="67:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f8fd95218f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd81329b0"/></to>
    </wire>
    <wire loc="149:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7f8fd95a0670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f8fd950f020"/></to>
    </wire>
    <wire loc="69:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f8fd950f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd80ba3f0"/></to>
    </wire>
    <wire loc="160:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7f8fd9593670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f8fd94fd5d0"/></to>
    </wire>
    <wire loc="71:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f8fd94fd5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd80499b0"/></to>
    </wire>
    <wire loc="171:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7f8fd9587670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f8fd94ecc10"/></to>
    </wire>
    <wire loc="73:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f8fd94ecc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd7fd70a0"/></to>
    </wire>
    <wire loc="188:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7f8fd9574670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f8fd94ceda0"/></to>
    </wire>
    <wire loc="72:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f8fd94ceda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd7f03e20"/></to>
    </wire>
    <wire loc="194:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7f8fd956eb20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd9477120"/></to>
    </wire>
    <wire loc="174:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7f8fd9585cb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f8fd94e35d0"/></to>
    </wire>
    <wire loc="67:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f8fd94e35d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd7f81e20"/></to>
    </wire>
    <wire loc="70:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f8fd951eda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd81273f0"/></to>
    </wire>
    <wire loc="152:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7f8fd959c020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f8fd950b5d0"/></to>
    </wire>
    <wire loc="72:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f8fd950b5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd80b1e20"/></to>
    </wire>
    <wire loc="192:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7f8fd95704e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd94816d0"/></to>
    </wire>
    <wire loc="155:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7f8fd959a670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f8fd9504d30"/></to>
    </wire>
    <wire loc="66:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f8fd9504d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd805ac90"/></to>
    </wire>
    <wire loc="166:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7f8fd958d800"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f8fd94f1440"/></to>
    </wire>
    <wire loc="68:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f8fd94f1440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd7fe80a0"/></to>
    </wire>
    <wire loc="177:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7f8fd9581670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f8fd94e0a80"/></to>
    </wire>
    <wire loc="70:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f8fd94e0a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd7f766d0"/></to>
    </wire>
    <wire loc="186:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7f8fd9576020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f8fd94d1a80"/></to>
    </wire>
    <wire loc="70:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f8fd94d1a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd7f0a6d0"/></to>
    </wire>
    <wire loc="144:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7f8fd95a5990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f8fd951a440"/></to>
    </wire>
    <wire loc="73:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f8fd951a440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd811ee20"/></to>
    </wire>
    <wire loc="147:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7f8fd95a2020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f8fd9512c10"/></to>
    </wire>
    <wire loc="67:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f8fd9512c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd80c2e20"/></to>
    </wire>
    <wire loc="158:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7f8fd9595020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f8fd94ff2b0"/></to>
    </wire>
    <wire loc="69:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f8fd94ff2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd804f3f0"/></to>
    </wire>
    <wire loc="169:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7f8fd9589060"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f8fd94ee8f0"/></to>
    </wire>
    <wire loc="71:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f8fd94ee8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd7fde9b0"/></to>
    </wire>
    <wire loc="180:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7f8fd957d020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f8fd94dc020"/></to>
    </wire>
    <wire loc="73:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f8fd94dc020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd7f6c0a0"/></to>
    </wire>
    <wire loc="139:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7f8fd95abb20"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f8fd9520a80"/></to>
    </wire>
    <wire loc="68:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f8fd9520a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd812ee20"/></to>
    </wire>
    <wire loc="150:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7f8fd959f990"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f8fd950e2b0"/></to>
    </wire>
    <wire loc="70:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f8fd950e2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd80b76d0"/></to>
    </wire>
    <wire loc="161:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7f8fd9592990"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f8fd94fc760"/></to>
    </wire>
    <wire loc="72:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f8fd94fc760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd8046e20"/></to>
    </wire>
    <wire loc="189:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7f8fd9573990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f8fd94cc020"/></to>
    </wire>
    <wire loc="73:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f8fd94cc020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd7eff0a0"/></to>
    </wire>
    <wire loc="164:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7f8fd958f020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f8fd94f3020"/></to>
    </wire>
    <wire loc="66:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f8fd94f3020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd7fefc90"/></to>
    </wire>
    <wire loc="175:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7f8fd9583020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f8fd94e2760"/></to>
    </wire>
    <wire loc="68:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f8fd94e2760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd7f7d0a0"/></to>
    </wire>
    <wire loc="184:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7f8fd9579990"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f8fd94d3760"/></to>
    </wire>
    <wire loc="68:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f8fd94d3760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd7f100a0"/></to>
    </wire>
    <wire loc="195:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7f8fd956de40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd94726d0"/></to>
    </wire>
    <wire loc="142:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7f8fd95a7350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f8fd951c020"/></to>
    </wire>
    <wire loc="71:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f8fd951c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd81246d0"/></to>
    </wire>
    <wire loc="153:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7f8fd959b350"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f8fd950a760"/></to>
    </wire>
    <wire loc="73:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f8fd950a760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd80ad0a0"/></to>
    </wire>
    <wire loc="182:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7f8fd957c350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f8fd94d5460"/></to>
    </wire>
    <wire loc="66:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f8fd94d5460"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd7f17c90"/></to>
    </wire>
    <wire loc="156:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7f8fd9599990"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f8fd9503e60"/></to>
    </wire>
    <wire loc="67:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f8fd9503e60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd8057e20"/></to>
    </wire>
    <wire loc="167:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7f8fd958cb20"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f8fd94f05d0"/></to>
    </wire>
    <wire loc="69:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f8fd94f05d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd7fe53f0"/></to>
    </wire>
    <wire loc="178:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7f8fd9580990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f8fd94dfc10"/></to>
    </wire>
    <wire loc="71:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f8fd94dfc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd7f739b0"/></to>
    </wire>
    <wire loc="187:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7f8fd9575350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f8fd94d0c10"/></to>
    </wire>
    <wire loc="71:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f8fd94d0c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd7f069b0"/></to>
    </wire>
    <wire loc="137:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7f8fd95bc590"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f8fd95226b0"/></to>
    </wire>
    <wire loc="66:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f8fd95226b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd81356d0"/></to>
    </wire>
    <wire loc="148:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7f8fd95a1350"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f8fd9511da0"/></to>
    </wire>
    <wire loc="68:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f8fd9511da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd80be0a0"/></to>
    </wire>
    <wire loc="159:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7f8fd9594350"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f8fd94fe440"/></to>
    </wire>
    <wire loc="70:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f8fd94fe440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd804c6d0"/></to>
    </wire>
    <wire loc="170:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7f8fd9588350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f8fd94eda80"/></to>
    </wire>
    <wire loc="72:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f8fd94eda80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd7fdbe20"/></to>
    </wire>
    <wire loc="193:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7f8fd956f800"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd947dc90"/></to>
    </wire>
    <wire loc="173:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7f8fd9586990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f8fd94e43f0"/></to>
    </wire>
    <wire loc="66:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f8fd94e43f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd7f84c90"/></to>
    </wire>
    <wire loc="162:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7f8fd9591cb0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f8fd94fb8f0"/></to>
    </wire>
    <wire loc="73:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f8fd94fb8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd80420a0"/></to>
    </wire>
    <wire loc="140:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7f8fd95aae40"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f8fd951fc10"/></to>
    </wire>
    <wire loc="69:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f8fd951fc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd812a0a0"/></to>
    </wire>
    <wire loc="151:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7f8fd959ecb0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f8fd950d440"/></to>
    </wire>
    <wire loc="71:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f8fd950d440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8fd80b49b0"/></to>
    </wire>
    <wire loc="54:/home/sumukh/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f8fd976ae10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8fd96ac020"/></to>
    </wire>
    <wire loc="55:/home/sumukh/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f8fd96a95d0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f8fd969d2d0"/></to>
    </wire>
    <wire loc="58:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f8fd968a750"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f8fd90dd4c0"/></to>
    </wire>
    <wire loc="49:../InterceptBase/BaseStationP.nc">
      <from><interface-ref name="uartSendTask" scoped="" ref="0x7f8fd938f100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8fd976ae10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:../InterceptBase/BaseStationP.nc">
      <from><interface-ref name="radioSendTask" scoped="" ref="0x7f8fd938e020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8fd976ae10"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/sumukh/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f8fd930c2e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8fd9330110"/></to>
    </wire>
    <wire loc="54:/home/sumukh/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f8fd932e020"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f8fd9331b60"/></to>
    </wire>
    <wire loc="56:/home/sumukh/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f8fd9331b60"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7f8fd95abb20"/></to>
    </wire>
    <wire loc="55:/home/sumukh/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f8fd932d340"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f8fd930fe70"/></to>
    </wire>
    <wire loc="57:/home/sumukh/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f8fd930fe70"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7f8fd95ac800"/></to>
    </wire>
    <wire loc="56:/home/sumukh/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f8fd932c660"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f8fd930d0f0"/></to>
    </wire>
    <wire loc="58:/home/sumukh/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f8fd930d0f0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7f8fd95bc590"/></to>
    </wire>
    <wire loc="82:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f8fd92d62f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f8fd92ac020"/></to>
    </wire>
    <wire loc="85:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f8fd92d5320"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f8fd86af020"/></to>
    </wire>
    <wire loc="88:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f8fd92d21d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f8fd86aedf0"/></to>
    </wire>
    <wire loc="84:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f8fd92d0020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f8fd86aca80"/></to>
    </wire>
    <wire loc="91:/home/sumukh/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f8fd92fd430"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f8fd89b5550"/></to>
    </wire>
    <wire loc="59:/home/sumukh/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f8fd89b5550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f8fd89a7a80"/></to>
    </wire>
    <wire loc="84:/home/sumukh/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f8fd92e15b0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f8fd92bb170"/></to>
    </wire>
    <wire loc="91:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f8fd92bb170"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f8fd9297700"/></to>
    </wire>
    <wire loc="87:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f8fd92d4510"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f8fd86ae210"/></to>
    </wire>
    <wire loc="83:/home/sumukh/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f8fd92f6350"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f8fd92cf020"/></to>
    </wire>
    <wire loc="93:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f8fd92cf020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f8fd9298670"/></to>
    </wire>
    <wire loc="89:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f8fd92d2800"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f8fd86ad470"/></to>
    </wire>
    <wire loc="92:/home/sumukh/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f8fd92ed660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f8fd89b1660"/></to>
    </wire>
    <wire loc="60:/home/sumukh/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f8fd89b1660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f8fd89a3af0"/></to>
    </wire>
    <wire loc="97:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f8fd92ac020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f8fd86e1b80"/></to>
    </wire>
    <wire loc="83:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f8fd92ce2c0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f8fd86aa8b0"/></to>
    </wire>
    <wire loc="86:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f8fd92b91d0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f8fd86abce0"/></to>
    </wire>
    <wire loc="84:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f8fd9299670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f8fd89ba680"/></to>
    </wire>
    <wire loc="83:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f8fd9297700"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f8fd86e1080"/></to>
    </wire>
    <wire loc="85:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f8fd9298670"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f8fd89b76e0"/></to>
    </wire>
    <wire loc="90:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f8fd92b1430"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f8fd92962e0"/></to>
    </wire>
    <wire loc="82:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f8fd92962e0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f8fd86cc020"/></to>
    </wire>
    <wire loc="94:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f8fd92c1170"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f8fd9297080"/></to>
    </wire>
    <wire loc="86:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f8fd9297080"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f8fd89b6a70"/></to>
    </wire>
    <wire loc="97:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7f8fd86a10f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8fd92ab530"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f8fd86a9860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f8fd929b170"/></to>
    </wire>
    <wire loc="93:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f8fd929b170"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f8fd874bca0"/></to>
    </wire>
    <wire loc="99:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f8fd86a7690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f8fd9299020"/></to>
    </wire>
    <wire loc="94:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f8fd9299020"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f8fd874aa50"/></to>
    </wire>
    <wire loc="101:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f8fd86a34d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f8fd8b6bb90"/></to>
    </wire>
    <wire loc="102:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f8fd86a7ce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f8fd89ba680"/></to>
    </wire>
    <wire loc="55:/home/sumukh/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f8fd89ba680"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f8fd89acd30"/></to>
    </wire>
    <wire loc="103:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f8fd86a6b70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f8fd89b60c0"/></to>
    </wire>
    <wire loc="57:/home/sumukh/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f8fd89b60c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f8fd89a8640"/></to>
    </wire>
    <wire loc="104:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f8fd86a5610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f8fd920ab80"/></to>
    </wire>
    <wire loc="55:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f8fd920ab80"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f8fd9200970"/></to>
    </wire>
    <wire loc="106:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f8fd86a21f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f8fd9291990"/></to>
    </wire>
    <wire loc="54:/home/sumukh/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f8fd9291990"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f8fd928b020"/></to>
    </wire>
    <wire loc="109:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f8fd86a1d30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f8fd9337c80"/></to>
    </wire>
    <wire loc="63:/home/sumukh/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f8fd86e1b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f8fd86ded90"/></to>
    </wire>
    <wire loc="58:/home/sumukh/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f8fd89b6a70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f8fd89a7020"/></to>
    </wire>
    <wire loc="53:/home/sumukh/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f8fd86cc020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f8fd86ca420"/></to>
    </wire>
    <wire loc="97:/home/sumukh/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f8fd874bca0"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f8fd873fa20"/></to>
    </wire>
    <wire loc="64:/home/sumukh/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f8fd86e1080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f8fd86da2d0"/></to>
    </wire>
    <wire loc="90:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f8fd92a5d30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f8fd874b5f0"/></to>
    </wire>
    <wire loc="92:/home/sumukh/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f8fd874b5f0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f8fd873f370"/></to>
    </wire>
    <wire loc="56:/home/sumukh/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f8fd89b76e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f8fd89a9c50"/></to>
    </wire>
    <wire loc="88:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f8fd92ab530"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8fd874dcb0"/></to>
    </wire>
    <wire loc="96:/home/sumukh/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f8fd874dcb0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8fd87417b0"/></to>
    </wire>
    <wire loc="89:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f8fd92a5020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f8fd874c960"/></to>
    </wire>
    <wire loc="91:/home/sumukh/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f8fd874c960"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f8fd87404d0"/></to>
    </wire>
    <wire loc="91:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f8fd92a4420"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f8fd8749170"/></to>
    </wire>
    <wire loc="93:/home/sumukh/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f8fd8749170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f8fd873d020"/></to>
    </wire>
    <wire loc="98:/home/sumukh/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f8fd874aa50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f8fd873e840"/></to>
    </wire>
    <wire loc="98:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f8fd86ded90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f8fd92959f0"/></to>
    </wire>
    <wire loc="55:/home/sumukh/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f8fd92959f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f8fd928d690"/></to>
    </wire>
    <wire loc="101:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f8fd87476b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f8fd879b220"/></to>
    </wire>
    <wire loc="55:/home/sumukh/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f8fd879b220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f8fd8799a20"/></to>
    </wire>
    <wire loc="102:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f8fd879a020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f8fd86cf360"/></to>
    </wire>
    <wire loc="54:/home/sumukh/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f8fd86cf360"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f8fd86ccd70"/></to>
    </wire>
    <wire loc="103:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f8fd86ccd70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f8fd86e5cf0"/></to>
    </wire>
    <wire loc="61:/home/sumukh/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f8fd86e5cf0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f8fd86df860"/></to>
    </wire>
    <wire loc="104:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f8fd86df860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f8fd9292600"/></to>
    </wire>
    <wire loc="56:/home/sumukh/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f8fd9292600"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f8fd928c2e0"/></to>
    </wire>
    <wire loc="107:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f8fd8747020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f8fd86e2980"/></to>
    </wire>
    <wire loc="62:/home/sumukh/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f8fd86e2980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f8fd86de690"/></to>
    </wire>
    <wire loc="108:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f8fd86de690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f8fd877eab0"/></to>
    </wire>
    <wire loc="56:/home/sumukh/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f8fd877eab0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f8fd877ae40"/></to>
    </wire>
    <wire loc="109:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f8fd877b950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f8fd9291300"/></to>
    </wire>
    <wire loc="68:/home/sumukh/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f8fd9291300"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f8fd8a3e9a0"/></to>
    </wire>
    <wire loc="63:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f8fd8a3e9a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f8fd8a38300"/></to>
    </wire>
    <wire loc="59:/home/sumukh/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f8fd928be60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8fd921b730"/></to>
    </wire>
    <wire loc="54:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f8fd921b730"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8fd9201b10"/></to>
    </wire>
    <wire loc="60:/home/sumukh/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f8fd92823f0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f8fd9215a60"/></to>
    </wire>
    <wire loc="56:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f8fd9215a60"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f8fd91fe740"/></to>
    </wire>
    <wire loc="63:/home/sumukh/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f8fd9288020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f8fd8b496d0"/></to>
    </wire>
    <wire loc="69:/home/sumukh/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f8fd9288020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f8fd8a41680"/></to>
    </wire>
    <wire loc="61:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f8fd8a41680"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f8fd8a39020"/></to>
    </wire>
    <wire loc="55:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f8fd8b496d0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f8fd8b1ead0"/></to>
    </wire>
    <wire loc="64:/home/sumukh/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f8fd9278d30"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7f8fd8b44020"/></to>
    </wire>
    <wire loc="56:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f8fd8b44020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f8fd8b1d3b0"/></to>
    </wire>
    <wire loc="65:/home/sumukh/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f8fd9281ae0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f8fd8b44cb0"/></to>
    </wire>
    <wire loc="57:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f8fd8b44cb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f8fd8b1c0c0"/></to>
    </wire>
    <wire loc="72:/home/sumukh/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f8fd9274020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f8fd89ba680"/></to>
    </wire>
    <wire loc="73:/home/sumukh/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f8fd926d660"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f8fd89b60c0"/></to>
    </wire>
    <wire loc="76:/home/sumukh/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f8fd9277020"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f8fd87b8a20"/></to>
    </wire>
    <wire loc="56:/home/sumukh/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f8fd87b8a20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f8fd87b2a20"/></to>
    </wire>
    <wire loc="79:/home/sumukh/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7f8fd9268e40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f8fd87baaa0"/></to>
    </wire>
    <wire loc="74:/home/sumukh/tinyos-main/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f8fd87baaa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f8fd8d721d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/sumukh/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f8fd92777f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f8fd9337c80"/></to>
    </wire>
    <wire loc="76:/home/sumukh/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7f8fd92639e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8fd976ae10"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/sumukh/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7f8fd9264a10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8fd976ae10"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/sumukh/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7f8fd9265a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8fd976ae10"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7f8fd9208020"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7f8fd91fdb40"/></to>
    </wire>
    <wire loc="63:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7f8fd91f1d90"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f8fd914d220"/></to>
    </wire>
    <wire loc="55:/home/sumukh/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f8fd914d220"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f8fd9147690"/></to>
    </wire>
    <wire loc="66:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f8fd91ee060"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f8fd8ee9330"/></to>
    </wire>
    <wire loc="100:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f8fd8ee9330"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f8fd95a4cb0"/></to>
    </wire>
    <wire loc="67:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f8fd91ed380"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f8fd8ee5b10"/></to>
    </wire>
    <wire loc="103:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f8fd8ee5b10"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x7f8fd95a6670"/></to>
    </wire>
    <wire loc="68:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f8fd91ec6a0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7f8fd8ee2020"/></to>
    </wire>
    <wire loc="105:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f8fd8ee2020"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x7f8fd95a7350"/></to>
    </wire>
    <wire loc="71:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f8fd91ea0e0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7f8fd8ed4e10"/></to>
    </wire>
    <wire loc="59:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f8fd8ed4e10"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f8fd8e36020"/></to>
    </wire>
    <wire loc="74:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f8fd91d41d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8fd8bdb250"/></to>
    </wire>
    <wire loc="112:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f8fd8bdb250"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8fd8df3600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f8fd91d32e0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7f8fd8bd8cc0"/></to>
    </wire>
    <wire loc="118:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f8fd8bd8cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f8fd91d39f0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7f8fd8bd6060"/></to>
    </wire>
    <wire loc="121:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f8fd8bd6060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f8fd91d5a80"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7f8fd8bd8020"/></to>
    </wire>
    <wire loc="116:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f8fd8bd8020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f8fd91d5160"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7f8fd8bd66b0"/></to>
    </wire>
    <wire loc="122:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f8fd8bd66b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f8fd91dab00"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7f8fd8bcecd0"/></to>
    </wire>
    <wire loc="140:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f8fd8bcecd0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f8fd91e13d0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7f8fd8bcbce0"/></to>
    </wire>
    <wire loc="144:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f8fd8bcbce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f8fd91e1c80"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7f8fd8bca500"/></to>
    </wire>
    <wire loc="145:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f8fd8bca500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f8fd91dc5f0"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7f8fd8bd12f0"/></to>
    </wire>
    <wire loc="133:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f8fd8bd12f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f8fd91d8020"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f8fd8bd1ad0"/></to>
    </wire>
    <wire loc="134:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f8fd8bd1ad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f8fd91e6520"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7f8fd8bc5ce0"/></to>
    </wire>
    <wire loc="156:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f8fd8bc5ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f8fd91dda90"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7f8fd8bc5500"/></to>
    </wire>
    <wire loc="155:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f8fd8bc5500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f8fd91d88e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7f8fd8bce2f0"/></to>
    </wire>
    <wire loc="139:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f8fd8bce2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f8fd91d71c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7f8fd8bd02f0"/></to>
    </wire>
    <wire loc="135:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f8fd8bd02f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f8fd91d7a70"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f8fd8bcf2f0"/></to>
    </wire>
    <wire loc="137:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f8fd8bcf2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7f8fd91d2d90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8fd8bb29e0"/></to>
    </wire>
    <wire loc="112:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f8fd8bb29e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8fd8df3600"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7f8fd91d2020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8fd8b8faa0"/></to>
    </wire>
    <wire loc="112:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f8fd8b8faa0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8fd8df3600"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f8fd91e2810"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f8fd8b6bb90"/></to>
    </wire>
    <wire loc="100:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f8fd91fa020"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f8fd8b58020"/></to>
    </wire>
    <wire loc="126:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7f8fd91c6820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8fd976ae10"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7f8fd91c8940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8fd976ae10"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/sumukh/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f8fd91517f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8fd8eee910"/></to>
    </wire>
    <wire loc="93:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f8fd8eee910"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8fd8ef2380"/></to>
    </wire>
    <wire loc="94:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f8fd9147690"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f8fd7e15020"/></to>
    </wire>
    <wire loc="36:/home/sumukh/tinyos-main/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f8fd7e15020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f8fd7e09a90"/></to>
    </wire>
    <wire loc="37:/home/sumukh/tinyos-main/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f8fd7e02210"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f8fd7e0e950"/></to>
    </wire>
    <wire loc="41:/home/sumukh/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f8fd7e0e950"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f8fd7df8d90"/></to>
    </wire>
    <wire loc="38:/home/sumukh/tinyos-main/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f8fd7e05e10"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f8fd8f81020"/></to>
    </wire>
    <wire loc="33:/home/sumukh/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f8fd8f81020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f8fd8f55cf0"/></to>
    </wire>
    <wire loc="43:/home/sumukh/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x7f8fd7df10b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f8fd91267b0"/></to>
    </wire>
    <wire loc="55:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f8fd91267b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f8fd907e0a0"/></to>
    </wire>
    <wire loc="44:/home/sumukh/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x7f8fd7dec570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f8fd9106c10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f8fd91220c0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f8fd9079580"/></to>
    </wire>
    <wire loc="57:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7f8fd9118020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f8fd9078d00"/></to>
    </wire>
    <wire loc="59:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f8fd9106c10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7f8fd90737e0"/></to>
    </wire>
    <wire loc="60:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f8fd9106c10"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7f8fd906fd30"/></to>
    </wire>
    <wire loc="61:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f8fd9106c10"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7f8fd906a2a0"/></to>
    </wire>
    <wire loc="63:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x7f8fd9066910"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f8fd90f4dd0"/></to>
    </wire>
    <wire loc="61:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f8fd90f4dd0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f8fd90e2020"/></to>
    </wire>
    <wire loc="63:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7f8fd90ebcb0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7f8fd90ddc00"/></to>
    </wire>
    <wire loc="62:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f8fd90f9e50"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f8fd90e10b0"/></to>
    </wire>
    <wire loc="60:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f8fd9102c70"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f8fd90eecf0"/></to>
    </wire>
    <wire loc="27:/home/sumukh/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f8fd8fd2610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f8fd91267b0"/></to>
    </wire>
    <wire loc="34:/home/sumukh/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f8fd8f370f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f8fd8f77020"/></to>
    </wire>
    <wire loc="31:/home/sumukh/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f8fd8f77020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f8fd8f72cc0"/></to>
    </wire>
    <wire loc="32:/home/sumukh/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f8fd8f5e020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f8fd91267b0"/></to>
    </wire>
    <wire loc="101:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f8fd8ee84e0"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x7f8fd959b350"/></to>
    </wire>
    <wire loc="102:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f8fd8ee7800"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x7f8fd957fcb0"/></to>
    </wire>
    <wire loc="99:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f8fd8eea020"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x7f8fd9588350"/></to>
    </wire>
    <wire loc="104:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f8fd8ee4e20"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x7f8fd958be40"/></to>
    </wire>
    <wire loc="49:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f8fd8ed4200"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f8fd8ed3c60"/></to>
    </wire>
    <wire loc="54:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f8fd8ed8a60"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f8fd8eb9df0"/></to>
    </wire>
    <wire loc="50:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0x7f8fd8ed28c0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f8fd9118020"/></to>
    </wire>
    <wire loc="55:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f8fd8eb8940"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x7f8fd8e9db70"/></to>
    </wire>
    <wire loc="77:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x7f8fd8e9db70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f8fd8e47020"/></to>
    </wire>
    <wire loc="60:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0x7f8fd8e36c00"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f8fd8eea020"/></to>
    </wire>
    <wire loc="72:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7f8fd8ea2b70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f8fd8e5d260"/></to>
    </wire>
    <wire loc="75:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x7f8fd8e9fb70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f8fd8e50020"/></to>
    </wire>
    <wire loc="78:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x7f8fd8e9cb70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f8fd8e43020"/></to>
    </wire>
    <wire loc="73:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7f8fd8ea1b70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f8fd8e590a0"/></to>
    </wire>
    <wire loc="76:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x7f8fd8e9eb70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f8fd8e4c020"/></to>
    </wire>
    <wire loc="71:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7f8fd8ea5b50"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f8fd8e763f0"/></to>
    </wire>
    <wire loc="74:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7f8fd8ea0b70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f8fd8e54020"/></to>
    </wire>
    <wire loc="80:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f8fd8e612f0"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x7f8fd8e94a00"/></to>
    </wire>
    <wire loc="81:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f8fd8e5c100"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x7f8fd8e96230"/></to>
    </wire>
    <wire loc="82:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f8fd8e58020"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x7f8fd8e969b0"/></to>
    </wire>
    <wire loc="83:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f8fd8e54e40"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x7f8fd8e95150"/></to>
    </wire>
    <wire loc="84:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f8fd8e50e40"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x7f8fd8e958d0"/></to>
    </wire>
    <wire loc="85:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f8fd8e4ce40"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x7f8fd8e930b0"/></to>
    </wire>
    <wire loc="86:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f8fd8e47e40"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x7f8fd8e93830"/></to>
    </wire>
    <wire loc="87:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f8fd8e43e40"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x7f8fd8e92020"/></to>
    </wire>
    <wire loc="69:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0x7f8fd8e32720"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8fd976ae10"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f8fd8bd8670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f8fd8bccce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f8fd8bcb500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f8fd8bbfce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f8fd8bc3ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f8fd8bd79c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f8fd8bc4ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f8fd8bc8500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f8fd8bda020"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f8fd8df2350"/></to>
    </wire>
    <wire loc="56:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f8fd8df2350"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f8fd8de9660"/></to>
    </wire>
    <wire loc="124:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f8fd8bd5370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f8fd8bd59c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f8fd8bd3160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f8fd8bc3500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f8fd8bd0ad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f8fd8bbf500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f8fd8bc0500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f8fd8bc8ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f8fd8bc4500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f8fd8bcace0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f8fd8bbd500"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f8fd8df02c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f8fd8bda990"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f8fd8bd2ae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f8fd8bcfad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f8fd8bcc500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f8fd8bd37b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f8fd8bd2490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f8fd8bd6d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f8fd8bc6ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f8fd8bc0ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f8fd8bc6500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f8fd8bd7370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f8fd8bc9ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f8fd8bc9500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f8fd8bd3e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f8fd8bbc610"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f8fd8df02c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7f8fd8df02c0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f8fd8de7890"/></to>
    </wire>
    <wire loc="53:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8de6ba0"/></to>
    </wire>
    <wire loc="54:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8de5a30"/></to>
    </wire>
    <wire loc="51:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f8fd8df3600"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8fd8de8510"/></to>
    </wire>
    <wire loc="55:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8de48b0"/></to>
    </wire>
    <wire loc="59:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7f8fd8dd7b40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f8fd8d78770"/></to>
    </wire>
    <wire loc="74:/home/sumukh/tinyos-main/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f8fd8d78770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f8fd8d721d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f8fd8de2060"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8fd8bfe9e0"/></to>
    </wire>
    <wire loc="52:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f8fd8bfe9e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8fd8c0d3b0"/></to>
    </wire>
    <wire loc="63:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f8fd8ddfc70"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f8fd8bfd760"/></to>
    </wire>
    <wire loc="55:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f8fd8bfd760"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f8fd8d50bc0"/></to>
    </wire>
    <wire loc="64:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f8fd8dd72e0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f8fd8bfdd70"/></to>
    </wire>
    <wire loc="56:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f8fd8bfdd70"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f8fd8d4c310"/></to>
    </wire>
    <wire loc="67:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f8fd8de0a70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f8fd9337c80"/></to>
    </wire>
    <wire loc="88:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7f8fd8dd3bd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8fd976ae10"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/sumukh/tinyos-main/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f8fd8d721d0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f8fd8d6db70"/></to>
    </wire>
    <wire loc="96:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f8fd8d4c310"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f8fd8d42800"/></to>
    </wire>
    <wire loc="94:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f8fd8d50bc0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f8fd8d43640"/></to>
    </wire>
    <wire loc="51:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f8fd8bfe3d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8fd8d50560"/></to>
    </wire>
    <wire loc="92:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f8fd8d50560"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8fd8d43020"/></to>
    </wire>
    <wire loc="53:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x7f8fd8c0c170"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8fd8d4b1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7f8fd8c0ce40"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f8fd95a4cb0"/></to>
    </wire>
    <wire loc="95:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f8fd8d48680"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f8fd8d43c80"/></to>
    </wire>
    <wire loc="97:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f8fd8d4b1d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8fd8d41530"/></to>
    </wire>
    <wire loc="99:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x7f8fd8d24c10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8fd8c18390"/></to>
    </wire>
    <wire loc="98:/home/sumukh/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f8fd8c18390"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8fd7d14490"/></to>
    </wire>
    <wire loc="100:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f8fd8d1e1e0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f8fd8c178d0"/></to>
    </wire>
    <wire loc="100:/home/sumukh/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f8fd8c178d0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f8fd7d139a0"/></to>
    </wire>
    <wire loc="101:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x7f8fd8d25800"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x7f8fd8cd4610"/></to>
    </wire>
    <wire loc="83:/home/sumukh/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x7f8fd8cd4610"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x7f8fd8ccc4e0"/></to>
    </wire>
    <wire loc="102:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f8fd8d1e9d0"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f8fd968c7d0"/></to>
    </wire>
    <wire loc="296:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x7f8fd8cff820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8fd976ae10"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/sumukh/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x7f8fd8cc2020"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f8fd968c7d0"/></to>
    </wire>
    <wire loc="86:/home/sumukh/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7f8fd8cc85a0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f8fd95a4cb0"/></to>
    </wire>
    <wire loc="87:/home/sumukh/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7f8fd8cc77e0"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x7f8fd95a2020"/></to>
    </wire>
    <wire loc="88:/home/sumukh/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x7f8fd8cc5990"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x7f8fd95a1350"/></to>
    </wire>
    <wire loc="89:/home/sumukh/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x7f8fd8cc4ca0"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x7f8fd95a0670"/></to>
    </wire>
    <wire loc="99:/home/sumukh/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f8fd8c17150"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f8fd7d13220"/></to>
    </wire>
    <wire loc="101:/home/sumukh/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f8fd7cfe400"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f8fd8c161f0"/></to>
    </wire>
    <wire loc="103:/home/sumukh/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f8fd7cfebc0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f8fd7d16410"/></to>
    </wire>
    <wire loc="69:/home/sumukh/tinyos-main/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f8fd7cfd7a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8fd976ae10"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f8fd8ba5c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f8fd8bb0da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f8fd8ba9b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f8fd8ba3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f8fd8ba3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f8fd8b97670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f8fd8b99670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f8fd8bae120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f8fd8b9b670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f8fd8ba8c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f8fd8ba6c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f8fd8b9fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f8fd8ba2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f8fd8bb1760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f8fd8df2350"/></to>
    </wire>
    <wire loc="124:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f8fd8bacaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f8fd8bab120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f8fd8bab870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f8fd8b9be50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f8fd8baedc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f8fd8ba6480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f8fd8ba8480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f8fd8bb0750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f8fd8b98e50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f8fd8b99e50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f8fd8b9e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f8fd8b9ce50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f8fd8ba1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f8fd8b97e50"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f8fd8df02c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f8fd8bb0100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f8fd8ba9370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f8fd8ba5480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f8fd8ba2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f8fd8ba4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f8fd8baf450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f8fd8ba4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f8fd8baa020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f8fd8baacc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f8fd8b9c670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f8fd8b9de50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f8fd8bac450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f8fd8b9d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f8fd8b98670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f8fd8b9ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f8fd8bafaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f8fd8b9f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f8fd8bae770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f8fd8ba1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f8fd8baa670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f8fd8b95020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f8fd8df02c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f8fd8b82c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f8fd8b8dda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f8fd8b85b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f8fd8b7f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f8fd8b7fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f8fd8b74670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f8fd8b76670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f8fd8b8a120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f8fd8b77670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f8fd8b84c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f8fd8b83c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f8fd8b7ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f8fd8b7e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f8fd8b8e760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f8fd8df2350"/></to>
    </wire>
    <wire loc="124:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f8fd8b89aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f8fd8b88120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f8fd8b88870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f8fd8b77e50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f8fd8b8adc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f8fd8b83480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f8fd8b84480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f8fd8b8d750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f8fd8b75e50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f8fd8b76e50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f8fd8b7b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f8fd8b78e50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f8fd8b7d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f8fd8b74e50"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f8fd8df02c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f8fd8b8d100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f8fd8b85370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f8fd8b82480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f8fd8b7ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f8fd8b81670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f8fd8b8b450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f8fd8b81e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f8fd8b87020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f8fd8b87cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f8fd8b78670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f8fd8b7ae50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f8fd8b89450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f8fd8b7a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f8fd8b75670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f8fd8b7be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f8fd8b8baa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f8fd8b7c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f8fd8b8a770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f8fd8b7de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f8fd8b87670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f8fd8b72020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f8fd8df02c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7f8fd8b409f0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7f8fd8b1b060"/></to>
    </wire>
    <wire loc="59:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7f8fd8b42190"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7f8fd8b1b7f0"/></to>
    </wire>
    <wire loc="66:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7f8fd8b1a220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f8fd914d220"/></to>
    </wire>
    <wire loc="69:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f8fd8b0fd60"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f8fd8eea020"/></to>
    </wire>
    <wire loc="70:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f8fd8b0c080"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f8fd8ee9330"/></to>
    </wire>
    <wire loc="71:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f8fd8b06370"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7f8fd8ee4e20"/></to>
    </wire>
    <wire loc="74:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f8fd8b0f1e0"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7f8fd8ed4200"/></to>
    </wire>
    <wire loc="77:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f8fd8b056e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8fd8a68c30"/></to>
    </wire>
    <wire loc="112:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f8fd8a68c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8fd8df3600"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f8fd8b044e0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f8fd8a678f0"/></to>
    </wire>
    <wire loc="111:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f8fd8a678f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f8fd8df2350"/></to>
    </wire>
    <wire loc="79:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f8fd8b01020"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f8fd8a662f0"/></to>
    </wire>
    <wire loc="115:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f8fd8a662f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f8fd8b01730"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7f8fd8a65cc0"/></to>
    </wire>
    <wire loc="119:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f8fd8a65cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f8fd8b01e60"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7f8fd8a64370"/></to>
    </wire>
    <wire loc="120:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f8fd8a64370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f8fd8aff5c0"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7f8fd8a63d00"/></to>
    </wire>
    <wire loc="124:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f8fd8a63d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f8fd8b026b0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f8fd8a5cc60"/></to>
    </wire>
    <wire loc="137:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f8fd8a5cc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f8fd8b03020"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7f8fd8a4b020"/></to>
    </wire>
    <wire loc="168:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f8fd8a4b020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f8fd8df02c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f8fd8b03d80"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f8fd8a51670"/></to>
    </wire>
    <wire loc="158:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f8fd8a51670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f8fd8affd00"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f8fd8a5e480"/></to>
    </wire>
    <wire loc="134:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f8fd8a5e480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f8fd8afd0c0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f8fd8a5ae50"/></to>
    </wire>
    <wire loc="141:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f8fd8a5ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f8fd8afd990"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f8fd8a59670"/></to>
    </wire>
    <wire loc="142:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f8fd8a59670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f8fd8afe930"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7f8fd8a607b0"/></to>
    </wire>
    <wire loc="128:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f8fd8a607b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f8fd8afb530"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7f8fd8a4ee50"/></to>
    </wire>
    <wire loc="163:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f8fd8a4ee50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f8fd8afc380"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f8fd8a50670"/></to>
    </wire>
    <wire loc="160:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f8fd8a50670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f8fd8afcbf0"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f8fd8a50e50"/></to>
    </wire>
    <wire loc="161:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f8fd8a50e50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f8fd8af6780"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f8fd8a3e020"/></to>
    </wire>
    <wire loc="62:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f8fd8a3e020"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f8fd8a39850"/></to>
    </wire>
    <wire loc="98:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f8fd8b164d0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f8fd89ba680"/></to>
    </wire>
    <wire loc="99:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f8fd8b154f0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f8fd89b60c0"/></to>
    </wire>
    <wire loc="100:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f8fd8b13200"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f8fd89b5550"/></to>
    </wire>
    <wire loc="101:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f8fd8b07570"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f8fd89ad480"/></to>
    </wire>
    <wire loc="61:/home/sumukh/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f8fd89ad480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f8fd899f8b0"/></to>
    </wire>
    <wire loc="104:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f8fd8afa110"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f8fd9337c80"/></to>
    </wire>
    <wire loc="139:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f8fd8a5bc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f8fd8a65020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f8fd8a5fc70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f8fd8a59e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f8fd8a4d670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f8fd8a5ec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f8fd8a55e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f8fd8a58670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f8fd8a61370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f8fd8a61ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f8fd8a51e50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f8fd8a63060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f8fd8a5c480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f8fd8a66940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f8fd8a54670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f8fd8a52e50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f8fd8a57670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f8fd8a4de50"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f8fd8df02c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f8fd8a5f490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f8fd8a5b480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f8fd8a58e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f8fd8a5a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f8fd8a65670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f8fd8a60160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f8fd8a60e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f8fd8a52670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f8fd8a53e50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f8fd8a636b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f8fd8a53670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f8fd8a4e670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f8fd8a54e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f8fd8a55670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f8fd8a649c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f8fd8a57e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7f8fd8a3d1a0"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7f8fd8a38aa0"/></to>
    </wire>
    <wire loc="59:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f8fd8a23150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f8fd9337c80"/></to>
    </wire>
    <wire loc="68:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f8fd8a361a0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f8fd8ee9330"/></to>
    </wire>
    <wire loc="69:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f8fd8a35390"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7f8fd8ee84e0"/></to>
    </wire>
    <wire loc="70:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f8fd8a346b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7f8fd8ee7800"/></to>
    </wire>
    <wire loc="71:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f8fd8a33a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f8fd8ed8a60"/></to>
    </wire>
    <wire loc="72:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f8fd8a326e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8fd8801710"/></to>
    </wire>
    <wire loc="112:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f8fd8801710"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8fd8df3600"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f8fd8a31530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7f8fd87e6ad0"/></to>
    </wire>
    <wire loc="167:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f8fd87e6ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f8fd8df02c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f8fd8a30ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7f8fd87fb120"/></to>
    </wire>
    <wire loc="123:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f8fd87fb120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f8fd8a303a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7f8fd87fbdc0"/></to>
    </wire>
    <wire loc="125:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f8fd87fbdc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f8fd8a2f330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f8fd89ba680"/></to>
    </wire>
    <wire loc="77:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f8fd8a2e1e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f8fd89b60c0"/></to>
    </wire>
    <wire loc="78:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f8fd8a2cd70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f8fd89b5550"/></to>
    </wire>
    <wire loc="79:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f8fd8a2eb90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f8fd920ab80"/></to>
    </wire>
    <wire loc="81:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f8fd8a273e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f8fd87f3ad0"/></to>
    </wire>
    <wire loc="141:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f8fd87f3ad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f8fd8a27cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f8fd87f22f0"/></to>
    </wire>
    <wire loc="142:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f8fd87f22f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f8fd8a28b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7f8fd87fac30"/></to>
    </wire>
    <wire loc="127:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f8fd87fac30"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f8fd8a256d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7f8fd87e62f0"/></to>
    </wire>
    <wire loc="164:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f8fd87e62f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f8fd8a26590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f8fd87e82f0"/></to>
    </wire>
    <wire loc="160:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f8fd87e82f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f8fd8a26e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f8fd87e8ad0"/></to>
    </wire>
    <wire loc="161:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f8fd87e8ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f8fd8a24020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f8fd87eaad0"/></to>
    </wire>
    <wire loc="159:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f8fd87eaad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f8fd8a248b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f8fd8800db0"/></to>
    </wire>
    <wire loc="115:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f8fd8800db0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7f8fd8a179d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8fd976ae10"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/sumukh/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f8fd893f7c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f8fd8f81020"/></to>
    </wire>
    <wire loc="65:/home/sumukh/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7f8fd899a820"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f8fd89484e0"/></to>
    </wire>
    <wire loc="69:/home/sumukh/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f8fd899cb80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f8fd8929b80"/></to>
    </wire>
    <wire loc="65:/home/sumukh/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f8fd8929b80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f8fd88242b0"/></to>
    </wire>
    <wire loc="61:/home/sumukh/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f8fd89377d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f8fd8832150"/></to>
    </wire>
    <wire loc="59:/home/sumukh/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f8fd8938200"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8fd8923350"/></to>
    </wire>
    <wire loc="35:/home/sumukh/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f8fd8923350"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8fd88b0280"/></to>
    </wire>
    <wire loc="62:/home/sumukh/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f8fd882c640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f8fd8881cf0"/></to>
    </wire>
    <wire loc="63:/home/sumukh/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f8fd887b1d0"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7f8fd8923d40"/></to>
    </wire>
    <wire loc="36:/home/sumukh/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7f8fd8923d40"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f8fd88b0a90"/></to>
    </wire>
    <wire loc="66:/home/sumukh/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f8fd8822690"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7f8fd891e3b0"/></to>
    </wire>
    <wire loc="37:/home/sumukh/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7f8fd891e3b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f8fd88acdd0"/></to>
    </wire>
    <wire loc="37:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f8fd88acdd0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f8fd7c32650"/></to>
    </wire>
    <wire loc="35:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f8fd88b0280"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8fd7c379f0"/></to>
    </wire>
    <wire loc="36:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f8fd88b0a90"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f8fd7c36260"/></to>
    </wire>
    <wire loc="39:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f8fd7c30a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f8fd9102c70"/></to>
    </wire>
    <wire loc="40:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f8fd7c2bc90"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f8fd90f4dd0"/></to>
    </wire>
    <wire loc="41:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f8fd7c29c20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f8fd90f9e50"/></to>
    </wire>
    <wire loc="42:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7f8fd7c24020"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7f8fd90ebcb0"/></to>
    </wire>
    <wire loc="74:/home/sumukh/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f8fd8877490"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8fd976ae10"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/sumukh/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f8fd8827a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8fd976ae10"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/sumukh/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f8fd8809370"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f8fd8813d90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/sumukh/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f8fd8813d90"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f8fd89377d0"/></to>
    </wire>
    <wire loc="139:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f8fd87f4800"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f8fd87ffaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f8fd87f8800"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f8fd87f2ad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f8fd87fedc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f8fd87ea2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f8fd87f7800"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f8fd87f5800"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f8fd87eead0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f8fd87f12f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f8fd8800440"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f8fd8df2350"/></to>
    </wire>
    <wire loc="124:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f8fd87fb770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f8fd87fa5e0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f8fd87fcaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f8fd87f5020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f8fd87f7020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f8fd87ff450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f8fd87e7ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f8fd87ed2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f8fd87ebad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f8fd87ef2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f8fd87f8020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f8fd87f4020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f8fd87f1ad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f8fd87f32f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f8fd87fe120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f8fd87f9940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f8fd87eb2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f8fd87ecad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f8fd87ec2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f8fd87e72f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f8fd87edad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f8fd87fe770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f8fd87ee2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f8fd87fc450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f8fd87efad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f8fd87f92f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f8fd87e4020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f8fd8df02c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/sumukh/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f8fd87b6920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f8fd87b3940"/></to>
    </wire>
    <wire loc="54:/home/sumukh/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f8fd87bc9a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8fd87b3080"/></to>
    </wire>
    <wire loc="56:/home/sumukh/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f8fd8796e60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f8fd879a020"/></to>
    </wire>
    <wire loc="60:/home/sumukh/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f8fd8795ae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f8fd8797690"/></to>
    </wire>
    <wire loc="74:/home/sumukh/tinyos-main/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f8fd8797690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f8fd8d721d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/sumukh/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f8fd87948f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f8fd87b8a20"/></to>
    </wire>
    <wire loc="62:/home/sumukh/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f8fd8793170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f8fd89b60c0"/></to>
    </wire>
    <wire loc="57:/home/sumukh/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7f8fd877b200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7f8fd8777570"/></to>
    </wire>
    <wire loc="58:/home/sumukh/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f8fd87763f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f8fd877b950"/></to>
    </wire>
    <wire loc="62:/home/sumukh/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f8fd8776a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f8fd89b60c0"/></to>
    </wire>
    <wire loc="94:/home/sumukh/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f8fd873dd70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f8fd87476b0"/></to>
    </wire>
    <wire loc="95:/home/sumukh/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f8fd873cb10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f8fd8747020"/></to>
    </wire>
    <wire loc="100:/home/sumukh/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f8fd873b2f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f8fd89ba680"/></to>
    </wire>
    <wire loc="101:/home/sumukh/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f8fd873a170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f8fd89b60c0"/></to>
    </wire>
    <wire loc="102:/home/sumukh/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f8fd873ab70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f8fd86ec410"/></to>
    </wire>
    <wire loc="180:/home/sumukh/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7f8fd870ddb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8fd976ae10"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/sumukh/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f8fd86e0800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f8fd86dc580"/></to>
    </wire>
    <wire loc="74:/home/sumukh/tinyos-main/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f8fd86dc580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f8fd8d721d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/sumukh/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f8fd86c71c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f8fd9298670"/></to>
    </wire>
    <wire loc="67:/home/sumukh/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f8fd85ac4e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f8fd85a3e10"/></to>
    </wire>
    <wire loc="67:/home/sumukh/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f8fd86101a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f8fd85b2400"/></to>
    </wire>
    <wire loc="69:/home/sumukh/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f8fd85afe60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8fd85a37c0"/></to>
    </wire>
    <wire loc="60:/home/sumukh/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f8fd85a9940"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f8fd8610b20"/></to>
    </wire>
    <wire loc="69:/home/sumukh/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f8fd85b2d90"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f8fd85aa020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/sumukh/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f8fd85b1a50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f8fd85ab4c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/sumukh/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f8fd85a9020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7f8fd82741e0"/></to>
    </wire>
    <wire loc="64:/home/sumukh/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f8fd85aa020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f8fd8471de0"/></to>
    </wire>
    <wire loc="65:/home/sumukh/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f8fd85ab4c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f8fd84716c0"/></to>
    </wire>
    <wire loc="66:/home/sumukh/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7f8fd8470c20"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f8fd85a9020"/></to>
    </wire>
    <wire loc="70:/home/sumukh/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f8fd859e750"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f8fd85a9940"/></to>
    </wire>
    <wire loc="71:/home/sumukh/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f8fd846e920"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f8fd85a9940"/></to>
    </wire>
    <wire loc="72:/home/sumukh/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f8fd8465cc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f8fd85a9940"/></to>
    </wire>
    <wire loc="74:/home/sumukh/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f8fd846f590"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f8fd8595340"/></to>
    </wire>
    <wire loc="75:/home/sumukh/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7f8fd846fe80"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7f8fd859ae50"/></to>
    </wire>
    <wire loc="77:/home/sumukh/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7f8fd858f680"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7f8fd846ae10"/></to>
    </wire>
    <wire loc="78:/home/sumukh/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f8fd858e020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f8fd843f150"/></to>
    </wire>
    <wire loc="48:/home/sumukh/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f8fd843f150"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f8fd8437020"/></to>
    </wire>
    <wire loc="80:/home/sumukh/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f8fd845cd20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f8fd843f960"/></to>
    </wire>
    <wire loc="49:/home/sumukh/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f8fd843f960"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f8fd8436080"/></to>
    </wire>
    <wire loc="332:/home/sumukh/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7f8fd853be40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8fd976ae10"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/sumukh/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7f8fd8572d10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8fd976ae10"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/sumukh/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7f8fd853d400"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8fd976ae10"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/sumukh/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f8fd85360c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8fd976ae10"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/home/sumukh/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7f8fd846c020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8fd976ae10"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/sumukh/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7f8fd846c800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8fd976ae10"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/sumukh/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f8fd8439d50"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f8fd8437820"/></to>
    </wire>
    <wire loc="51:/home/sumukh/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f8fd8437820"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f8fd83eedd0"/></to>
    </wire>
    <wire loc="52:/home/sumukh/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f8fd8436080"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f8fd83ed5a0"/></to>
    </wire>
    <wire loc="50:/home/sumukh/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f8fd8437020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f8fd83ee630"/></to>
    </wire>
    <wire loc="53:/home/sumukh/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f8fd8435360"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f8fd8358570"/></to>
    </wire>
    <wire loc="33:/home/sumukh/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f8fd8358570"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f8fd8285cd0"/></to>
    </wire>
    <wire loc="53:/home/sumukh/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f8fd83e9cc0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f8fd8435360"/></to>
    </wire>
    <wire loc="56:/home/sumukh/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x7f8fd83ec610"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x7f8fd83cb480"/></to>
    </wire>
    <wire loc="60:/home/sumukh/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x7f8fd83cb480"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x7f8fd83c24b0"/></to>
    </wire>
    <wire loc="57:/home/sumukh/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x7f8fd83ecdf0"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x7f8fd83cbd20"/></to>
    </wire>
    <wire loc="61:/home/sumukh/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x7f8fd83cbd20"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x7f8fd83c2d90"/></to>
    </wire>
    <wire loc="58:/home/sumukh/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x7f8fd83ea620"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x7f8fd83ca5f0"/></to>
    </wire>
    <wire loc="62:/home/sumukh/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x7f8fd83ca5f0"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x7f8fd83c16d0"/></to>
    </wire>
    <wire loc="66:/home/sumukh/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x7f8fd83c8dd0"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x7f8fd83be650"/></to>
    </wire>
    <wire loc="64:/home/sumukh/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x7f8fd83c9b80"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x7f8fd83bf470"/></to>
    </wire>
    <wire loc="65:/home/sumukh/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x7f8fd83c8540"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x7f8fd83bfd50"/></to>
    </wire>
    <wire loc="68:/home/sumukh/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f8fd83bdb30"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f8fd95cb020"/></to>
    </wire>
    <wire loc="69:/home/sumukh/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f8fd83bc980"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f8fd968c7d0"/></to>
    </wire>
    <wire loc="34:/home/sumukh/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f8fd82810f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f8fd8352570"/></to>
    </wire>
    <wire loc="31:/home/sumukh/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f8fd8352570"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f8fd82913c0"/></to>
    </wire>
    <wire loc="32:/home/sumukh/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f8fd828e660"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f8fd834d390"/></to>
    </wire>
    <wire loc="55:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f8fd834d390"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f8fd8339190"/></to>
    </wire>
    <wire loc="56:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f8fd83487c0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f8fd8334580"/></to>
    </wire>
    <wire loc="57:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7f8fd8346020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f8fd8333d00"/></to>
    </wire>
    <wire loc="59:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f8fd83401d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7f8fd832e7e0"/></to>
    </wire>
    <wire loc="60:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f8fd83401d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7f8fd832ad30"/></to>
    </wire>
    <wire loc="61:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f8fd83401d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7f8fd83252a0"/></to>
    </wire>
    <wire loc="27:/home/sumukh/tinyos-main/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f8fd8298410"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f8fd834d390"/></to>
    </wire>
    <wire loc="66:/home/sumukh/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f8fd81b92f0"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7f8fd81e2b70"/></to>
    </wire>
    <wire loc="67:/home/sumukh/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f8fd81b48d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f8fd81e9870"/></to>
    </wire>
    <wire loc="63:/home/sumukh/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f8fd81e9870"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f8fd7ad5020"/></to>
    </wire>
    <wire loc="68:/home/sumukh/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f8fd81b35d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f8fd81e8590"/></to>
    </wire>
    <wire loc="64:/home/sumukh/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f8fd81e8590"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f8fd8613e10"/></to>
    </wire>
    <wire loc="71:/home/sumukh/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f8fd8193020"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f8fd81b7a30"/></to>
    </wire>
    <wire loc="65:/home/sumukh/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f8fd81e7270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f8fd8612ab0"/></to>
    </wire>
    <wire loc="66:/home/sumukh/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f8fd81e58f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f8fd86101a0"/></to>
    </wire>
    <wire loc="60:/home/sumukh/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f8fd7ad5c90"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f8fd8246a00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/sumukh/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f8fd7ad4930"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f8fd8612ab0"/></to>
    </wire>
    <wire loc="54:/home/sumukh/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f8fd8246a00"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f8fd81f6580"/></to>
    </wire>
    <wire loc="55:/home/sumukh/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f8fd81f5400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f8fd8614600"/></to>
    </wire>
    <wire loc="56:/home/sumukh/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f8fd81f4060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f8fd8612ab0"/></to>
    </wire>
    <wire loc="57:/home/sumukh/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f8fd81f3720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f8fd8613e10"/></to>
    </wire>
    <wire loc="169:/home/sumukh/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f8fd81f2480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8fd976ae10"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/sumukh/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f8fd81f2c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8fd976ae10"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:/home/sumukh/tinyos-main/tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0x7f8fd81ad890"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8fd976ae10"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/sumukh/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f8fd818c3c0"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f8fd8193020"/></to>
    </wire>
    <wire loc="44:/home/sumukh/tinyos-main/tos/lib/printf/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f8fd8186ac0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f8fd95d2830"/></to>
    </wire>
    <wire loc="47:/home/sumukh/tinyos-main/tos/lib/printf/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f8fd8183210"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f8fd86175d0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="BaseStationC" loc="3:../InterceptBase/BaseStationC.nc">
      <configuration/>
    </component>
    <component qname="MainC" loc="56:/home/sumukh/tinyos-main/tos/system/MainC.nc">
      <documentation loc="1:/home/sumukh/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/home/sumukh/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/home/sumukh/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/home/sumukh/tinyos-main/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/home/sumukh/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/home/sumukh/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/home/sumukh/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/home/sumukh/tinyos-main/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/home/sumukh/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/home/sumukh/tinyos-main/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/home/sumukh/tinyos-main/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/sumukh/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/sumukh/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/sumukh/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/sumukh/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/home/sumukh/tinyos-main/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BaseStationP" loc="8:../InterceptBase/BaseStationP.nc" safe="">
      <documentation loc="33:/home/sumukh/tinyos-main/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/sumukh/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/sumukh/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/sumukh/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/home/sumukh/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/home/sumukh/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="53:/home/sumukh/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <documentation loc="43:/home/sumukh/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/home/sumukh/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/home/sumukh/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/home/sumukh/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="85(AlarmMultiplexC.Alarm):/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="70:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/home/sumukh/tinyos-main/tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="11:/home/sumukh/tinyos-main/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/home/sumukh/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/home/sumukh/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="41:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128Timer1P" loc="42:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc" safe="">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed9e0"/>
            <typename><typedef-ref name="TOne" ref="0x7f8fd96b3a90"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/home/sumukh/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="11:/home/sumukh/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/home/sumukh/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/home/sumukh/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed9e0"/>
            <typename><typedef-ref name="TOne" ref="0x7f8fd96b3a90"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="54(Counter32khz32C.Transform32):/home/sumukh/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed9e0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8fd96edd50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed9e0"/>
            <typename><typedef-ref name="TOne" ref="0x7f8fd96b3a90"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x7f8fd96b22f0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/home/sumukh/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed9e0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8fd96edd50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed9e0"/>
            <typename><typedef-ref name="TOne" ref="0x7f8fd96b3a90"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/home/sumukh/tinyos-main/tos/system/NoInitC.nc" safe="">
      <documentation loc="10:/home/sumukh/tinyos-main/tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="83:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="70:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-30 17:31:08 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="40(HplCC2420InterruptsC.CaptureSFDC):/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="35:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/home/sumukh/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/home/sumukh/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="45:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc" safe="">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.6 2008-06-26 04:39:12 regehr Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @author David Moss&#10; @version @version $Revision: 1.6 $ $Date: 2008-06-26 04:39:12 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/home/sumukh/tinyos-main/tos/system/StateC.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/home/sumukh/tinyos-main/tos/system/StateImplC.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/home/sumukh/tinyos-main/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="37(CC2420SpiWireC.HplCC2420SpiC):/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="80:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/home/sumukh/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/home/sumukh/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/home/sumukh/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/home/sumukh/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/home/sumukh/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/sumukh/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/home/sumukh/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/home/sumukh/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/sumukh/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420SpiP" loc="38:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc" safe="">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
        <short>&#10; Automatic slave select update for the SpiResource&#10;&#10; </short>
        <long>&#10; Automatic slave select update for the SpiResource&#10;&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/sumukh/tinyos-main/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/sumukh/tinyos-main/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="39:/home/sumukh/tinyos-main/tos/platforms/micaz/LocalIeeeEui64C.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/home/sumukh/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/home/sumukh/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/home/sumukh/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/sumukh/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed9e0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8fd96edd50"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/sumukh/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/sumukh/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/home/sumukh/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8fd96ed5a0"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f8fd89183d0"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/sumukh/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/sumukh/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8fd96ed5a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/sumukh/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8fd96ed5a0"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/sumukh/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/sumukh/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8fd96ed5a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/home/sumukh/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/sumukh/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/sumukh/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/home/sumukh/tinyos-main/tos/system/RandomC.nc">
      <documentation loc="33:/home/sumukh/tinyos-main/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/sumukh/tinyos-main/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/home/sumukh/tinyos-main/tos/system/StateC.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/home/sumukh/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/home/sumukh/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/home/sumukh/tinyos-main/tos/system/StateC.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/home/sumukh/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/home/sumukh/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/home/sumukh/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/home/sumukh/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):/home/sumukh/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/home/sumukh/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/home/sumukh/tinyos-main/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/home/sumukh/tinyos-main/tos/system/StateC.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/home/sumukh/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/home/sumukh/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/sumukh/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/sumukh/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/sumukh/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/sumukh/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/sumukh/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/sumukh/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/sumukh/tinyos-main/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/sumukh/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/sumukh/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/sumukh/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/sumukh/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/home/sumukh/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/home/sumukh/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/home/sumukh/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/home/sumukh/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="38:/home/sumukh/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="78:/home/sumukh/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <documentation loc="69:/home/sumukh/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega128 serial port HPL.</short>
        <long> &#10; Private component of the Atmega128 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/home/sumukh/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/home/sumukh/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/home/sumukh/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/home/sumukh/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="41:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega128 timer 2.</short>
        <long>&#10; HPL interface to Atmega128 timer 2.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3P" loc="42:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
        <short>&#10; Internal componentr of the HPL interface to Atmega128 timer 3.</short>
        <long>&#10; Internal componentr of the HPL interface to Atmega128 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="44(InitThreeP.InitThree):/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="42(CounterThree16C.NCounter):/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96eb1f0"/>
            <typename><typedef-ref name="TThree" ref="0x7f8fd96b3e30"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="54(CounterMicro32C.Transform32):/home/sumukh/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96eb1f0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f8fd96eb560"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96eb1f0"/>
            <typename><typedef-ref name="TThree" ref="0x7f8fd96b3e30"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x7f8fd96b2770"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/sumukh/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/sumukh/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):/home/sumukh/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/home/sumukh/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):/home/sumukh/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/sumukh/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f8fd96331b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/home/sumukh/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/home/sumukh/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/home/sumukh/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/sumukh/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):/home/sumukh/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/home/sumukh/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
          <value cst="I:250">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:/home/sumukh/tinyos-main/tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:/home/sumukh/tinyos-main/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/home/sumukh/tinyos-main/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/home/sumukh/tinyos-main/tos/lib/printf/PutcharP.nc">
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:/home/sumukh/tinyos-main/tos/lib/printf/SerialStartP.nc">
      <documentation loc="33:/home/sumukh/tinyos-main/tos/lib/printf/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RssiBaseC" loc="6:RssiBaseC.nc">
      <documentation loc="32:ApplicationDefinitions.h">
        <short>&#10; </short>
        <long>&#10; @author Dimas Abreu Dutra&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f8fd95662f0" loc="40:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f8fd9566660" loc="40:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f8fd95669d0" loc="40:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f8fd955b9f0" loc="41:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f8fd955bd80" loc="42:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f8fd9558170" loc="43:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f8fd95584c0" loc="44:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f8fd94c7aa0" loc="42:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f8fd94c7e30" loc="43:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f8fd94c4200" loc="44:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f8fd94c4550" loc="45:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="85:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="70:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/home/sumukh/tinyos-main/tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="11:/home/sumukh/tinyos-main/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/home/sumukh/tinyos-main/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/home/sumukh/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f8fd8fd15f0" loc="44:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f8fd8fd15f0"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x7f8fd8fd1960" loc="44:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f8fd8fbc1f0" loc="51:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f8fd8fbc1f0"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7f8fd8fbc9b0" loc="52:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f8fd8fbc9b0"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x7f8fd8fbccd0" loc="53:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f8fd8f745b0" loc="42:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f8fd8f745b0"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7f8fd8f74d70" loc="43:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f8fd8f74d70"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/sumukh/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f8fd8f54570" loc="55:/home/sumukh/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f8fd8f54570"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f8fd8f54d40" loc="56:/home/sumukh/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f8fd8f54d40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f8fd8f53160" loc="57:/home/sumukh/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f8fd8f53160"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f8fd8f53940" loc="58:/home/sumukh/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f8fd8f53940"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f8fd8f53d10" loc="59:/home/sumukh/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f8fd8f51540" loc="60:/home/sumukh/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f8fd8f51540"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/sumukh/tinyos-main/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f8fd8f82770" loc="52:/home/sumukh/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f8fd8f82770"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f8fd8f30020" loc="53:/home/sumukh/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f8fd8f30020"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f8fd8f30410" loc="54:/home/sumukh/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f8fd8f30410"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f8fd8f30bf0" loc="55:/home/sumukh/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f8fd8f30bf0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f8fd8f2f020" loc="56:/home/sumukh/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="40:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="35:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/home/sumukh/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/home/sumukh/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x7f8fd8e753f0" loc="39:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x7f8fd8e75780" loc="40:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x7f8fd8e75b10" loc="41:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f8fd8e75e60" loc="42:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/home/sumukh/tinyos-main/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/home/sumukh/tinyos-main/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/home/sumukh/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f8fd8c76690" loc="83:/home/sumukh/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/sumukh/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f8fd8c6c920" loc="42:/home/sumukh/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/sumukh/tinyos-main/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/sumukh/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/sumukh/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/sumukh/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f8fd894aa60" loc="46:/home/sumukh/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f8fd894aa60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f8fd89183d0" loc="23:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f8fd89183d0"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7f8fd89186e0" loc="23:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f8fd890fd60" loc="23:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f8fd890fd60"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7f8fd890c0d0" loc="23:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/sumukh/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/sumukh/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f8fd88a7720" loc="46:/home/sumukh/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f8fd88a7720"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/sumukh/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f8fd8875880" loc="46:/home/sumukh/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f8fd8875880"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f8fd8875bb0" loc="46:/home/sumukh/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/sumukh/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/sumukh/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/sumukh/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/sumukh/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/sumukh/tinyos-main/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/sumukh/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/home/sumukh/tinyos-main/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/home/sumukh/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f8fd8263730" loc="47:/home/sumukh/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f8fd96331b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/sumukh/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/sumukh/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f8fd825a320" loc="43:/home/sumukh/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f8fd96331b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/sumukh/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/sumukh/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f8fd823fe10" loc="45:/home/sumukh/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/home/sumukh/tinyos-main/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/home/sumukh/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7f8fd81e3da0" loc="42:/home/sumukh/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7f8fd81e3da0"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7f8fd81e0180" loc="42:/home/sumukh/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="1" name="SerialIntercept" ref="0x7f8fd95dcb00" loc="5:../InterceptBase/BaseStationC.nc">
      <component-ref qname="BaseStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIntercept" scoped="" ref="0x7f8fd95dcb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f8fd96331b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7f8fd95dce80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioIntercept" ref="0x7f8fd95d6e40" loc="4:../InterceptBase/BaseStationC.nc">
      <component-ref qname="BaseStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioIntercept" scoped="" ref="0x7f8fd95d6e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f8fd96331b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7f8fd95dc1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f8fd95d4cf0" loc="58:/home/sumukh/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f8fd95d4cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd95d30a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f8fd95d2830" loc="57:/home/sumukh/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f8fd95d2830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f8fd95d2bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f8fd95cbd50" loc="52:/home/sumukh/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f8fd95cbd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd95ca100"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8fd95d3c00" loc="46:/home/sumukh/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f8fd95d3c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd95ce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f8fd95cb020" loc="50:/home/sumukh/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f8fd95cb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f8fd95cb3a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f8fd95cb530"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f8fd95cb6c0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f8fd95cb850"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f8fd95cb9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f8fd95c37a0" loc="45:/home/sumukh/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7f8fd95c37a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd95c3b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8fd95c30c0" loc="44:/home/sumukh/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f8fd95c30c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd95c3440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7f8fd95c2020" loc="46:/home/sumukh/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7f8fd95c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd95c23a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f8fd95be110" loc="41:/home/sumukh/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f8fd95be110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd95be490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f8fd95c59e0" loc="40:/home/sumukh/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f8fd95c59e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd95c5d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f8fd95b9cd0" loc="45:/home/sumukh/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f8fd95b9cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd95b80a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x7f8fd95b4ad0" loc="44:/home/sumukh/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x7f8fd95b4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd95b4e50"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd95b9020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd95b91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd95b9340"/>
        <function-ref name="get" scoped="" ref="0x7f8fd95b94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd95b9660"/>
        <function-ref name="set" scoped="" ref="0x7f8fd95b97f0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd95b9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f8fd95bb530" loc="43:/home/sumukh/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f8fd95bb530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd95bb8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7f8fd9572cb0" loc="100:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7f8fd9572cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd9571610"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd95717a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd9571930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd9571ac0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd9571c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd9571de0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd9570020"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd95701b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7f8fd958e4e0" loc="74:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7f8fd958e4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd958e860"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd958e9f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd958eb80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd958ed10"/>
        <function-ref name="get" scoped="" ref="0x7f8fd958d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd958d1b0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd958d340"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd958d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7f8fd9582350" loc="85:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7f8fd9582350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd95826d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd9582860"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd95829f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd9582b80"/>
        <function-ref name="get" scoped="" ref="0x7f8fd9582d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd9581020"/>
        <function-ref name="set" scoped="" ref="0x7f8fd95811b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd9581340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7f8fd9578cb0" loc="94:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7f8fd9578cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd95770a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd9577230"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd95773c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd9577550"/>
        <function-ref name="get" scoped="" ref="0x7f8fd95776e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd9577870"/>
        <function-ref name="set" scoped="" ref="0x7f8fd9577a00"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd9577b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7f8fd95a6670" loc="52:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7f8fd95a6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd95a69f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd95a6b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd95a6d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd95a5020"/>
        <function-ref name="get" scoped="" ref="0x7f8fd95a51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd95a5340"/>
        <function-ref name="set" scoped="" ref="0x7f8fd95a54d0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd95a5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7f8fd957b670" loc="92:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7f8fd957b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd957b9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd957bb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd957bd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd9579020"/>
        <function-ref name="get" scoped="" ref="0x7f8fd95791b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd9579340"/>
        <function-ref name="set" scoped="" ref="0x7f8fd95794d0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd9579660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7f8fd95a4cb0" loc="55:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7f8fd95a4cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd95a30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd95a3230"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd95a33c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd95a3550"/>
        <function-ref name="get" scoped="" ref="0x7f8fd95a36e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd95a3870"/>
        <function-ref name="set" scoped="" ref="0x7f8fd95a3a00"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd95a3b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7f8fd9598cb0" loc="66:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7f8fd9598cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd95960a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd9596230"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd95963c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd9596550"/>
        <function-ref name="get" scoped="" ref="0x7f8fd95966e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd9596870"/>
        <function-ref name="set" scoped="" ref="0x7f8fd9596a00"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd9596b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7f8fd958be40" loc="77:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7f8fd958be40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd958a1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd958a370"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd958a500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd958a690"/>
        <function-ref name="get" scoped="" ref="0x7f8fd958a820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd958a9b0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd958ab40"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd958acd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7f8fd957fcb0" loc="88:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7f8fd957fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd957e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd957e230"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd957e3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd957e550"/>
        <function-ref name="get" scoped="" ref="0x7f8fd957e6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd957e870"/>
        <function-ref name="set" scoped="" ref="0x7f8fd957ea00"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd957eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7f8fd95ac800" loc="47:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7f8fd95ac800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd95acb80"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd95acd10"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd95ab020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd95ab1b0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd95ab340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd95ab4d0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd95ab660"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd95ab7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7f8fd95a0670" loc="58:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7f8fd95a0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd95a09f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd95a0b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd95a0d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd959f020"/>
        <function-ref name="get" scoped="" ref="0x7f8fd959f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd959f340"/>
        <function-ref name="set" scoped="" ref="0x7f8fd959f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd959f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7f8fd9593670" loc="69:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7f8fd9593670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd95939f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd9593b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd9593d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd9592020"/>
        <function-ref name="get" scoped="" ref="0x7f8fd95921b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd9592340"/>
        <function-ref name="set" scoped="" ref="0x7f8fd95924d0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd9592660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7f8fd9587670" loc="80:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7f8fd9587670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd95879f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd9587b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd9587d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd9586020"/>
        <function-ref name="get" scoped="" ref="0x7f8fd95861b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd9586340"/>
        <function-ref name="set" scoped="" ref="0x7f8fd95864d0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd9586660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7f8fd9574670" loc="97:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7f8fd9574670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd95749f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd9574b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd9574d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd9573020"/>
        <function-ref name="get" scoped="" ref="0x7f8fd95731b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd9573340"/>
        <function-ref name="set" scoped="" ref="0x7f8fd95734d0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd9573660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7f8fd956eb20" loc="103:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7f8fd956eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd956d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd956d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd956d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd956d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd956d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd956d7f0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd956d980"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd956db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7f8fd9585cb0" loc="83:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7f8fd9585cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd95840a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd9584230"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd95843c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd9584550"/>
        <function-ref name="get" scoped="" ref="0x7f8fd95846e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd9584870"/>
        <function-ref name="set" scoped="" ref="0x7f8fd9584a00"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd9584b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7f8fd95a8060" loc="50:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7f8fd95a8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd95a83e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd95a8570"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd95a8700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd95a8890"/>
        <function-ref name="get" scoped="" ref="0x7f8fd95a8a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd95a8bb0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd95a8d40"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd95a7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7f8fd959c020" loc="61:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7f8fd959c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd959c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd959c530"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd959c6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd959c850"/>
        <function-ref name="get" scoped="" ref="0x7f8fd959c9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd959cb70"/>
        <function-ref name="set" scoped="" ref="0x7f8fd959cd00"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd959b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7f8fd95704e0" loc="101:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7f8fd95704e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd9570860"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd95709f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd9570b80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd9570d10"/>
        <function-ref name="get" scoped="" ref="0x7f8fd956f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd956f1b0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd956f340"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd956f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7f8fd959a670" loc="64:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7f8fd959a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd959a9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd959ab80"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd959ad10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd9599020"/>
        <function-ref name="get" scoped="" ref="0x7f8fd95991b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd9599340"/>
        <function-ref name="set" scoped="" ref="0x7f8fd95994d0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd9599660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7f8fd958d800" loc="75:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7f8fd958d800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd958db80"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd958dd10"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd958c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd958c1b0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd958c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd958c4d0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd958c660"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd958c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7f8fd9581670" loc="86:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7f8fd9581670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd95819f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd9581b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd9581d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd9580020"/>
        <function-ref name="get" scoped="" ref="0x7f8fd95801b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd9580340"/>
        <function-ref name="set" scoped="" ref="0x7f8fd95804d0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd9580660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7f8fd9576020" loc="95:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7f8fd9576020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd95763a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd9576530"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd95766c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd9576850"/>
        <function-ref name="get" scoped="" ref="0x7f8fd95769e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd9576b70"/>
        <function-ref name="set" scoped="" ref="0x7f8fd9576d00"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd9575020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7f8fd95a5990" loc="53:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7f8fd95a5990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd95a5d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd95a4020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd95a41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd95a4340"/>
        <function-ref name="get" scoped="" ref="0x7f8fd95a44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd95a4660"/>
        <function-ref name="set" scoped="" ref="0x7f8fd95a47f0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd95a4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7f8fd95a2020" loc="56:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7f8fd95a2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd95a23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd95a2530"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd95a26c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd95a2850"/>
        <function-ref name="get" scoped="" ref="0x7f8fd95a29e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd95a2b70"/>
        <function-ref name="set" scoped="" ref="0x7f8fd95a2d00"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd95a1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7f8fd9595020" loc="67:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7f8fd9595020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd95953a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd9595530"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd95956c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd9595850"/>
        <function-ref name="get" scoped="" ref="0x7f8fd95959e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd9595b70"/>
        <function-ref name="set" scoped="" ref="0x7f8fd9595d00"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd9594020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7f8fd9589060" loc="78:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7f8fd9589060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd95893e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd9589570"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd9589700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd9589890"/>
        <function-ref name="get" scoped="" ref="0x7f8fd9589a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd9589bb0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd9589d40"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd9588020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7f8fd957d020" loc="89:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7f8fd957d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd957d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd957d530"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd957d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd957d850"/>
        <function-ref name="get" scoped="" ref="0x7f8fd957d9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd957db70"/>
        <function-ref name="set" scoped="" ref="0x7f8fd957dd00"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd957c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7f8fd95abb20" loc="48:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7f8fd95abb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd95aa020"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd95aa1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd95aa340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd95aa4d0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd95aa660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd95aa7f0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd95aa980"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd95aab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7f8fd959f990" loc="59:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7f8fd959f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd959fe10"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd959e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd959e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd959e340"/>
        <function-ref name="get" scoped="" ref="0x7f8fd959e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd959e660"/>
        <function-ref name="set" scoped="" ref="0x7f8fd959e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd959e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7f8fd9592990" loc="70:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7f8fd9592990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd9592d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd9591020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd95911b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd9591340"/>
        <function-ref name="get" scoped="" ref="0x7f8fd95914d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd9591660"/>
        <function-ref name="set" scoped="" ref="0x7f8fd95917f0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd9591980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7f8fd9573990" loc="98:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7f8fd9573990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd9573d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd9572020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd95721b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd9572340"/>
        <function-ref name="get" scoped="" ref="0x7f8fd95724d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd9572660"/>
        <function-ref name="set" scoped="" ref="0x7f8fd95727f0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd9572980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7f8fd958f020" loc="73:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7f8fd958f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd958f5a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd958f730"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd958f8c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd958fa50"/>
        <function-ref name="get" scoped="" ref="0x7f8fd958fbe0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd958fd70"/>
        <function-ref name="set" scoped="" ref="0x7f8fd958e020"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd958e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7f8fd9583020" loc="84:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7f8fd9583020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd95833a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd9583530"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd95836c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd9583850"/>
        <function-ref name="get" scoped="" ref="0x7f8fd95839e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd9583b70"/>
        <function-ref name="set" scoped="" ref="0x7f8fd9583d00"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd9582020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7f8fd9579990" loc="93:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7f8fd9579990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd9579d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd9578020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd95781b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd9578340"/>
        <function-ref name="get" scoped="" ref="0x7f8fd95784d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd9578660"/>
        <function-ref name="set" scoped="" ref="0x7f8fd95787f0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd9578980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7f8fd956de40" loc="104:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7f8fd956de40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd956c1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd956c370"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd956c500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd956c690"/>
        <function-ref name="get" scoped="" ref="0x7f8fd956c820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd956c9b0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd956cb40"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd956ccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7f8fd95a7350" loc="51:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7f8fd95a7350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd95a76d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd95a7860"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd95a79f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd95a7b80"/>
        <function-ref name="get" scoped="" ref="0x7f8fd95a7d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd95a6020"/>
        <function-ref name="set" scoped="" ref="0x7f8fd95a61b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd95a6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7f8fd959b350" loc="62:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7f8fd959b350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd959b6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd959b860"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd959b9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd959bb80"/>
        <function-ref name="get" scoped="" ref="0x7f8fd959bd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd959a020"/>
        <function-ref name="set" scoped="" ref="0x7f8fd959a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd959a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7f8fd957c350" loc="91:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7f8fd957c350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd957c6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd957c860"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd957c9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd957cb80"/>
        <function-ref name="get" scoped="" ref="0x7f8fd957cd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd957b020"/>
        <function-ref name="set" scoped="" ref="0x7f8fd957b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd957b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7f8fd9599990" loc="65:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7f8fd9599990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd9599d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd9598020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd95981b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd9598340"/>
        <function-ref name="get" scoped="" ref="0x7f8fd95984d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd9598660"/>
        <function-ref name="set" scoped="" ref="0x7f8fd95987f0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd9598980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7f8fd958cb20" loc="76:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7f8fd958cb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd958b020"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd958b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd958b340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd958b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd958b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd958b7f0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd958b980"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd958bb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7f8fd9580990" loc="87:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7f8fd9580990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd9580d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd957f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd957f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd957f340"/>
        <function-ref name="get" scoped="" ref="0x7f8fd957f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd957f660"/>
        <function-ref name="set" scoped="" ref="0x7f8fd957f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd957f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7f8fd9575350" loc="96:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7f8fd9575350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd95756d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd9575860"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd95759f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd9575b80"/>
        <function-ref name="get" scoped="" ref="0x7f8fd9575d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd9574020"/>
        <function-ref name="set" scoped="" ref="0x7f8fd95741b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd9574340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7f8fd95bc590" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7f8fd95bc590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd95bc910"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd95bcaa0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd95bcc30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd95bcdc0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd95ac020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd95ac1b0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd95ac340"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd95ac4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7f8fd95a1350" loc="57:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7f8fd95a1350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd95a16d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd95a1860"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd95a19f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd95a1b80"/>
        <function-ref name="get" scoped="" ref="0x7f8fd95a1d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd95a0020"/>
        <function-ref name="set" scoped="" ref="0x7f8fd95a01b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd95a0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7f8fd9594350" loc="68:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7f8fd9594350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd95946d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd9594860"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd95949f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd9594b80"/>
        <function-ref name="get" scoped="" ref="0x7f8fd9594d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd9593020"/>
        <function-ref name="set" scoped="" ref="0x7f8fd95931b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd9593340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7f8fd9588350" loc="79:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7f8fd9588350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd95886d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd9588860"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd95889f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd9588b80"/>
        <function-ref name="get" scoped="" ref="0x7f8fd9588d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd9587020"/>
        <function-ref name="set" scoped="" ref="0x7f8fd95871b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd9587340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7f8fd956f800" loc="102:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7f8fd956f800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd956fb80"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd956fd10"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd956e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd956e1b0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd956e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd956e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd956e660"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd956e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7f8fd9586990" loc="82:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7f8fd9586990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd9586d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd9585020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd95851b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd9585340"/>
        <function-ref name="get" scoped="" ref="0x7f8fd95854d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd9585660"/>
        <function-ref name="set" scoped="" ref="0x7f8fd95857f0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd9585980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7f8fd9591cb0" loc="71:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7f8fd9591cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd95900a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd9590230"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd95903c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd9590550"/>
        <function-ref name="get" scoped="" ref="0x7f8fd95906e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd9590870"/>
        <function-ref name="set" scoped="" ref="0x7f8fd9590a00"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd9590b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7f8fd95aae40" loc="49:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7f8fd95aae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd95a91e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd95a9370"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd95a9500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd95a9690"/>
        <function-ref name="get" scoped="" ref="0x7f8fd95a9820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd95a99b0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd95a9b40"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd95a9cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7f8fd959ecb0" loc="60:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7f8fd959ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd959d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd959d230"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd959d3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd959d550"/>
        <function-ref name="get" scoped="" ref="0x7f8fd959d6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd959d870"/>
        <function-ref name="set" scoped="" ref="0x7f8fd959da00"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd959db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f8fd9520a80" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f8fd9520a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd9520e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd951f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd951f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd951f340"/>
        <function-ref name="get" scoped="" ref="0x7f8fd951f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd951f660"/>
        <function-ref name="set" scoped="" ref="0x7f8fd951f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd951f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f8fd951c020" loc="49:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f8fd951c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd951c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd951c530"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd951c6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd951c850"/>
        <function-ref name="get" scoped="" ref="0x7f8fd951c9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd951cb70"/>
        <function-ref name="set" scoped="" ref="0x7f8fd951cd00"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd951b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f8fd95226b0" loc="44:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f8fd95226b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd9522a30"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd9522bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd9522d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd9521020"/>
        <function-ref name="get" scoped="" ref="0x7f8fd95211b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd9521340"/>
        <function-ref name="set" scoped="" ref="0x7f8fd95214d0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd9521660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f8fd951fc10" loc="47:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f8fd951fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd951e020"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd951e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd951e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd951e4d0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd951e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd951e7f0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd951e980"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd951eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f8fd951b2b0" loc="50:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f8fd951b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd951b630"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd951b7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd951b950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd951bae0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd951bc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd951be00"/>
        <function-ref name="set" scoped="" ref="0x7f8fd951a020"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd951a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f8fd95218f0" loc="45:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f8fd95218f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd9521c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd9521e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd9520020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd95201b0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd9520340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd95204d0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd9520660"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd95207f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f8fd951eda0" loc="48:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f8fd951eda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd951d180"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd951d310"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd951d4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd951d630"/>
        <function-ref name="get" scoped="" ref="0x7f8fd951d7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd951d950"/>
        <function-ref name="set" scoped="" ref="0x7f8fd951dae0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd951dc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f8fd951a440" loc="51:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f8fd951a440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd951a7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd951a950"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd951aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd951ac70"/>
        <function-ref name="get" scoped="" ref="0x7f8fd951ae00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd9519020"/>
        <function-ref name="set" scoped="" ref="0x7f8fd95191b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd9519340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd81356d0" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd81356d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd8135a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd8135be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd8135d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd8134020"/>
        <function-ref name="get" scoped="" ref="0x7f8fd81341b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd8134340"/>
        <function-ref name="set" scoped="" ref="0x7f8fd81344d0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd8134660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd81329b0" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd81329b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd8132d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd8130020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd81301b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd8130340"/>
        <function-ref name="get" scoped="" ref="0x7f8fd81304d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd8130660"/>
        <function-ref name="set" scoped="" ref="0x7f8fd81307f0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd8130980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd812ee20" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd812ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd812d1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd812d350"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd812d4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd812d670"/>
        <function-ref name="get" scoped="" ref="0x7f8fd812d800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd812d990"/>
        <function-ref name="set" scoped="" ref="0x7f8fd812db20"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd812dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd812a0a0" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd812a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd812a420"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd812a5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd812a740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd812a8d0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd812aa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd812abf0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd812ad80"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd8129020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd81273f0" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd81273f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd8127770"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd8127900"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd8127a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd8127c20"/>
        <function-ref name="get" scoped="" ref="0x7f8fd8127db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd8126020"/>
        <function-ref name="set" scoped="" ref="0x7f8fd81261b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd8126340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd81246d0" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd81246d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd8124a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd8124be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd8124d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd8123020"/>
        <function-ref name="get" scoped="" ref="0x7f8fd81231b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd8123340"/>
        <function-ref name="set" scoped="" ref="0x7f8fd81234d0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd8123660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd81219b0" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd81219b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd8121d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd8120020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd81201b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd8120340"/>
        <function-ref name="get" scoped="" ref="0x7f8fd81204d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd8120660"/>
        <function-ref name="set" scoped="" ref="0x7f8fd81207f0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd8120980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd811ee20" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd811ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd811d1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd811d350"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd811d4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd811d670"/>
        <function-ref name="get" scoped="" ref="0x7f8fd811d800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd811d990"/>
        <function-ref name="set" scoped="" ref="0x7f8fd811db20"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd811dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f8fd9511da0" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f8fd9511da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd9510180"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd9510310"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd95104a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd9510630"/>
        <function-ref name="get" scoped="" ref="0x7f8fd95107c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd9510950"/>
        <function-ref name="set" scoped="" ref="0x7f8fd9510ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd9510c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f8fd950d440" loc="49:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f8fd950d440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd950d7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd950d950"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd950dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd950dc70"/>
        <function-ref name="get" scoped="" ref="0x7f8fd950de00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd950b020"/>
        <function-ref name="set" scoped="" ref="0x7f8fd950b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd950b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f8fd9513a20" loc="44:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f8fd9513a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd9513da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd9512020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd95121b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd9512340"/>
        <function-ref name="get" scoped="" ref="0x7f8fd95124d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd9512660"/>
        <function-ref name="set" scoped="" ref="0x7f8fd95127f0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd9512980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f8fd950f020" loc="47:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f8fd950f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd950f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd950f530"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd950f6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd950f850"/>
        <function-ref name="get" scoped="" ref="0x7f8fd950f9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd950fb70"/>
        <function-ref name="set" scoped="" ref="0x7f8fd950fd00"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd950e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f8fd950b5d0" loc="50:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f8fd950b5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd950b950"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd950bae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd950bc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd950be00"/>
        <function-ref name="get" scoped="" ref="0x7f8fd950a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd950a1b0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd950a340"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd950a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f8fd9512c10" loc="45:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f8fd9512c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd9511020"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd95111b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd9511340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd95114d0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd9511660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd95117f0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd9511980"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd9511b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f8fd950e2b0" loc="48:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f8fd950e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd950e630"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd950e7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd950e950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd950eae0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd950ec70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd950ee00"/>
        <function-ref name="set" scoped="" ref="0x7f8fd950d020"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd950d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f8fd950a760" loc="51:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f8fd950a760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd950aae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd950ac70"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd950ae00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd9509020"/>
        <function-ref name="get" scoped="" ref="0x7f8fd95091b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd9509340"/>
        <function-ref name="set" scoped="" ref="0x7f8fd95094d0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd9509660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd80c5a60" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd80c5a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd80c5de0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd80c4020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd80c41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd80c4340"/>
        <function-ref name="get" scoped="" ref="0x7f8fd80c44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd80c4660"/>
        <function-ref name="set" scoped="" ref="0x7f8fd80c47f0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd80c4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd80c2e20" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd80c2e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd80c11c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd80c1350"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd80c14e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd80c1670"/>
        <function-ref name="get" scoped="" ref="0x7f8fd80c1800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd80c1990"/>
        <function-ref name="set" scoped="" ref="0x7f8fd80c1b20"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd80c1cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd80be0a0" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd80be0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd80be420"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd80be5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd80be740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd80be8d0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd80bea60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd80bebf0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd80bed80"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd80bc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd80ba3f0" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd80ba3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd80ba770"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd80ba900"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd80baa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd80bac20"/>
        <function-ref name="get" scoped="" ref="0x7f8fd80badb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd80b9020"/>
        <function-ref name="set" scoped="" ref="0x7f8fd80b91b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd80b9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd80b76d0" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd80b76d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd80b7a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd80b7be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd80b7d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd80b6020"/>
        <function-ref name="get" scoped="" ref="0x7f8fd80b61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd80b6340"/>
        <function-ref name="set" scoped="" ref="0x7f8fd80b64d0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd80b6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd80b49b0" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd80b49b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd80b4d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd80b3020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd80b31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd80b3340"/>
        <function-ref name="get" scoped="" ref="0x7f8fd80b34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd80b3660"/>
        <function-ref name="set" scoped="" ref="0x7f8fd80b37f0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd80b3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd80b1e20" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd80b1e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd80b01c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd80b0350"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd80b04e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd80b0670"/>
        <function-ref name="get" scoped="" ref="0x7f8fd80b0800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd80b0990"/>
        <function-ref name="set" scoped="" ref="0x7f8fd80b0b20"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd80b0cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd80ad0a0" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd80ad0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd80ad420"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd80ad5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd80ad740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd80ad8d0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd80ada60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd80adbf0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd80add80"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd80ac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f8fd9501020" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f8fd9501020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd95013a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd9501530"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd95016c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd9501850"/>
        <function-ref name="get" scoped="" ref="0x7f8fd95019e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd9501b70"/>
        <function-ref name="set" scoped="" ref="0x7f8fd9501d00"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd94ff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f8fd94fd5d0" loc="49:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f8fd94fd5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd94fd950"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd94fdae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd94fdc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd94fde00"/>
        <function-ref name="get" scoped="" ref="0x7f8fd94fc020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd94fc1b0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd94fc340"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd94fc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f8fd9504d30" loc="44:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f8fd9504d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd95030e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd9503270"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd9503400"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd9503590"/>
        <function-ref name="get" scoped="" ref="0x7f8fd9503720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd95038b0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd9503a40"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd9503bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f8fd94ff2b0" loc="47:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f8fd94ff2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd94ff630"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd94ff7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd94ff950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd94ffae0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd94ffc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd94ffe00"/>
        <function-ref name="set" scoped="" ref="0x7f8fd94fe020"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd94fe1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f8fd94fc760" loc="50:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f8fd94fc760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd94fcae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd94fcc70"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd94fce00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd94fb020"/>
        <function-ref name="get" scoped="" ref="0x7f8fd94fb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd94fb340"/>
        <function-ref name="set" scoped="" ref="0x7f8fd94fb4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd94fb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f8fd9503e60" loc="45:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f8fd9503e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd9502210"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd95023a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd9502530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd95026c0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd9502850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd95029e0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd9502b70"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd9502d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f8fd94fe440" loc="48:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f8fd94fe440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd94fe7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd94fe950"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd94feae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd94fec70"/>
        <function-ref name="get" scoped="" ref="0x7f8fd94fee00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd94fd020"/>
        <function-ref name="set" scoped="" ref="0x7f8fd94fd1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd94fd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f8fd94fb8f0" loc="51:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f8fd94fb8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd94fbc70"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd94fbe00"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd94fa020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd94fa1b0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd94fa340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd94fa4d0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd94fa660"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd94fa7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd805ac90" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd805ac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd80590a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd8059230"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd80593c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd8059550"/>
        <function-ref name="get" scoped="" ref="0x7f8fd80596e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd8059870"/>
        <function-ref name="set" scoped="" ref="0x7f8fd8059a00"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd8059b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd8057e20" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd8057e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd80561c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd8056350"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd80564e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd8056670"/>
        <function-ref name="get" scoped="" ref="0x7f8fd8056800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd8056990"/>
        <function-ref name="set" scoped="" ref="0x7f8fd8056b20"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd8056cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd80530a0" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd80530a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd8053420"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd80535b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd8053740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd80538d0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd8053a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd8053bf0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd8053d80"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd8051020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd804f3f0" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd804f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd804f770"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd804f900"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd804fa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd804fc20"/>
        <function-ref name="get" scoped="" ref="0x7f8fd804fdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd804e020"/>
        <function-ref name="set" scoped="" ref="0x7f8fd804e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd804e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd804c6d0" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd804c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd804ca50"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd804cbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd804cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd804b020"/>
        <function-ref name="get" scoped="" ref="0x7f8fd804b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd804b340"/>
        <function-ref name="set" scoped="" ref="0x7f8fd804b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd804b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd80499b0" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd80499b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd8049d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd8048020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd80481b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd8048340"/>
        <function-ref name="get" scoped="" ref="0x7f8fd80484d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd8048660"/>
        <function-ref name="set" scoped="" ref="0x7f8fd80487f0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd8048980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd8046e20" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd8046e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd80451c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd8045350"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd80454e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd8045670"/>
        <function-ref name="get" scoped="" ref="0x7f8fd8045800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd8045990"/>
        <function-ref name="set" scoped="" ref="0x7f8fd8045b20"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd8045cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd80420a0" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd80420a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd8042420"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd80425b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd8042740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd80428d0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd8042a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd8042bf0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd8042d80"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd8041020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f8fd94f1440" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f8fd94f1440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd94f17c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd94f1950"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd94f1ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd94f1c70"/>
        <function-ref name="get" scoped="" ref="0x7f8fd94f1e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd94f0020"/>
        <function-ref name="set" scoped="" ref="0x7f8fd94f01b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd94f0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f8fd94ee8f0" loc="49:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f8fd94ee8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd94eec70"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd94eee00"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd94ed020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd94ed1b0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd94ed340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd94ed4d0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd94ed660"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd94ed7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f8fd94f3020" loc="44:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f8fd94f3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd94f33a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd94f3530"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd94f36c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd94f3850"/>
        <function-ref name="get" scoped="" ref="0x7f8fd94f39e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd94f3b70"/>
        <function-ref name="set" scoped="" ref="0x7f8fd94f3d00"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd94f2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f8fd94f05d0" loc="47:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f8fd94f05d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd94f0950"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd94f0ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd94f0c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd94f0e00"/>
        <function-ref name="get" scoped="" ref="0x7f8fd94ef020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd94ef1b0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd94ef340"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd94ef4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f8fd94eda80" loc="50:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f8fd94eda80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd94ede00"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd94ec020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd94ec1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd94ec340"/>
        <function-ref name="get" scoped="" ref="0x7f8fd94ec4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd94ec660"/>
        <function-ref name="set" scoped="" ref="0x7f8fd94ec7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd94ec980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f8fd94f22b0" loc="45:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f8fd94f22b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd94f2630"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd94f27c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd94f2950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd94f2ae0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd94f2c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd94f2e00"/>
        <function-ref name="set" scoped="" ref="0x7f8fd94f1020"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd94f11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f8fd94ef760" loc="48:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f8fd94ef760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd94efae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd94efc70"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd94efe00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd94ee020"/>
        <function-ref name="get" scoped="" ref="0x7f8fd94ee1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd94ee340"/>
        <function-ref name="set" scoped="" ref="0x7f8fd94ee4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd94ee660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f8fd94ecc10" loc="51:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f8fd94ecc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd94eb020"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd94eb1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd94eb340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd94eb4d0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd94eb660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd94eb7f0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd94eb980"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd94ebb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd7fefc90" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd7fefc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd7fee0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd7fee230"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd7fee3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd7fee550"/>
        <function-ref name="get" scoped="" ref="0x7f8fd7fee6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd7fee870"/>
        <function-ref name="set" scoped="" ref="0x7f8fd7feea00"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd7feeb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd7fece20" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd7fece20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd7feb1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd7feb350"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd7feb4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd7feb670"/>
        <function-ref name="get" scoped="" ref="0x7f8fd7feb800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd7feb990"/>
        <function-ref name="set" scoped="" ref="0x7f8fd7febb20"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd7febcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd7fe80a0" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd7fe80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd7fe8420"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd7fe85b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd7fe8740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd7fe88d0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd7fe8a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd7fe8bf0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd7fe8d80"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd7fe7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd7fe53f0" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd7fe53f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd7fe5770"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd7fe5900"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd7fe5a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd7fe5c20"/>
        <function-ref name="get" scoped="" ref="0x7f8fd7fe5db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd7fe3020"/>
        <function-ref name="set" scoped="" ref="0x7f8fd7fe31b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd7fe3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd7fe16d0" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd7fe16d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd7fe1a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd7fe1be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd7fe1d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd7fe0020"/>
        <function-ref name="get" scoped="" ref="0x7f8fd7fe01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd7fe0340"/>
        <function-ref name="set" scoped="" ref="0x7f8fd7fe04d0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd7fe0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd7fde9b0" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd7fde9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd7fded30"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd7fdd020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd7fdd1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd7fdd340"/>
        <function-ref name="get" scoped="" ref="0x7f8fd7fdd4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd7fdd660"/>
        <function-ref name="set" scoped="" ref="0x7f8fd7fdd7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd7fdd980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd7fdbe20" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd7fdbe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd7fda1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd7fda350"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd7fda4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd7fda670"/>
        <function-ref name="get" scoped="" ref="0x7f8fd7fda800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd7fda990"/>
        <function-ref name="set" scoped="" ref="0x7f8fd7fdab20"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd7fdacb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd7fd70a0" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd7fd70a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd7fd7420"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd7fd75b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd7fd7740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd7fd78d0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd7fd7a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd7fd7bf0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd7fd7d80"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd7fd6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f8fd94e2760" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f8fd94e2760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd94e2ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd94e2c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd94e2e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd94e1020"/>
        <function-ref name="get" scoped="" ref="0x7f8fd94e11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd94e1340"/>
        <function-ref name="set" scoped="" ref="0x7f8fd94e14d0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd94e1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f8fd94dfc10" loc="49:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f8fd94dfc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd94de020"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd94de1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd94de340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd94de4d0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd94de660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd94de7f0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd94de980"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd94deb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f8fd94e43f0" loc="44:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f8fd94e43f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd94e4770"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd94e4900"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd94e4a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd94e4c20"/>
        <function-ref name="get" scoped="" ref="0x7f8fd94e4db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd94e3020"/>
        <function-ref name="set" scoped="" ref="0x7f8fd94e31b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd94e3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f8fd94e18f0" loc="47:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f8fd94e18f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd94e1c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd94e1e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd94e0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd94e01b0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd94e0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd94e04d0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd94e0660"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd94e07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f8fd94deda0" loc="50:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f8fd94deda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd94dd180"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd94dd310"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd94dd4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd94dd630"/>
        <function-ref name="get" scoped="" ref="0x7f8fd94dd7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd94dd950"/>
        <function-ref name="set" scoped="" ref="0x7f8fd94ddae0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd94ddc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f8fd94e35d0" loc="45:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f8fd94e35d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd94e3950"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd94e3ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd94e3c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd94e3e00"/>
        <function-ref name="get" scoped="" ref="0x7f8fd94e2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd94e21b0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd94e2340"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd94e24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f8fd94e0a80" loc="48:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f8fd94e0a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd94e0e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd94df020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd94df1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd94df340"/>
        <function-ref name="get" scoped="" ref="0x7f8fd94df4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd94df660"/>
        <function-ref name="set" scoped="" ref="0x7f8fd94df7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd94df980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f8fd94dc020" loc="51:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f8fd94dc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd94dc3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd94dc530"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd94dc6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd94dc850"/>
        <function-ref name="get" scoped="" ref="0x7f8fd94dc9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd94dcb70"/>
        <function-ref name="set" scoped="" ref="0x7f8fd94dcd00"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd94db020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd7f84c90" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd7f84c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd7f830a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd7f83230"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd7f833c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd7f83550"/>
        <function-ref name="get" scoped="" ref="0x7f8fd7f836e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd7f83870"/>
        <function-ref name="set" scoped="" ref="0x7f8fd7f83a00"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd7f83b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd7f81e20" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd7f81e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd7f801c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd7f80350"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd7f804e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd7f80670"/>
        <function-ref name="get" scoped="" ref="0x7f8fd7f80800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd7f80990"/>
        <function-ref name="set" scoped="" ref="0x7f8fd7f80b20"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd7f80cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd7f7d0a0" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd7f7d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd7f7d420"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd7f7d5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd7f7d740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd7f7d8d0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd7f7da60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd7f7dbf0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd7f7dd80"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd7f7c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd7f7a3f0" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd7f7a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd7f7a770"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd7f7a900"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd7f7aa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd7f7ac20"/>
        <function-ref name="get" scoped="" ref="0x7f8fd7f7adb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd7f78020"/>
        <function-ref name="set" scoped="" ref="0x7f8fd7f781b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd7f78340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd7f766d0" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd7f766d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd7f76a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd7f76be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd7f76d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd7f75020"/>
        <function-ref name="get" scoped="" ref="0x7f8fd7f751b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd7f75340"/>
        <function-ref name="set" scoped="" ref="0x7f8fd7f754d0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd7f75660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd7f739b0" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd7f739b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd7f73d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd7f72020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd7f721b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd7f72340"/>
        <function-ref name="get" scoped="" ref="0x7f8fd7f724d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd7f72660"/>
        <function-ref name="set" scoped="" ref="0x7f8fd7f727f0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd7f72980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd7f70e20" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd7f70e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd7f6f1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd7f6f350"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd7f6f4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd7f6f670"/>
        <function-ref name="get" scoped="" ref="0x7f8fd7f6f800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd7f6f990"/>
        <function-ref name="set" scoped="" ref="0x7f8fd7f6fb20"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd7f6fcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd7f6c0a0" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd7f6c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd7f6c420"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd7f6c5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd7f6c740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd7f6c8d0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd7f6ca60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd7f6cbf0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd7f6cd80"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd7f6b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f8fd94d3760" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f8fd94d3760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd94d3ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd94d3c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd94d3e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd94d2020"/>
        <function-ref name="get" scoped="" ref="0x7f8fd94d21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd94d2340"/>
        <function-ref name="set" scoped="" ref="0x7f8fd94d24d0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd94d2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f8fd94d0c10" loc="49:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f8fd94d0c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd94ce020"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd94ce1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd94ce340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd94ce4d0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd94ce660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd94ce7f0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd94ce980"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd94ceb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f8fd94d5460" loc="44:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f8fd94d5460"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd94d57e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd94d5970"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd94d5b00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd94d5c90"/>
        <function-ref name="get" scoped="" ref="0x7f8fd94d5e20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd94d4020"/>
        <function-ref name="set" scoped="" ref="0x7f8fd94d41b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd94d4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f8fd94d28f0" loc="47:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f8fd94d28f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd94d2c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd94d2e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd94d1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd94d11b0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd94d1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd94d14d0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd94d1660"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd94d17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f8fd94ceda0" loc="50:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f8fd94ceda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd94cd180"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd94cd310"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd94cd4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd94cd630"/>
        <function-ref name="get" scoped="" ref="0x7f8fd94cd7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd94cd950"/>
        <function-ref name="set" scoped="" ref="0x7f8fd94cdae0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd94cdc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f8fd94d45d0" loc="45:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f8fd94d45d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd94d4950"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd94d4ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd94d4c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd94d4e00"/>
        <function-ref name="get" scoped="" ref="0x7f8fd94d3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd94d31b0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd94d3340"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd94d34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f8fd94d1a80" loc="48:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f8fd94d1a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd94d1e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd94d0020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd94d01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd94d0340"/>
        <function-ref name="get" scoped="" ref="0x7f8fd94d04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd94d0660"/>
        <function-ref name="set" scoped="" ref="0x7f8fd94d07f0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd94d0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f8fd94cc020" loc="51:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f8fd94cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd94cc3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd94cc530"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd94cc6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd94cc850"/>
        <function-ref name="get" scoped="" ref="0x7f8fd94cc9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd94ccb70"/>
        <function-ref name="set" scoped="" ref="0x7f8fd94ccd00"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd94cb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd7f17c90" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd7f17c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd7f160a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd7f16230"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd7f163c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd7f16550"/>
        <function-ref name="get" scoped="" ref="0x7f8fd7f166e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd7f16870"/>
        <function-ref name="set" scoped="" ref="0x7f8fd7f16a00"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd7f16b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd7f14e20" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd7f14e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd7f131c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd7f13350"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd7f134e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd7f13670"/>
        <function-ref name="get" scoped="" ref="0x7f8fd7f13800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd7f13990"/>
        <function-ref name="set" scoped="" ref="0x7f8fd7f13b20"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd7f13cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd7f100a0" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd7f100a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd7f10420"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd7f105b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd7f10740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd7f108d0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd7f10a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd7f10bf0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd7f10d80"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd7f0f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd7f0d3f0" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd7f0d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd7f0d770"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd7f0d900"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd7f0da90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd7f0dc20"/>
        <function-ref name="get" scoped="" ref="0x7f8fd7f0ddb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd7f0c020"/>
        <function-ref name="set" scoped="" ref="0x7f8fd7f0c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd7f0c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd7f0a6d0" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd7f0a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd7f0aa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd7f0abe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd7f0ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd7f08020"/>
        <function-ref name="get" scoped="" ref="0x7f8fd7f081b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd7f08340"/>
        <function-ref name="set" scoped="" ref="0x7f8fd7f084d0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd7f08660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd7f069b0" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd7f069b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd7f06d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd7f05020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd7f051b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd7f05340"/>
        <function-ref name="get" scoped="" ref="0x7f8fd7f054d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd7f05660"/>
        <function-ref name="set" scoped="" ref="0x7f8fd7f057f0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd7f05980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd7f03e20" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd7f03e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd7f021c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd7f02350"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd7f024e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd7f02670"/>
        <function-ref name="get" scoped="" ref="0x7f8fd7f02800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd7f02990"/>
        <function-ref name="set" scoped="" ref="0x7f8fd7f02b20"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd7f02cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd7eff0a0" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd7eff0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd7eff420"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd7eff5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd7eff740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd7eff8d0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd7effa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd7effbf0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd7effd80"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd7efe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd94c5460" loc="47:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd94c5460"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd94c57e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd94c5970"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd94c5b00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd94c5c90"/>
        <function-ref name="get" scoped="" ref="0x7f8fd94c5e20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd94ae020"/>
        <function-ref name="set" scoped="" ref="0x7f8fd94ae1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd94ae340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd94aaa80" loc="47:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd94aaa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd94aae00"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd94a9020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd94a91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd94a9340"/>
        <function-ref name="get" scoped="" ref="0x7f8fd94a94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd94a9660"/>
        <function-ref name="set" scoped="" ref="0x7f8fd94a97f0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd94a9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd94a53f0" loc="47:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd94a53f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd94a5770"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd94a5900"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd94a5a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd94a5c20"/>
        <function-ref name="get" scoped="" ref="0x7f8fd94a5db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd94a4020"/>
        <function-ref name="set" scoped="" ref="0x7f8fd94a41b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd94a4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd94a0a80" loc="47:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd94a0a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd94a0e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd949f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd949f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd949f340"/>
        <function-ref name="get" scoped="" ref="0x7f8fd949f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd949f660"/>
        <function-ref name="set" scoped="" ref="0x7f8fd949f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd949f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd949a3f0" loc="47:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd949a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd949a770"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd949a900"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd949aa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd949ac20"/>
        <function-ref name="get" scoped="" ref="0x7f8fd949adb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd9499020"/>
        <function-ref name="set" scoped="" ref="0x7f8fd94991b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd9499340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd9496a80" loc="47:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd9496a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd9496e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd9495020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd94951b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd9495340"/>
        <function-ref name="get" scoped="" ref="0x7f8fd94954d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd9495660"/>
        <function-ref name="set" scoped="" ref="0x7f8fd94957f0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd9495980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd9490460" loc="47:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd9490460"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd94907e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd9490970"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd9490b00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd9490c90"/>
        <function-ref name="get" scoped="" ref="0x7f8fd9490e20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd948f020"/>
        <function-ref name="set" scoped="" ref="0x7f8fd948f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd948f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd948ba80" loc="47:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd948ba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd948be00"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd948a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd948a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd948a340"/>
        <function-ref name="get" scoped="" ref="0x7f8fd948a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd948a660"/>
        <function-ref name="set" scoped="" ref="0x7f8fd948a7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd948a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd9486120" loc="47:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd9486120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd94864a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd9486630"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd94867c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd9486950"/>
        <function-ref name="get" scoped="" ref="0x7f8fd9486ae0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd9486c70"/>
        <function-ref name="set" scoped="" ref="0x7f8fd9486e00"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd9485020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd94816d0" loc="47:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd94816d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd9481a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd9481be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd9481d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd9480020"/>
        <function-ref name="get" scoped="" ref="0x7f8fd94801b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd9480340"/>
        <function-ref name="set" scoped="" ref="0x7f8fd94804d0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd9480660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd947dc90" loc="47:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd947dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd947b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd947b230"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd947b3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd947b550"/>
        <function-ref name="get" scoped="" ref="0x7f8fd947b6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd947b870"/>
        <function-ref name="set" scoped="" ref="0x7f8fd947ba00"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd947bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd9477120" loc="47:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd9477120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd94774a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd9477630"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd94777c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd9477950"/>
        <function-ref name="get" scoped="" ref="0x7f8fd9477ae0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd9477c70"/>
        <function-ref name="set" scoped="" ref="0x7f8fd9477e00"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd9476020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8fd94726d0" loc="47:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8fd94726d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd9472a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd9472be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd9472d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd9471020"/>
        <function-ref name="get" scoped="" ref="0x7f8fd94711b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd9471340"/>
        <function-ref name="set" scoped="" ref="0x7f8fd94714d0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd9471660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8fd9435b80" loc="27:/home/sumukh/tinyos-main/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f8fd9435b80"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f8fd97799e0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f8fd97799e0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd9434020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f8fd9434310" loc="28:/home/sumukh/tinyos-main/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f8fd9434310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f8fd9434690"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f8fd9434820"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f8fd94349b0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f8fd9434b40"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f8fd9434cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f8fd9413720" loc="60:/home/sumukh/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f8fd9413720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd9413aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f8fd95cfdd0" loc="57:/home/sumukh/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f8fd95cfdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f8fd9414180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f8fd9413020" loc="59:/home/sumukh/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f8fd9413020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd94133a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f8fd9414470" loc="58:/home/sumukh/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f8fd9414470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd94147f0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f8fd9414980"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f8fd9414b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f8fd976ae10" loc="48:/home/sumukh/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f8fd976ae10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8fd97761c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f8fd9776350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f8fd97730d0" loc="47:/home/sumukh/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f8fd97730d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd9773450"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f8fd97735e0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f8fd9773770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f8fd96ac020" loc="56:/home/sumukh/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f8fd96ac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8fd96ac3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f8fd96ac530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f8fd96a95d0" loc="57:/home/sumukh/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f8fd96a95d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f8fd96a9950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f8fd96ad0c0" loc="55:/home/sumukh/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f8fd96ad0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd96ad440"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f8fd96ad5d0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f8fd96ad760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f8fd968a750" loc="54:/home/sumukh/tinyos-main/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f8fd968a750"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f8fd968aad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f8fd969d2d0" loc="50:/home/sumukh/tinyos-main/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f8fd969d2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f8fd969d650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f8fd968c7d0" loc="51:/home/sumukh/tinyos-main/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f8fd968c7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f8fd968cb50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f8fd93d98f0" loc="10:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f8fd93d98f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f8fd93d9c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f8fd93d24a0" loc="11:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x7f8fd93d24a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f8fd93d2820"/>
        <function-ref name="stopDone" scoped="" ref="0x7f8fd93d29b0"/>
        <function-ref name="start" scoped="" ref="0x7f8fd93d2b40"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd93d2cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartReceive" ref="0x7f8fd93c1bc0" loc="15:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartReceive" scoped="" ref="0x7f8fd93c1bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f8fd96331b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8fd93d1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAMPacket" ref="0x7f8fd93a49e0" loc="23:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAMPacket" scoped="" ref="0x7f8fd93a49e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f8fd93a4d60"/>
        <function-ref name="source" scoped="" ref="0x7f8fd93a3020"/>
        <function-ref name="address" scoped="" ref="0x7f8fd93a31b0"/>
        <function-ref name="destination" scoped="" ref="0x7f8fd93a3340"/>
        <function-ref name="setSource" scoped="" ref="0x7f8fd93a34d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f8fd93a3660"/>
        <function-ref name="type" scoped="" ref="0x7f8fd93a37f0"/>
        <function-ref name="setType" scoped="" ref="0x7f8fd93a3980"/>
        <function-ref name="isForMe" scoped="" ref="0x7f8fd93a3b10"/>
        <function-ref name="setGroup" scoped="" ref="0x7f8fd93a3ca0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f8fd93a3e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="uartSendTask" ref="0x7f8fd938f100" loc="49:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="uartSendTask" scoped="" ref="0x7f8fd938f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8fd938f480"/>
        <function-ref name="runTask" scoped="" ref="0x7f8fd938f610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7f8fd93d70e0" loc="12:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x7f8fd93d70e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f8fd93d7460"/>
        <function-ref name="stopDone" scoped="" ref="0x7f8fd93d75f0"/>
        <function-ref name="start" scoped="" ref="0x7f8fd93d7780"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd93d7910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x7f8fd93a5bd0" loc="22:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f8fd93a5bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8fd93a4020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f8fd93a41b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd93a4340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd93a44d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f8fd93a4660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7f8fd93a78c0" loc="20:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f8fd93a78c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f8fd96331b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8fd93a7c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="radioSendTask" ref="0x7f8fd938e020" loc="50:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="radioSendTask" scoped="" ref="0x7f8fd938e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8fd938e3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f8fd938e530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialIntercept" ref="0x7f8fd93967b0" loc="29:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIntercept" scoped="" ref="0x7f8fd93967b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f8fd96331b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7f8fd9396b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioIntercept" ref="0x7f8fd93a0ae0" loc="28:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioIntercept" scoped="" ref="0x7f8fd93a0ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f8fd96331b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7f8fd93a0e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f8fd9397bf0" loc="25:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f8fd9397bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f8fd93a10a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f8fd93a1230"/>
        <function-ref name="led1On" scoped="" ref="0x7f8fd93a13c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f8fd93a1550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f8fd93a16e0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd93a1870"/>
        <function-ref name="led1Off" scoped="" ref="0x7f8fd93a1a00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f8fd93a01b0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd93a1b90"/>
        <function-ref name="led0On" scoped="" ref="0x7f8fd93a1d20"/>
        <function-ref name="led2On" scoped="" ref="0x7f8fd93a0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartPacket" ref="0x7f8fd93b86c0" loc="16:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartPacket" scoped="" ref="0x7f8fd93b86c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8fd93b8a40"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f8fd93b8bd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd93b8d60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd93c9020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f8fd93c91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7f8fd93b9530" loc="19:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f8fd93b9530"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f8fd96331b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd93b98b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd93b9a40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd93b9bd0"/>
        <function-ref name="cancel" scoped="" ref="0x7f8fd93b9d60"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8fd93a7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartSend" ref="0x7f8fd93c7ba0" loc="14:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartSend" scoped="" ref="0x7f8fd93c7ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f8fd96331b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd93d6020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd93d61b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd93d6340"/>
        <function-ref name="cancel" scoped="" ref="0x7f8fd93d64d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8fd93d6660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartAMPacket" ref="0x7f8fd93a88c0" loc="17:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartAMPacket" scoped="" ref="0x7f8fd93a88c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f8fd93a8c40"/>
        <function-ref name="source" scoped="" ref="0x7f8fd93a8dd0"/>
        <function-ref name="address" scoped="" ref="0x7f8fd93c3020"/>
        <function-ref name="destination" scoped="" ref="0x7f8fd93c31b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f8fd93c3340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f8fd93c34d0"/>
        <function-ref name="type" scoped="" ref="0x7f8fd93c3660"/>
        <function-ref name="setType" scoped="" ref="0x7f8fd93c37f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f8fd93c3980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f8fd93c3b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f8fd93c3ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSnoop" ref="0x7f8fd93a5510" loc="21:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSnoop" scoped="" ref="0x7f8fd93a5510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f8fd96331b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8fd93a5890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f8fd9337c80" loc="46:/home/sumukh/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f8fd9337c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f8fd93340a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f8fd9334230"/>
        <function-ref name="led1On" scoped="" ref="0x7f8fd93343c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f8fd9334550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f8fd93346e0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd9334870"/>
        <function-ref name="led1Off" scoped="" ref="0x7f8fd9334a00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f8fd93331b0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd9334b90"/>
        <function-ref name="led0On" scoped="" ref="0x7f8fd9334d20"/>
        <function-ref name="led2On" scoped="" ref="0x7f8fd9333020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f8fd932e020" loc="50:/home/sumukh/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f8fd932e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd932e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd932e530"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd932e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd932e850"/>
        <function-ref name="get" scoped="" ref="0x7f8fd932e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd932eb70"/>
        <function-ref name="set" scoped="" ref="0x7f8fd932ed00"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd932d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8fd9330110" loc="46:/home/sumukh/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f8fd9330110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd9330490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f8fd932d340" loc="51:/home/sumukh/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f8fd932d340"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd932d6c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd932d850"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd932d9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd932db70"/>
        <function-ref name="get" scoped="" ref="0x7f8fd932dd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd932c020"/>
        <function-ref name="set" scoped="" ref="0x7f8fd932c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd932c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f8fd9330710" loc="47:/home/sumukh/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f8fd9330710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f8fd9330a90"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f8fd9330c20"/>
        <function-ref name="led1On" scoped="" ref="0x7f8fd9330db0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f8fd932f020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f8fd932f1b0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd932f340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f8fd932f4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f8fd932fb10"/>
        <function-ref name="set" scoped="" ref="0x7f8fd932f660"/>
        <function-ref name="led0On" scoped="" ref="0x7f8fd932f7f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f8fd932f980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f8fd932c660" loc="52:/home/sumukh/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f8fd932c660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd932c9e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd932cb70"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd932cd00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd932b020"/>
        <function-ref name="get" scoped="" ref="0x7f8fd932b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd932b340"/>
        <function-ref name="set" scoped="" ref="0x7f8fd932b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd932b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f8fd9331b60" loc="44:/home/sumukh/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f8fd9331b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd930f020"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd930f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd930f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd930f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd930f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd930f7f0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd930f980"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd930fb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f8fd930fe70" loc="45:/home/sumukh/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f8fd930fe70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd930e220"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd930e3b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd930e540"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd930e6d0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd930e860"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd930e9f0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd930eb80"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd930ed10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f8fd930c2e0" loc="47:/home/sumukh/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f8fd930c2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd930c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f8fd930d0f0" loc="46:/home/sumukh/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f8fd930d0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd930d470"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd930d600"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd930d790"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd930d920"/>
        <function-ref name="get" scoped="" ref="0x7f8fd930dab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd930dc40"/>
        <function-ref name="set" scoped="" ref="0x7f8fd930ddd0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd930c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f8fd9307d60" loc="55:/home/sumukh/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f8fd9307d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f8fd9304180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f8fd9304310"/>
        <function-ref name="start" scoped="" ref="0x7f8fd93044a0"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd9304630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f8fd9304e00" loc="57:/home/sumukh/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f8fd9304e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f8fd96331b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd93031c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd9303350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd93034e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f8fd9303670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8fd9303800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f8fd9301c00" loc="59:/home/sumukh/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f8fd9301c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f8fd96331b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8fd9300020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f8fd93002b0" loc="61:/home/sumukh/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f8fd93002b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8fd9300630"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f8fd93007c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd9300950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd9300ae0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f8fd9300c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f8fd92fd430" loc="64:/home/sumukh/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f8fd92fd430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed9e0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8fd96edd50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f8fd92fcb00"/>
        <function-ref name="clear" scoped="" ref="0x7f8fd92ee2a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f8fd92fc3d0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd92ee9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f8fd92e15b0" loc="66:/home/sumukh/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f8fd92e15b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f8fd92e1930"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f8fd92e1ac0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f8fd92e1c50"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f8fd92e1de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f8fd9301020" loc="58:/home/sumukh/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f8fd9301020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f8fd96331b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8fd93013a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f8fd92f6350" loc="63:/home/sumukh/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f8fd92f6350"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f8fd92f66d0"/>
        <function-ref name="noAck" scoped="" ref="0x7f8fd92f6860"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f8fd92f69f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f8fd92ff020" loc="62:/home/sumukh/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f8fd92ff020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f8fd92ff3a0"/>
        <function-ref name="source" scoped="" ref="0x7f8fd92ff530"/>
        <function-ref name="address" scoped="" ref="0x7f8fd92ff6c0"/>
        <function-ref name="destination" scoped="" ref="0x7f8fd92ff850"/>
        <function-ref name="setSource" scoped="" ref="0x7f8fd92ff9e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f8fd92ffb70"/>
        <function-ref name="type" scoped="" ref="0x7f8fd92ffd00"/>
        <function-ref name="setType" scoped="" ref="0x7f8fd92fe020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f8fd92fe1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f8fd92fe340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f8fd92fe4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f8fd92ed660" loc="65:/home/sumukh/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f8fd92ed660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8fd96ed5a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f8fd92ecce0"/>
        <function-ref name="clear" scoped="" ref="0x7f8fd92ea460"/>
        <function-ref name="isValid" scoped="" ref="0x7f8fd92ec5b0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd92eab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f8fd92d62f0" loc="55:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f8fd92d62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f8fd92d6670"/>
        <function-ref name="stopDone" scoped="" ref="0x7f8fd92d6800"/>
        <function-ref name="start" scoped="" ref="0x7f8fd92d6990"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd92d6b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f8fd92ce2c0" loc="64:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7f8fd92ce2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f8fd96331b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f8fd92ce640"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f8fd92ce7d0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f8fd92ce960"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f8fd92ceaf0"/>
        <function-ref name="setCca" scoped="" ref="0x7f8fd92cec80"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f8fd92cee10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f8fd92b91d0" loc="67:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f8fd92b91d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f8fd96331b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f8fd92b9650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f8fd92d0020" loc="60:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f8fd92d0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8fd92d03a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f8fd92d0530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd92d06c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd92d0850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f8fd92d09e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f8fd92d5320" loc="56:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f8fd92d5320"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f8fd96331b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd92d56a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd92d5830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd92d59c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f8fd92d5b50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8fd92d5ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f8fd92d21d0" loc="58:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f8fd92d21d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f8fd96331b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8fd92d2550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f8fd92c60f0" loc="61:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f8fd92c60f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f8fd92c6470"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f8fd92c6600"/>
        <function-ref name="getRssi" scoped="" ref="0x7f8fd92c6790"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f8fd92c6920"/>
        <function-ref name="getPower" scoped="" ref="0x7f8fd92c6ab0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f8fd92c6c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f8fd92bb170" loc="65:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f8fd92bb170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f8fd92bb4f0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f8fd92bb680"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f8fd92bb810"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f8fd92bb9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f8fd92d4510" loc="57:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f8fd92d4510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f8fd96331b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8fd92d4890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f8fd92cf020" loc="62:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f8fd92cf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f8fd92cf3a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f8fd92cf530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f8fd92cf6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f8fd92b1430" loc="66:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f8fd92b1430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f8fd92b17b0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f8fd92b1940"/>
        <function-ref name="getRetries" scoped="" ref="0x7f8fd92b1ad0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f8fd92b1c60"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f8fd92b1df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f8fd92d2800" loc="59:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f8fd92d2800"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f8fd92d2b80"/>
        <function-ref name="source" scoped="" ref="0x7f8fd92d2d10"/>
        <function-ref name="address" scoped="" ref="0x7f8fd92d1020"/>
        <function-ref name="destination" scoped="" ref="0x7f8fd92d11b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f8fd92d1340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f8fd92d14d0"/>
        <function-ref name="type" scoped="" ref="0x7f8fd92d1660"/>
        <function-ref name="setType" scoped="" ref="0x7f8fd92d17f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f8fd92d1980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f8fd92d1b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f8fd92d1ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f8fd92c1170" loc="63:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f8fd92c1170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f8fd92c14f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f8fd92ac020" loc="43:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f8fd92ac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f8fd92ac3a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f8fd92ac530"/>
        <function-ref name="start" scoped="" ref="0x7f8fd92ac6c0"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd92ac850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f8fd9297080" loc="55:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f8fd9297080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f8fd9297400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f8fd92962e0" loc="57:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f8fd92962e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f8fd9296660"/>
        <function-ref name="setRetries" scoped="" ref="0x7f8fd92967f0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f8fd9296980"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f8fd9296b10"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f8fd9296ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f8fd9299670" loc="53:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f8fd9299670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f8fd92999f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f8fd9299b80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f8fd9299d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f8fd9298020"/>
        <function-ref name="getPower" scoped="" ref="0x7f8fd92981b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f8fd9298340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f8fd929b170" loc="50:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x7f8fd929b170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd929b4f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd929b680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd929b810"/>
        <function-ref name="cancel" scoped="" ref="0x7f8fd929b9a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8fd929bb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f8fd9297700" loc="56:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f8fd9297700"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f8fd9297a80"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f8fd9297c10"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f8fd9297da0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f8fd9296020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f8fd92a5d30" loc="47:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7f8fd92a5d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8fd92a40e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f8fd9298670" loc="54:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f8fd9298670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f8fd92989f0"/>
        <function-ref name="noAck" scoped="" ref="0x7f8fd9298b80"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f8fd9298d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f8fd92ab530" loc="45:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f8fd92ab530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8fd92ab8b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8fd92aba40"/>
        <function-ref name="request" scoped="" ref="0x7f8fd92abbd0"/>
        <function-ref name="granted" scoped="" ref="0x7f8fd92abd60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8fd92aa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f8fd92a5020" loc="46:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f8fd92a5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd92a53a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd92a5530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd92a56c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f8fd92a5850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8fd92a59e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f8fd92a4420" loc="48:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x7f8fd92a4420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8fd92a47a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f8fd92a4930"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd92a4ac0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd92a4c50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f8fd92a4de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f8fd9299020" loc="51:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x7f8fd9299020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8fd92993a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f8fd92959f0" loc="44:/home/sumukh/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f8fd92959f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f8fd9295d70"/>
        <function-ref name="stopDone" scoped="" ref="0x7f8fd9292020"/>
        <function-ref name="start" scoped="" ref="0x7f8fd92921b0"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd9292340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f8fd9291990" loc="47:/home/sumukh/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7f8fd9291990"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f8fd9291d10"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f8fd9290020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f8fd92901b0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f8fd9290340"/>
        <function-ref name="setCca" scoped="" ref="0x7f8fd92904d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f8fd9290660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f8fd9292600" loc="45:/home/sumukh/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f8fd9292600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd9292980"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd9292b10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd9292ca0"/>
        <function-ref name="cancel" scoped="" ref="0x7f8fd9292e30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8fd9291020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f8fd9291300" loc="46:/home/sumukh/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f8fd9291300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8fd9291680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f8fd928d690" loc="39:/home/sumukh/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f8fd928d690"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f8fd928da10"/>
        <function-ref name="stopDone" scoped="" ref="0x7f8fd928dba0"/>
        <function-ref name="start" scoped="" ref="0x7f8fd928dd30"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd928c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f8fd928b020" loc="41:/home/sumukh/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7f8fd928b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f8fd928b3a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f8fd928b530"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f8fd928b6c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f8fd928b850"/>
        <function-ref name="setCca" scoped="" ref="0x7f8fd928b9e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f8fd928bb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f8fd9281ae0" loc="47:/home/sumukh/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x7f8fd9281ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f8fd9281e60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f8fd927e020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f8fd927e1b0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f8fd927e340"/>
        <function-ref name="setCca" scoped="" ref="0x7f8fd927e4d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f8fd927e660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f8fd9274020" loc="50:/home/sumukh/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f8fd9274020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f8fd92743a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f8fd9274530"/>
        <function-ref name="getRssi" scoped="" ref="0x7f8fd92746c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f8fd9274850"/>
        <function-ref name="getPower" scoped="" ref="0x7f8fd92749e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f8fd9274b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7f8fd9278d30" loc="46:/home/sumukh/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f8fd9278d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd92810e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f8fd9281270"/>
        <function-ref name="modify" scoped="" ref="0x7f8fd9281400"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8fd9281590"/>
        <function-ref name="resend" scoped="" ref="0x7f8fd9281720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f8fd928c2e0" loc="40:/home/sumukh/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f8fd928c2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd928c660"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd928c7f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd928c980"/>
        <function-ref name="cancel" scoped="" ref="0x7f8fd928cb10"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8fd928cca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f8fd9277020" loc="48:/home/sumukh/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f8fd9277020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f8fd92773a0"/>
        <function-ref name="rand32" scoped="" ref="0x7f8fd9277530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f8fd9288020" loc="45:/home/sumukh/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f8fd9288020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f8fd92883a0"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd9288530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f8fd926d660" loc="51:/home/sumukh/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f8fd926d660"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd926d9e0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f8fd926db70"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f8fd926dd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7f8fd92823f0" loc="44:/home/sumukh/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7f8fd92823f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f8fd9282770"/>
        <function-ref name="rfOff" scoped="" ref="0x7f8fd9282900"/>
        <function-ref name="rxOn" scoped="" ref="0x7f8fd9282a90"/>
        <function-ref name="startVReg" scoped="" ref="0x7f8fd9282c20"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f8fd9282db0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f8fd9289020"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f8fd92891b0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f8fd9289340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f8fd92777f0" loc="49:/home/sumukh/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f8fd92777f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f8fd9277b70"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f8fd9277d00"/>
        <function-ref name="led1On" scoped="" ref="0x7f8fd9276020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f8fd92761b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f8fd9276340"/>
        <function-ref name="get" scoped="" ref="0x7f8fd92764d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f8fd9276660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f8fd9276ca0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd92767f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f8fd9276980"/>
        <function-ref name="led2On" scoped="" ref="0x7f8fd9276b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f8fd928be60" loc="43:/home/sumukh/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f8fd928be60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8fd928a210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8fd928a3a0"/>
        <function-ref name="request" scoped="" ref="0x7f8fd928a530"/>
        <function-ref name="granted" scoped="" ref="0x7f8fd928a6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8fd928a850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7f8fd9268e40" loc="52:/home/sumukh/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0x7f8fd9268e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f8fd9271310"/>
        <function-ref name="toIdle" scoped="" ref="0x7f8fd92714a0"/>
        <function-ref name="isState" scoped="" ref="0x7f8fd9271630"/>
        <function-ref name="isIdle" scoped="" ref="0x7f8fd92717c0"/>
        <function-ref name="requestState" scoped="" ref="0x7f8fd9271950"/>
        <function-ref name="forceState" scoped="" ref="0x7f8fd9271ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7f8fd92639e0" loc="76:/home/sumukh/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0x7f8fd92639e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8fd9263d60"/>
        <function-ref name="runTask" scoped="" ref="0x7f8fd9262020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7f8fd9264a10" loc="75:/home/sumukh/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0x7f8fd9264a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8fd9264d90"/>
        <function-ref name="runTask" scoped="" ref="0x7f8fd9263020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7f8fd9265a00" loc="74:/home/sumukh/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0x7f8fd9265a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8fd9265d80"/>
        <function-ref name="runTask" scoped="" ref="0x7f8fd9264020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f8fd920ab80" loc="45:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7f8fd920ab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f8fd9216020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f8fd92161b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f8fd9216340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f8fd92164d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f8fd9216660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f8fd92167f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f8fd9216980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f8fd9216b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f8fd9216ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f8fd9216e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f8fd9215020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f8fd92151b0"/>
        <function-ref name="sync" scoped="" ref="0x7f8fd9215340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f8fd92155d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f8fd9215760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f8fd9208020" loc="47:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x7f8fd9208020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd9208c10"/>
        <function-ref name="readDone" scoped="" ref="0x7f8fd92070d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f8fd9215a60" loc="46:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7f8fd9215a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f8fd9215de0"/>
        <function-ref name="rfOff" scoped="" ref="0x7f8fd9209020"/>
        <function-ref name="rxOn" scoped="" ref="0x7f8fd92091b0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f8fd9209340"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f8fd92094d0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f8fd9209660"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f8fd92097f0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f8fd9209980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f8fd921b730" loc="44:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f8fd921b730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8fd921bab0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8fd921bc40"/>
        <function-ref name="request" scoped="" ref="0x7f8fd921bdd0"/>
        <function-ref name="granted" scoped="" ref="0x7f8fd9217020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8fd92171b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f8fd9200970" loc="46:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7f8fd9200970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f8fd9200cf0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f8fd9200e80"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f8fd91ff030"/>
        <function-ref name="syncDone" scoped="" ref="0x7f8fd91ff1c0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f8fd91ff350"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f8fd91ff4e0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f8fd91ff670"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f8fd91ff800"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f8fd91ff990"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f8fd91ffb20"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f8fd91ffcb0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f8fd91ffe40"/>
        <function-ref name="sync" scoped="" ref="0x7f8fd91fe020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f8fd91fe2b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f8fd91fe440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7f8fd91d88e0" loc="66:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7f8fd91d88e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd91d8c60"/>
        <function-ref name="write" scoped="" ref="0x7f8fd91d8df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f8fd91fa020" loc="50:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f8fd91fa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f8fd91fa3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7f8fd91f1d90" loc="52:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0x7f8fd91f1d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed9e0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8fd96edd50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8fd91f0670"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd91f75d0"/>
        <function-ref name="startAt" scoped="" ref="0x7f8fd91f0020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8fd91f7a90"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f8fd91f0b30"/>
        <function-ref name="start" scoped="" ref="0x7f8fd91f9bc0"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd91f7110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7f8fd91dc5f0" loc="64:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f8fd91dc5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd91dc970"/>
        <function-ref name="write" scoped="" ref="0x7f8fd91dcb00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f8fd91ed380" loc="54:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7f8fd91ed380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd91ed700"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd91ed890"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd91eda20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd91edbb0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd91edd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd91ec020"/>
        <function-ref name="set" scoped="" ref="0x7f8fd91ec1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd91ec340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f8fd91fdb40" loc="48:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x7f8fd91fdb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd91fc750"/>
        <function-ref name="readDone" scoped="" ref="0x7f8fd91fcbd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7f8fd91c6820" loc="126:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone" scoped="" ref="0x7f8fd91c6820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8fd91c6ba0"/>
        <function-ref name="runTask" scoped="" ref="0x7f8fd91c6d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7f8fd91d71c0" loc="67:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7f8fd91d71c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd91d7540"/>
        <function-ref name="write" scoped="" ref="0x7f8fd91d76d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f8fd91d7a70" loc="68:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f8fd91d7a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd91d7df0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd91d6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7f8fd91e13d0" loc="62:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7f8fd91e13d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd91e1750"/>
        <function-ref name="write" scoped="" ref="0x7f8fd91e18e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f8fd91e2810" loc="57:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f8fd91e2810"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f8fd91e2b90"/>
        <function-ref name="changed" scoped="" ref="0x7f8fd91e2d20"/>
        <function-ref name="amGroup" scoped="" ref="0x7f8fd91e9020"/>
        <function-ref name="setAddress" scoped="" ref="0x7f8fd91e91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f8fd91ee060" loc="53:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7f8fd91ee060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd91ee3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd91ee570"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd91ee700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd91ee890"/>
        <function-ref name="get" scoped="" ref="0x7f8fd91eea20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd91eebb0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd91eed40"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd91ed020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7f8fd91d5160" loc="71:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f8fd91d5160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd91d56e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7f8fd91ec6a0" loc="55:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x7f8fd91ec6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd91eca20"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd91ecbb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd91ecd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd91eb020"/>
        <function-ref name="get" scoped="" ref="0x7f8fd91eb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd91eb340"/>
        <function-ref name="set" scoped="" ref="0x7f8fd91eb4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd91eb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8fd92014a0" loc="44:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f8fd92014a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd9201820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f8fd91d8020" loc="65:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f8fd91d8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd91d83a0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd91d8530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7f8fd91d5a80" loc="72:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7f8fd91d5a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd91d5e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f8fd91d41d0" loc="74:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f8fd91d41d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8fd91d4550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8fd91d46e0"/>
        <function-ref name="request" scoped="" ref="0x7f8fd91d4870"/>
        <function-ref name="granted" scoped="" ref="0x7f8fd91d4a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8fd91d4b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7f8fd91d2d90" loc="76:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0x7f8fd91d2d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8fd91d1180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8fd91d1310"/>
        <function-ref name="request" scoped="" ref="0x7f8fd91d14a0"/>
        <function-ref name="granted" scoped="" ref="0x7f8fd91d1630"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8fd91d17c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f8fd91fe740" loc="47:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7f8fd91fe740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f8fd91feac0"/>
        <function-ref name="rfOff" scoped="" ref="0x7f8fd91fec50"/>
        <function-ref name="rxOn" scoped="" ref="0x7f8fd91fede0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f8fd91fd020"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f8fd91fd1b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f8fd91fd340"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f8fd91fd4d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f8fd91fd660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7f8fd91e1c80" loc="63:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7f8fd91e1c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd91dc0a0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd91dc230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7f8fd91dab00" loc="61:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7f8fd91dab00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd91dae80"/>
        <function-ref name="write" scoped="" ref="0x7f8fd91e1030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7f8fd91d32e0" loc="69:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7f8fd91d32e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd91d3660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f8fd91d1a80" loc="78:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f8fd91d1a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f8fd91d1e00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f8fd91d0020"/>
        <function-ref name="led1On" scoped="" ref="0x7f8fd91d01b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f8fd91d0340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f8fd91d04d0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd91d0660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f8fd91d07f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f8fd91d0e30"/>
        <function-ref name="set" scoped="" ref="0x7f8fd91d0980"/>
        <function-ref name="led0On" scoped="" ref="0x7f8fd91d0b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f8fd91d0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7f8fd91c8940" loc="125:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sync" scoped="" ref="0x7f8fd91c8940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8fd91c8cc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f8fd91c8e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f8fd9201b10" loc="45:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f8fd9201b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8fd9200020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8fd92001b0"/>
        <function-ref name="request" scoped="" ref="0x7f8fd9200340"/>
        <function-ref name="granted" scoped="" ref="0x7f8fd92004d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8fd9200660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7f8fd91e6520" loc="60:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7f8fd91e6520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd91e68a0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd91e6a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7f8fd91dda90" loc="59:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7f8fd91dda90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd91e6020"/>
        <function-ref name="write" scoped="" ref="0x7f8fd91e61b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7f8fd91ea0e0" loc="56:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x7f8fd91ea0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8fd91ea460"/>
        <function-ref name="disable" scoped="" ref="0x7f8fd91ea5f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f8fd91ea780"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f8fd91ea910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7f8fd91d2020" loc="75:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x7f8fd91d2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8fd91d23a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8fd91d2530"/>
        <function-ref name="request" scoped="" ref="0x7f8fd91d26c0"/>
        <function-ref name="granted" scoped="" ref="0x7f8fd91d2850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8fd91d29e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7f8fd91d39f0" loc="70:/home/sumukh/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7f8fd91d39f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd91d3d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8fd91517f0" loc="45:/home/sumukh/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f8fd91517f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd9151b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f8fd914d220" loc="46:/home/sumukh/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f8fd914d220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed9e0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8fd96edd50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8fd914bb30"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd914ca60"/>
        <function-ref name="startAt" scoped="" ref="0x7f8fd914b4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8fd914b020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f8fd914a020"/>
        <function-ref name="start" scoped="" ref="0x7f8fd914c090"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd914c5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f8fd9147690" loc="86:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f8fd9147690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed9e0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8fd96edd50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8fd8eee020"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd8eef020"/>
        <function-ref name="startAt" scoped="" ref="0x7f8fd8eef9a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8fd8eef4e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f8fd8eee4e0"/>
        <function-ref name="start" scoped="" ref="0x7f8fd8ef05b0"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd8ef0ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8fd8eee910" loc="87:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f8fd8eee910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd8eeec90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f8fd7e15020" loc="28:/home/sumukh/tinyos-main/tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f8fd7e15020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed9e0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8fd96edd50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8fd7e12870"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd7e13840"/>
        <function-ref name="startAt" scoped="" ref="0x7f8fd7e12220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8fd7e13d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f8fd7e12d30"/>
        <function-ref name="start" scoped="" ref="0x7f8fd7e15e30"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd7e13380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f8fd7e0e950" loc="30:/home/sumukh/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f8fd7e0e950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed9e0"/>
            <typename><typedef-ref name="TOne" ref="0x7f8fd96b3a90"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8fd7e0b1b0"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd7e0c1b0"/>
        <function-ref name="startAt" scoped="" ref="0x7f8fd7e0cb30"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8fd7e0c670"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f8fd7e0b670"/>
        <function-ref name="start" scoped="" ref="0x7f8fd7e0d780"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd7e0dc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f8fd91220c0" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f8fd91220c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f8fd9122440"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7f8fd91225d0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f8fd9122760"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7f8fd91228f0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f8fd9122a80"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f8fd9122c10"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7f8fd9122da0"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7f8fd9121020"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7f8fd91211b0"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7f8fd9121340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f8fd9118020" loc="47:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f8fd9118020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f8fd910e4e0"/>
        <function-ref name="test" scoped="" ref="0x7f8fd910fa10"/>
        <function-ref name="get" scoped="" ref="0x7f8fd9118c50"/>
        <function-ref name="captured" scoped="" ref="0x7f8fd9110660"/>
        <function-ref name="reset" scoped="" ref="0x7f8fd9110b70"/>
        <function-ref name="isOn" scoped="" ref="0x7f8fd910e020"/>
        <function-ref name="set" scoped="" ref="0x7f8fd9110150"/>
        <function-ref name="start" scoped="" ref="0x7f8fd910f090"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd910f550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f8fd9106c10" loc="48:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f8fd9106c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f8fd91045d0"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd910c2a0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd910d8a0"/>
        <function-ref name="reset" scoped="" ref="0x7f8fd910c760"/>
        <function-ref name="isOn" scoped="" ref="0x7f8fd9104a90"/>
        <function-ref name="set" scoped="" ref="0x7f8fd910dd60"/>
        <function-ref name="start" scoped="" ref="0x7f8fd910cc20"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd9104110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f8fd91267b0" loc="45:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f8fd91267b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f8fd9124b30"/>
        <function-ref name="test" scoped="" ref="0x7f8fd91241b0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd912f440"/>
        <function-ref name="setScale" scoped="" ref="0x7f8fd9123020"/>
        <function-ref name="getScale" scoped="" ref="0x7f8fd9123530"/>
        <function-ref name="reset" scoped="" ref="0x7f8fd9125340"/>
        <function-ref name="overflow" scoped="" ref="0x7f8fd912fe10"/>
        <function-ref name="isOn" scoped="" ref="0x7f8fd9124670"/>
        <function-ref name="set" scoped="" ref="0x7f8fd912f900"/>
        <function-ref name="start" scoped="" ref="0x7f8fd9125800"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd9125cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f8fd90f4dd0" loc="48:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f8fd90f4dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7f8fd90f9180"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f8fd90f9310"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f8fd90f94a0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f8fd90f9630"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f8fd90f97c0"/>
        <function-ref name="setControl" scoped="" ref="0x7f8fd90f9950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7f8fd90ebcb0" loc="50:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f8fd90ebcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7f8fd90ef0a0"/>
        <function-ref name="compareBusy" scoped="" ref="0x7f8fd90ef230"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7f8fd90ef3c0"/>
        <function-ref name="countBusy" scoped="" ref="0x7f8fd90ef550"/>
        <function-ref name="getAssr" scoped="" ref="0x7f8fd90ef6e0"/>
        <function-ref name="setAssr" scoped="" ref="0x7f8fd90ef870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f8fd90f9e50" loc="49:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f8fd90f9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f8fd90f29a0"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd90f3530"/>
        <function-ref name="get" scoped="" ref="0x7f8fd90f8ac0"/>
        <function-ref name="reset" scoped="" ref="0x7f8fd90f39f0"/>
        <function-ref name="isOn" scoped="" ref="0x7f8fd90f2e60"/>
        <function-ref name="set" scoped="" ref="0x7f8fd90f3020"/>
        <function-ref name="start" scoped="" ref="0x7f8fd90f2020"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd90f24e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f8fd9102c70" loc="47:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f8fd9102c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f8fd90fb020"/>
        <function-ref name="test" scoped="" ref="0x7f8fd90fd610"/>
        <function-ref name="get" scoped="" ref="0x7f8fd90ff8e0"/>
        <function-ref name="setScale" scoped="" ref="0x7f8fd90fb4e0"/>
        <function-ref name="getScale" scoped="" ref="0x7f8fd90fb9f0"/>
        <function-ref name="reset" scoped="" ref="0x7f8fd90fe7a0"/>
        <function-ref name="overflow" scoped="" ref="0x7f8fd90fe2e0"/>
        <function-ref name="isOn" scoped="" ref="0x7f8fd90fdad0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd90ffda0"/>
        <function-ref name="start" scoped="" ref="0x7f8fd90fec60"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd90fd150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f8fd90e2020" loc="50:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f8fd90e2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7f8fd90e23a0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f8fd90e2530"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f8fd90e26c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f8fd90e2850"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f8fd90e29e0"/>
        <function-ref name="setControl" scoped="" ref="0x7f8fd90e2b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f8fd90dd4c0" loc="52:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f8fd90dd4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f8fd90dd840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7f8fd90ddc00" loc="53:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f8fd90ddc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7f8fd90dc020"/>
        <function-ref name="compareBusy" scoped="" ref="0x7f8fd90dc1b0"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7f8fd90dc340"/>
        <function-ref name="countBusy" scoped="" ref="0x7f8fd90dc4d0"/>
        <function-ref name="getAssr" scoped="" ref="0x7f8fd90dc660"/>
        <function-ref name="setAssr" scoped="" ref="0x7f8fd90dc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f8fd90e10b0" loc="51:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f8fd90e10b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f8fd90dea50"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd90e0730"/>
        <function-ref name="get" scoped="" ref="0x7f8fd90e1ce0"/>
        <function-ref name="reset" scoped="" ref="0x7f8fd90e0bf0"/>
        <function-ref name="isOn" scoped="" ref="0x7f8fd90dd020"/>
        <function-ref name="set" scoped="" ref="0x7f8fd90e0220"/>
        <function-ref name="start" scoped="" ref="0x7f8fd90de0d0"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd90de590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f8fd90eecf0" loc="49:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f8fd90eecf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f8fd90e3090"/>
        <function-ref name="test" scoped="" ref="0x7f8fd90e56e0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd90e7980"/>
        <function-ref name="setScale" scoped="" ref="0x7f8fd90e3550"/>
        <function-ref name="getScale" scoped="" ref="0x7f8fd90e3a60"/>
        <function-ref name="reset" scoped="" ref="0x7f8fd90e6840"/>
        <function-ref name="overflow" scoped="" ref="0x7f8fd90e6380"/>
        <function-ref name="isOn" scoped="" ref="0x7f8fd90e5ba0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd90e7e40"/>
        <function-ref name="start" scoped="" ref="0x7f8fd90e6d00"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd90e5220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f8fd9079580" loc="47:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f8fd9079580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f8fd9079900"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7f8fd9079a90"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f8fd9079c20"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7f8fd9079db0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f8fd9078020"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f8fd90781b0"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7f8fd9078340"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7f8fd90784d0"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7f8fd9078660"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7f8fd90787f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x7f8fd9066910" loc="53:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x7f8fd9066910"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7f8fd9066c90"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f8fd9066e20"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f8fd9065020"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f8fd90651b0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f8fd9065340"/>
        <function-ref name="setControl" scoped="" ref="0x7f8fd90654d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7f8fd90737e0" loc="49:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7f8fd90737e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f8fd906f1b0"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd9072e10"/>
        <function-ref name="get" scoped="" ref="0x7f8fd9072440"/>
        <function-ref name="reset" scoped="" ref="0x7f8fd9070340"/>
        <function-ref name="isOn" scoped="" ref="0x7f8fd906f670"/>
        <function-ref name="set" scoped="" ref="0x7f8fd9072900"/>
        <function-ref name="start" scoped="" ref="0x7f8fd9070800"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd9070cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f8fd9078d00" loc="48:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f8fd9078d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f8fd90730d0"/>
        <function-ref name="test" scoped="" ref="0x7f8fd9074720"/>
        <function-ref name="get" scoped="" ref="0x7f8fd9077980"/>
        <function-ref name="captured" scoped="" ref="0x7f8fd9076380"/>
        <function-ref name="reset" scoped="" ref="0x7f8fd9076890"/>
        <function-ref name="isOn" scoped="" ref="0x7f8fd9074be0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd9077e40"/>
        <function-ref name="start" scoped="" ref="0x7f8fd9076d50"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd9074260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7f8fd906fd30" loc="50:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7f8fd906fd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f8fd906b6e0"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd906d380"/>
        <function-ref name="get" scoped="" ref="0x7f8fd906e980"/>
        <function-ref name="reset" scoped="" ref="0x7f8fd906d840"/>
        <function-ref name="isOn" scoped="" ref="0x7f8fd906bba0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd906ee40"/>
        <function-ref name="start" scoped="" ref="0x7f8fd906dd00"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd906b220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7f8fd906a2a0" loc="51:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7f8fd906a2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f8fd9068e60"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd90699f0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd9069020"/>
        <function-ref name="reset" scoped="" ref="0x7f8fd9068020"/>
        <function-ref name="isOn" scoped="" ref="0x7f8fd9066350"/>
        <function-ref name="set" scoped="" ref="0x7f8fd90694e0"/>
        <function-ref name="start" scoped="" ref="0x7f8fd90684e0"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd90689a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f8fd907e0a0" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f8fd907e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f8fd907a4e0"/>
        <function-ref name="test" scoped="" ref="0x7f8fd907ca10"/>
        <function-ref name="get" scoped="" ref="0x7f8fd907ecd0"/>
        <function-ref name="setScale" scoped="" ref="0x7f8fd907a9a0"/>
        <function-ref name="getScale" scoped="" ref="0x7f8fd9079020"/>
        <function-ref name="reset" scoped="" ref="0x7f8fd907db80"/>
        <function-ref name="overflow" scoped="" ref="0x7f8fd907d6c0"/>
        <function-ref name="isOn" scoped="" ref="0x7f8fd907a020"/>
        <function-ref name="set" scoped="" ref="0x7f8fd907d1b0"/>
        <function-ref name="start" scoped="" ref="0x7f8fd907c090"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd907c550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8fd8fd3e80" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f8fd8fd3e80"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f8fd9779660"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f8fd9779660"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd8fd2220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f8fd8fd2610" loc="47:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f8fd8fd2610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f8fd8fc2a90"/>
        <function-ref name="test" scoped="" ref="0x7f8fd8fc2110"/>
        <function-ref name="get" scoped="" ref="0x7f8fd8fc53d0"/>
        <function-ref name="setScale" scoped="" ref="0x7f8fd8fc1020"/>
        <function-ref name="getScale" scoped="" ref="0x7f8fd8fc1530"/>
        <function-ref name="reset" scoped="" ref="0x7f8fd8fc32a0"/>
        <function-ref name="overflow" scoped="" ref="0x7f8fd8fc5da0"/>
        <function-ref name="isOn" scoped="" ref="0x7f8fd8fc25d0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd8fc5890"/>
        <function-ref name="start" scoped="" ref="0x7f8fd8fc3760"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd8fc3c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f8fd7df8d90" loc="55:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f8fd7df8d90"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x7f8fd97792e0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x7f8fd97792e0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed9e0"/>
            <typename><typedef-ref name="TOne" ref="0x7f8fd96b3a90"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8fd7df2670"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd7df35d0"/>
        <function-ref name="startAt" scoped="" ref="0x7f8fd7df2020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8fd7df3a90"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f8fd7df2b30"/>
        <function-ref name="start" scoped="" ref="0x7f8fd7df4bc0"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd7df3110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x7f8fd7dec570" loc="58:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x7f8fd7dec570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f8fd7de8020"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd7deabc0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd7dea1f0"/>
        <function-ref name="reset" scoped="" ref="0x7f8fd7de90d0"/>
        <function-ref name="isOn" scoped="" ref="0x7f8fd7de84e0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd7dea6b0"/>
        <function-ref name="start" scoped="" ref="0x7f8fd7de9590"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd7de9a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x7f8fd7df10b0" loc="57:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x7f8fd7df10b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f8fd7ded4e0"/>
        <function-ref name="test" scoped="" ref="0x7f8fd7deea50"/>
        <function-ref name="get" scoped="" ref="0x7f8fd7df1ce0"/>
        <function-ref name="setScale" scoped="" ref="0x7f8fd7ded9a0"/>
        <function-ref name="getScale" scoped="" ref="0x7f8fd7dec020"/>
        <function-ref name="reset" scoped="" ref="0x7f8fd7defbf0"/>
        <function-ref name="overflow" scoped="" ref="0x7f8fd7def730"/>
        <function-ref name="isOn" scoped="" ref="0x7f8fd7ded020"/>
        <function-ref name="set" scoped="" ref="0x7f8fd7def220"/>
        <function-ref name="start" scoped="" ref="0x7f8fd7dee0d0"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd7dee590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f8fd8f81020" loc="24:/home/sumukh/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f8fd8f81020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed9e0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8fd96edd50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8fd8f81e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8fd8f80800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8fd8f80340"/>
        <function-ref name="overflow" scoped="" ref="0x7f8fd8f80cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f8fd8f77020" loc="24:/home/sumukh/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f8fd8f77020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed9e0"/>
            <typename><typedef-ref name="TOne" ref="0x7f8fd96b3a90"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8fd8f77e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8fd8f76800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8fd8f76340"/>
        <function-ref name="overflow" scoped="" ref="0x7f8fd8f76cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f8fd8f72cc0" loc="45:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f8fd8f72cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed9e0"/>
            <typename><typedef-ref name="TOne" ref="0x7f8fd96b3a90"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8fd8f61b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8fd8f60550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8fd8f60090"/>
        <function-ref name="overflow" scoped="" ref="0x7f8fd8f60a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f8fd8f5e020" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f8fd8f5e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f8fd8f5a350"/>
        <function-ref name="test" scoped="" ref="0x7f8fd8f5c9a0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd8f5ec50"/>
        <function-ref name="setScale" scoped="" ref="0x7f8fd8f5a810"/>
        <function-ref name="getScale" scoped="" ref="0x7f8fd8f5ad20"/>
        <function-ref name="reset" scoped="" ref="0x7f8fd8f5db20"/>
        <function-ref name="overflow" scoped="" ref="0x7f8fd8f5d660"/>
        <function-ref name="isOn" scoped="" ref="0x7f8fd8f5ce60"/>
        <function-ref name="set" scoped="" ref="0x7f8fd8f5d150"/>
        <function-ref name="start" scoped="" ref="0x7f8fd8f5c020"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd8f5c4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f8fd8f370f0" loc="63:/home/sumukh/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7f8fd8f370f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed9e0"/>
            <typename><typedef-ref name="TOne" ref="0x7f8fd96b3a90"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8fd8f36020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8fd8f369a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8fd8f364e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f8fd8f36e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f8fd8f55cf0" loc="62:/home/sumukh/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f8fd8f55cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed9e0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8fd96edd50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8fd8f3ab60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8fd8f38550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8fd8f38090"/>
        <function-ref name="overflow" scoped="" ref="0x7f8fd8f38a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f8fd7e09a90" loc="61:/home/sumukh/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f8fd7e09a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed9e0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8fd96edd50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8fd7e052e0"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd7e062e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f8fd7e06c60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8fd7e067a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f8fd7e057a0"/>
        <function-ref name="start" scoped="" ref="0x7f8fd7e088d0"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd7e08de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f8fd7e02210" loc="73:/home/sumukh/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x7f8fd7e02210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed9e0"/>
            <typename><typedef-ref name="TOne" ref="0x7f8fd96b3a90"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8fd7dffb30"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd7e00a60"/>
        <function-ref name="startAt" scoped="" ref="0x7f8fd7dff4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8fd7dff020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f8fd7dfe020"/>
        <function-ref name="start" scoped="" ref="0x7f8fd7e00090"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd7e005a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f8fd7e05e10" loc="68:/home/sumukh/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f8fd7e05e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed9e0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8fd96edd50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8fd7e04ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8fd7e03670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8fd7e031b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f8fd7e03b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8fd8ef2380" loc="18:/home/sumukh/tinyos-main/tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f8fd8ef2380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd8ef2700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7f8fd8ee84e0" loc="87:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x7f8fd8ee84e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd8ee8860"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd8ee89f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd8ee8b80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd8ee8d10"/>
        <function-ref name="get" scoped="" ref="0x7f8fd8ee7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd8ee71b0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd8ee7340"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd8ee74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7f8fd8ee7800" loc="88:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x7f8fd8ee7800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd8ee7b80"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd8ee7d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd8ee5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd8ee51b0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd8ee5340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd8ee54d0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd8ee5660"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd8ee57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f8fd8ee5b10" loc="89:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7f8fd8ee5b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd8ee4020"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd8ee41b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd8ee4340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd8ee44d0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd8ee4660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd8ee47f0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd8ee4980"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd8ee4b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7f8fd8ee9330" loc="86:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7f8fd8ee9330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd8ee96b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd8ee9840"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd8ee99d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd8ee9b60"/>
        <function-ref name="get" scoped="" ref="0x7f8fd8ee9cf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd8ee9e80"/>
        <function-ref name="set" scoped="" ref="0x7f8fd8ee8030"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd8ee81c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7f8fd8ee2020" loc="91:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x7f8fd8ee2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd8ee23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd8ee2530"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd8ee26c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd8ee2850"/>
        <function-ref name="get" scoped="" ref="0x7f8fd8ee29e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd8ee2b70"/>
        <function-ref name="set" scoped="" ref="0x7f8fd8ee2d00"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd8ee1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f8fd8eea020" loc="85:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7f8fd8eea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd8eea3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd8eea530"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd8eea6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd8eea850"/>
        <function-ref name="get" scoped="" ref="0x7f8fd8eea9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd8eeab70"/>
        <function-ref name="set" scoped="" ref="0x7f8fd8eead00"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd8ee9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7f8fd8ee4e20" loc="90:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x7f8fd8ee4e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd8ee31c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd8ee3350"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd8ee34e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd8ee3670"/>
        <function-ref name="get" scoped="" ref="0x7f8fd8ee3800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd8ee3990"/>
        <function-ref name="set" scoped="" ref="0x7f8fd8ee3b20"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd8ee3cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7f8fd8ed4200" loc="39:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x7f8fd8ed4200"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f8fd8ed4580"/>
        <function-ref name="disable" scoped="" ref="0x7f8fd8ed4710"/>
        <function-ref name="captured" scoped="" ref="0x7f8fd8ed48a0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f8fd8ed4a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7f8fd8ed4e10" loc="40:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x7f8fd8ed4e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8fd8ed81c0"/>
        <function-ref name="disable" scoped="" ref="0x7f8fd8ed8350"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f8fd8ed84e0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f8fd8ed8670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7f8fd8ed8a60" loc="41:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f8fd8ed8a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8fd8ed8de0"/>
        <function-ref name="disable" scoped="" ref="0x7f8fd8ed7020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f8fd8ed71b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f8fd8ed7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f8fd8ed3c60" loc="42:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f8fd8ed3c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f8fd8ed2020"/>
        <function-ref name="disable" scoped="" ref="0x7f8fd8ed21b0"/>
        <function-ref name="captured" scoped="" ref="0x7f8fd8ed2340"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f8fd8ed24d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0x7f8fd8ed28c0" loc="43:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0x7f8fd8ed28c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f8fd8ebee60"/>
        <function-ref name="test" scoped="" ref="0x7f8fd8ebe4e0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd8ec0520"/>
        <function-ref name="captured" scoped="" ref="0x7f8fd8ebf020"/>
        <function-ref name="reset" scoped="" ref="0x7f8fd8ebf530"/>
        <function-ref name="isOn" scoped="" ref="0x7f8fd8ebe9a0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd8ec09e0"/>
        <function-ref name="start" scoped="" ref="0x7f8fd8ebf9f0"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd8ebe020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7f8fd8eb8940" loc="9:/home/sumukh/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f8fd8eb8940"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8fd8eb8cc0"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd8eb8e50"/>
        <function-ref name="disable" scoped="" ref="0x7f8fd8ea6020"/>
        <function-ref name="edge" scoped="" ref="0x7f8fd8ea61b0"/>
        <function-ref name="enable" scoped="" ref="0x7f8fd8ea6340"/>
        <function-ref name="getValue" scoped="" ref="0x7f8fd8ea64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f8fd8eb9df0" loc="8:/home/sumukh/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7f8fd8eb9df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8fd8eb81c0"/>
        <function-ref name="disable" scoped="" ref="0x7f8fd8eb8350"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f8fd8eb84e0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f8fd8eb8670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x7f8fd8e9db70" loc="51:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x7f8fd8e9db70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8fd8e9c020"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd8e9c1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f8fd8e9c340"/>
        <function-ref name="edge" scoped="" ref="0x7f8fd8e9c4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f8fd8e9c660"/>
        <function-ref name="getValue" scoped="" ref="0x7f8fd8e9c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7f8fd8ea2b70" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7f8fd8ea2b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8fd8ea1020"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd8ea11b0"/>
        <function-ref name="disable" scoped="" ref="0x7f8fd8ea1340"/>
        <function-ref name="edge" scoped="" ref="0x7f8fd8ea14d0"/>
        <function-ref name="enable" scoped="" ref="0x7f8fd8ea1660"/>
        <function-ref name="getValue" scoped="" ref="0x7f8fd8ea17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x7f8fd8e9fb70" loc="49:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x7f8fd8e9fb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8fd8e9e020"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd8e9e1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f8fd8e9e340"/>
        <function-ref name="edge" scoped="" ref="0x7f8fd8e9e4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f8fd8e9e660"/>
        <function-ref name="getValue" scoped="" ref="0x7f8fd8e9e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x7f8fd8e9cb70" loc="52:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x7f8fd8e9cb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8fd8e9b020"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd8e9b1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f8fd8e9b340"/>
        <function-ref name="edge" scoped="" ref="0x7f8fd8e9b4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f8fd8e9b660"/>
        <function-ref name="getValue" scoped="" ref="0x7f8fd8e9b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7f8fd8ea1b70" loc="47:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7f8fd8ea1b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8fd8ea0020"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd8ea01b0"/>
        <function-ref name="disable" scoped="" ref="0x7f8fd8ea0340"/>
        <function-ref name="edge" scoped="" ref="0x7f8fd8ea04d0"/>
        <function-ref name="enable" scoped="" ref="0x7f8fd8ea0660"/>
        <function-ref name="getValue" scoped="" ref="0x7f8fd8ea07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x7f8fd8e9eb70" loc="50:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x7f8fd8e9eb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8fd8e9d020"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd8e9d1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f8fd8e9d340"/>
        <function-ref name="edge" scoped="" ref="0x7f8fd8e9d4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f8fd8e9d660"/>
        <function-ref name="getValue" scoped="" ref="0x7f8fd8e9d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7f8fd8ea5b50" loc="45:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7f8fd8ea5b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8fd8ea2020"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd8ea21b0"/>
        <function-ref name="disable" scoped="" ref="0x7f8fd8ea2340"/>
        <function-ref name="edge" scoped="" ref="0x7f8fd8ea24d0"/>
        <function-ref name="enable" scoped="" ref="0x7f8fd8ea2660"/>
        <function-ref name="getValue" scoped="" ref="0x7f8fd8ea27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7f8fd8ea0b70" loc="48:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7f8fd8ea0b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8fd8e9f020"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd8e9f1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f8fd8e9f340"/>
        <function-ref name="edge" scoped="" ref="0x7f8fd8e9f4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f8fd8e9f660"/>
        <function-ref name="getValue" scoped="" ref="0x7f8fd8e9f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x7f8fd8e93830" loc="49:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x7f8fd8e93830"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8fd8e93bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x7f8fd8e96230" loc="44:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x7f8fd8e96230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8fd8e965b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x7f8fd8e958d0" loc="47:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x7f8fd8e958d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8fd8e95c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x7f8fd8e92020" loc="50:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x7f8fd8e92020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8fd8e923a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x7f8fd8e969b0" loc="45:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x7f8fd8e969b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8fd8e96d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x7f8fd8e930b0" loc="48:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x7f8fd8e930b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8fd8e93430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x7f8fd8e94a00" loc="43:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x7f8fd8e94a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8fd8e94d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x7f8fd8e95150" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x7f8fd8e95150"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8fd8e954d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f8fd8e763f0" loc="44:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f8fd8e763f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8fd8e76770"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd8e76900"/>
        <function-ref name="disable" scoped="" ref="0x7f8fd8e76a90"/>
        <function-ref name="edge" scoped="" ref="0x7f8fd8e76c20"/>
        <function-ref name="enable" scoped="" ref="0x7f8fd8e76db0"/>
        <function-ref name="getValue" scoped="" ref="0x7f8fd8e61020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f8fd8e612f0" loc="45:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f8fd8e612f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8fd8e61670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f8fd8e5d260" loc="44:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f8fd8e5d260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8fd8e5d5e0"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd8e5d770"/>
        <function-ref name="disable" scoped="" ref="0x7f8fd8e5d900"/>
        <function-ref name="edge" scoped="" ref="0x7f8fd8e5da90"/>
        <function-ref name="enable" scoped="" ref="0x7f8fd8e5dc20"/>
        <function-ref name="getValue" scoped="" ref="0x7f8fd8e5ddb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f8fd8e5c100" loc="45:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f8fd8e5c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8fd8e5c480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f8fd8e590a0" loc="44:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f8fd8e590a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8fd8e59420"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd8e595b0"/>
        <function-ref name="disable" scoped="" ref="0x7f8fd8e59740"/>
        <function-ref name="edge" scoped="" ref="0x7f8fd8e598d0"/>
        <function-ref name="enable" scoped="" ref="0x7f8fd8e59a60"/>
        <function-ref name="getValue" scoped="" ref="0x7f8fd8e59bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f8fd8e58020" loc="45:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f8fd8e58020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8fd8e583a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f8fd8e54020" loc="44:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f8fd8e54020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8fd8e543a0"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd8e54530"/>
        <function-ref name="disable" scoped="" ref="0x7f8fd8e546c0"/>
        <function-ref name="edge" scoped="" ref="0x7f8fd8e54850"/>
        <function-ref name="enable" scoped="" ref="0x7f8fd8e549e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f8fd8e54b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f8fd8e54e40" loc="45:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f8fd8e54e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8fd8e531e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f8fd8e50020" loc="44:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f8fd8e50020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8fd8e503a0"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd8e50530"/>
        <function-ref name="disable" scoped="" ref="0x7f8fd8e506c0"/>
        <function-ref name="edge" scoped="" ref="0x7f8fd8e50850"/>
        <function-ref name="enable" scoped="" ref="0x7f8fd8e509e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f8fd8e50b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f8fd8e50e40" loc="45:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f8fd8e50e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8fd8e4f1e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f8fd8e4c020" loc="44:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f8fd8e4c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8fd8e4c3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd8e4c530"/>
        <function-ref name="disable" scoped="" ref="0x7f8fd8e4c6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f8fd8e4c850"/>
        <function-ref name="enable" scoped="" ref="0x7f8fd8e4c9e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f8fd8e4cb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f8fd8e4ce40" loc="45:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f8fd8e4ce40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8fd8e4a1e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f8fd8e47020" loc="44:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f8fd8e47020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8fd8e473a0"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd8e47530"/>
        <function-ref name="disable" scoped="" ref="0x7f8fd8e476c0"/>
        <function-ref name="edge" scoped="" ref="0x7f8fd8e47850"/>
        <function-ref name="enable" scoped="" ref="0x7f8fd8e479e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f8fd8e47b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f8fd8e47e40" loc="45:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f8fd8e47e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8fd8e461e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f8fd8e43020" loc="44:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f8fd8e43020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8fd8e433a0"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd8e43530"/>
        <function-ref name="disable" scoped="" ref="0x7f8fd8e436c0"/>
        <function-ref name="edge" scoped="" ref="0x7f8fd8e43850"/>
        <function-ref name="enable" scoped="" ref="0x7f8fd8e439e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f8fd8e43b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f8fd8e43e40" loc="45:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f8fd8e43e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8fd8e421e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0x7f8fd8e36c00" loc="51:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0x7f8fd8e36c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd8e35020"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd8e351b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd8e35340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd8e354d0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd8e35660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd8e357f0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd8e35980"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd8e35b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f8fd8e36020" loc="47:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7f8fd8e36020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8fd8e363a0"/>
        <function-ref name="disable" scoped="" ref="0x7f8fd8e36530"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f8fd8e366c0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f8fd8e36850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0x7f8fd8e32720" loc="69:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0x7f8fd8e32720"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8fd8e32aa0"/>
        <function-ref name="runTask" scoped="" ref="0x7f8fd8e32c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f8fd8bce2f0" loc="69:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7f8fd8bce2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8bce870"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8bcea00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f8fd8bd8670" loc="47:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7f8fd8bd8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8bd89f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f8fd8bd12f0" loc="63:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f8fd8bd12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8bd1670"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8bd1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f8fd8bccce0" loc="72:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f8fd8bccce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8bcb0a0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8bcb230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f8fd8bcb500" loc="73:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7f8fd8bcb500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8bcb880"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8bcba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f8fd8bbfce0" loc="94:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7f8fd8bbfce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8bbd0a0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8bbd230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f8fd8bc3ce0" loc="90:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f8fd8bc3ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8bc00a0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8bc0230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f8fd8bd79c0" loc="50:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7f8fd8bd79c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8bd7d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f8fd8bc4ce0" loc="88:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f8fd8bc4ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8bc30a0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8bc3230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f8fd8bd02f0" loc="65:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7f8fd8bd02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8bd0670"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8bd0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f8fd8bcf2f0" loc="67:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f8fd8bcf2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8bcf670"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8bcf800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f8fd8bc8500" loc="79:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7f8fd8bc8500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8bc8880"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8bc8a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f8fd8bcbce0" loc="74:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7f8fd8bcbce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8bca0a0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8bca230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f8fd8bda020" loc="42:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f8fd8bda020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f8fd8bda3a0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f8fd8bda530"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f8fd8bda6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f8fd8bd5370" loc="54:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f8fd8bd5370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8bd56f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f8fd8bd59c0" loc="55:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7f8fd8bd59c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8bd5e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f8fd8bd3160" loc="56:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7f8fd8bd3160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8bd34e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f8fd8bc3500" loc="89:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f8fd8bc3500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8bc3880"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8bc3a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f8fd8bd66b0" loc="52:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f8fd8bd66b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8bd6a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f8fd8bd0ad0" loc="66:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7f8fd8bd0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8bd0e50"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8bcf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f8fd8bd1ad0" loc="64:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f8fd8bd1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8bd1e50"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8bd0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f8fd8bd8020" loc="46:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7f8fd8bd8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8bd83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f8fd8bbf500" loc="93:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7f8fd8bbf500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8bbf880"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8bbfa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f8fd8bc0500" loc="91:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f8fd8bc0500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8bc0880"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8bc0a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f8fd8bc8ce0" loc="80:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7f8fd8bc8ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8bc60a0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8bc6230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f8fd8bc4500" loc="87:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7f8fd8bc4500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8bc4880"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8bc4a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f8fd8bcace0" loc="76:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7f8fd8bcace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8bc90a0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8bc9230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f8fd8bbd500" loc="97:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7f8fd8bbd500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f8fd8bbdc80"/>
        <function-ref name="writeDone" scoped="" ref="0x7f8fd8bbde10"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8bbc020"/>
        <function-ref name="beginRead" scoped="" ref="0x7f8fd8bbc1b0"/>
        <function-ref name="readDone" scoped="" ref="0x7f8fd8bbc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f8fd8bda990" loc="45:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f8fd8bda990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8bdad10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f8fd8bd2ae0" loc="62:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7f8fd8bd2ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8bd2e60"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8bd1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f8fd8bcfad0" loc="68:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7f8fd8bcfad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8bcfe50"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8bce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f8fd8bca500" loc="75:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7f8fd8bca500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8bca880"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8bcaa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f8fd8bcecd0" loc="70:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7f8fd8bcecd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8bcc0a0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8bcc230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f8fd8bd8cc0" loc="48:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7f8fd8bd8cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8bd70a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f8fd8bcc500" loc="71:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f8fd8bcc500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8bcc880"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8bcca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f8fd8bdb250" loc="41:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f8fd8bdb250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8fd8bdb5d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8fd8bdb760"/>
        <function-ref name="request" scoped="" ref="0x7f8fd8bdb8f0"/>
        <function-ref name="granted" scoped="" ref="0x7f8fd8bdba80"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8fd8bdbc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f8fd8bd37b0" loc="57:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7f8fd8bd37b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8bd3b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f8fd8bd2490" loc="59:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7f8fd8bd2490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8bd2810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f8fd8bc5ce0" loc="86:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7f8fd8bc5ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8bc40a0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8bc4230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f8fd8bc5500" loc="85:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7f8fd8bc5500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8bc5880"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8bc5a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f8fd8bd6d00" loc="53:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f8fd8bd6d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8bd50a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f8fd8bc6ce0" loc="82:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f8fd8bc6ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8bc50a0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8bc5230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f8fd8bc0ce0" loc="92:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7f8fd8bc0ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8bbf0a0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8bbf230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f8fd8bc6500" loc="81:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7f8fd8bc6500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8bc6880"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8bc6a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f8fd8bd7370" loc="49:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7f8fd8bd7370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8bd76f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f8fd8bc9ce0" loc="78:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7f8fd8bc9ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8bc80a0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8bc8230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f8fd8bd6060" loc="51:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7f8fd8bd6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8bd63e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f8fd8bc9500" loc="77:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7f8fd8bc9500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8bc9880"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8bc9a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f8fd8bd3e00" loc="58:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7f8fd8bd3e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8bd21c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f8fd8bbc610" loc="98:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7f8fd8bbc610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f8fd8bbc990"/>
        <function-ref name="writeDone" scoped="" ref="0x7f8fd8bbcb20"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8bbccb0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f8fd8bbce40"/>
        <function-ref name="readDone" scoped="" ref="0x7f8fd8bbb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f8fd8df02c0" loc="41:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x7f8fd8df02c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f8fd8df0640"/>
        <function-ref name="writeDone" scoped="" ref="0x7f8fd8df07d0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8df0960"/>
        <function-ref name="beginRead" scoped="" ref="0x7f8fd8df0af0"/>
        <function-ref name="readDone" scoped="" ref="0x7f8fd8df0c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f8fd8df2350" loc="40:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f8fd8df2350"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f8fd8df26d0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f8fd8df2860"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f8fd8df29f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f8fd8def540" loc="42:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x7f8fd8def540"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8def8c0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8defa50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f8fd8dee370" loc="43:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x7f8fd8dee370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8dee6f0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8dee880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f8fd8df3600" loc="39:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f8fd8df3600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8fd8df3980"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8fd8df3b10"/>
        <function-ref name="request" scoped="" ref="0x7f8fd8df3ca0"/>
        <function-ref name="granted" scoped="" ref="0x7f8fd8df3e30"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8fd8df2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f8fd8ded1d0" loc="44:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x7f8fd8ded1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8ded550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7f8fd8dd72e0" loc="55:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f8fd8dd72e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd8dd7660"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8fd8dd77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f8fd8de7890" loc="46:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x7f8fd8de7890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f8fd8de7c10"/>
        <function-ref name="writeDone" scoped="" ref="0x7f8fd8de7da0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8de6020"/>
        <function-ref name="beginRead" scoped="" ref="0x7f8fd8de61b0"/>
        <function-ref name="readDone" scoped="" ref="0x7f8fd8de6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f8fd8de9660" loc="44:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f8fd8de9660"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f8fd8de99e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f8fd8de9b70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f8fd8de9d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f8fd8ddfc70" loc="54:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f8fd8ddfc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f8fd8de1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7f8fd8dd7b40" loc="56:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WorkingState" scoped="" ref="0x7f8fd8dd7b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f8fd8de0020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f8fd8de01b0"/>
        <function-ref name="isState" scoped="" ref="0x7f8fd8de0340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f8fd8de04d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f8fd8de0660"/>
        <function-ref name="forceState" scoped="" ref="0x7f8fd8de07f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f8fd8de2060" loc="53:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f8fd8de2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8fd8de23e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8fd8de2570"/>
        <function-ref name="request" scoped="" ref="0x7f8fd8de2700"/>
        <function-ref name="granted" scoped="" ref="0x7f8fd8de2890"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8fd8de2a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f8fd8de6ba0" loc="47:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x7f8fd8de6ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8de5020"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8de51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f8fd8de5a30" loc="48:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x7f8fd8de5a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8de5db0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8de4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f8fd8de0a70" loc="57:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f8fd8de0a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f8fd8de0df0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f8fd8dde020"/>
        <function-ref name="led1On" scoped="" ref="0x7f8fd8dde1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f8fd8dde340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f8fd8dde4d0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd8dde660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f8fd8dde7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f8fd8ddee30"/>
        <function-ref name="set" scoped="" ref="0x7f8fd8dde980"/>
        <function-ref name="led0On" scoped="" ref="0x7f8fd8ddeb10"/>
        <function-ref name="led2On" scoped="" ref="0x7f8fd8ddeca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f8fd8de8510" loc="45:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f8fd8de8510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8fd8de8890"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8fd8de8a20"/>
        <function-ref name="request" scoped="" ref="0x7f8fd8de8bb0"/>
        <function-ref name="granted" scoped="" ref="0x7f8fd8de8d40"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8fd8de7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7f8fd8dd3bd0" loc="88:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grant" scoped="" ref="0x7f8fd8dd3bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8fd8dd2020"/>
        <function-ref name="runTask" scoped="" ref="0x7f8fd8dd21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f8fd8de48b0" loc="49:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x7f8fd8de48b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8de4c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f8fd8d78770" loc="67:/home/sumukh/tinyos-main/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f8fd8d78770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f8fd8d78af0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f8fd8d78c80"/>
        <function-ref name="isState" scoped="" ref="0x7f8fd8d78e10"/>
        <function-ref name="isIdle" scoped="" ref="0x7f8fd8d73020"/>
        <function-ref name="requestState" scoped="" ref="0x7f8fd8d731b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f8fd8d73340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f8fd8d721d0" loc="66:/home/sumukh/tinyos-main/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f8fd8d721d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f8fd8d72550"/>
        <function-ref name="toIdle" scoped="" ref="0x7f8fd8d726e0"/>
        <function-ref name="isState" scoped="" ref="0x7f8fd8d72870"/>
        <function-ref name="isIdle" scoped="" ref="0x7f8fd8d72a00"/>
        <function-ref name="requestState" scoped="" ref="0x7f8fd8d72b90"/>
        <function-ref name="forceState" scoped="" ref="0x7f8fd8d72d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8fd8d6d020" loc="66:/home/sumukh/tinyos-main/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f8fd8d6d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd8d6d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f8fd8d6db70" loc="67:/home/sumukh/tinyos-main/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f8fd8d6db70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f8fd8d6c020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f8fd8d6c1b0"/>
        <function-ref name="isState" scoped="" ref="0x7f8fd8d6c340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f8fd8d6c4d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f8fd8d6c660"/>
        <function-ref name="forceState" scoped="" ref="0x7f8fd8d6c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f8fd8bfdd70" loc="43:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f8fd8bfdd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd8bfb180"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8fd8bfb310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f8fd8bfd760" loc="42:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f8fd8bfd760"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f8fd8bfdae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8fd8bfe3d0" loc="39:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f8fd8bfe3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd8bfe750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f8fd8bfe9e0" loc="40:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f8fd8bfe9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8fd8bfed60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8fd8bfd020"/>
        <function-ref name="request" scoped="" ref="0x7f8fd8bfd1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f8fd8bfd340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8fd8bfd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f8fd8d4c310" loc="84:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f8fd8d4c310"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd8d4c690"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8fd8d4c820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f8fd8d50bc0" loc="82:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f8fd8d50bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f8fd8d4d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8fd8d50560" loc="81:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f8fd8d50560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd8d508e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f8fd8d48680" loc="83:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f8fd8d48680"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f8fd8d48a00"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f8fd8d48b90"/>
        <function-ref name="splitRead" scoped="" ref="0x7f8fd8d48d20"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8d4c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f8fd8d4b1d0" loc="85:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f8fd8d4b1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8fd8d4b550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8fd8d4b6e0"/>
        <function-ref name="request" scoped="" ref="0x7f8fd8d4b870"/>
        <function-ref name="granted" scoped="" ref="0x7f8fd8d4ba00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8fd8d4bb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x7f8fd8cff820" loc="296:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x7f8fd8cff820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8fd8cffba0"/>
        <function-ref name="runTask" scoped="" ref="0x7f8fd8cffd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f8fd8d42800" loc="94:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f8fd8d42800"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd8d42b80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8fd8d42d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x7f8fd8d24c10" loc="99:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x7f8fd8d24c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8fd8d23020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8fd8d231b0"/>
        <function-ref name="request" scoped="" ref="0x7f8fd8d23340"/>
        <function-ref name="granted" scoped="" ref="0x7f8fd8d234d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8fd8d23660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f8fd8d43640" loc="92:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f8fd8d43640"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f8fd8d439c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8fd8d43020" loc="91:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f8fd8d43020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd8d433a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x7f8fd8d25800" loc="98:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x7f8fd8d25800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f8fd8d25b80"/>
        <function-ref name="sleep" scoped="" ref="0x7f8fd8d241b0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f8fd8d3f020"/>
        <function-ref name="dataReady" scoped="" ref="0x7f8fd8d24340"/>
        <function-ref name="initMaster" scoped="" ref="0x7f8fd8d3f340"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f8fd8d3f4d0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f8fd8d3f660"/>
        <function-ref name="read" scoped="" ref="0x7f8fd8d3f7f0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f8fd8d3f980"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f8fd8d3fb10"/>
        <function-ref name="setClock" scoped="" ref="0x7f8fd8d3fca0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f8fd8d3fe30"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f8fd8d3e020"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f8fd8d3e2b0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f8fd8d3e440"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8d3e5d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f8fd8d3e760"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f8fd8d3e8f0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f8fd8d3ea80"/>
        <function-ref name="getClock" scoped="" ref="0x7f8fd8d3ec10"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f8fd8d3eda0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f8fd8d25d10"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f8fd8d3f1b0"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f8fd8d24020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f8fd8d43c80" loc="93:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f8fd8d43c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f8fd8d420a0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f8fd8d42230"/>
        <function-ref name="splitRead" scoped="" ref="0x7f8fd8d423c0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8d42550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f8fd8d41530" loc="95:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f8fd8d41530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8fd8d418b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8fd8d41a40"/>
        <function-ref name="request" scoped="" ref="0x7f8fd8d41bd0"/>
        <function-ref name="granted" scoped="" ref="0x7f8fd8d41d60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8fd8d40020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f8fd8d1e1e0" loc="100:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f8fd8d1e1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f8fd8d1e560"/>
        <function-ref name="userId" scoped="" ref="0x7f8fd8d1e6f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f8fd8d1e9d0" loc="101:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f8fd8d1e9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f8fd8d1ed50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x7f8fd8cd4610" loc="76:/home/sumukh/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x7f8fd8cd4610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f8fd8cd4990"/>
        <function-ref name="sleep" scoped="" ref="0x7f8fd8cd0e30"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f8fd8cd4cb0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f8fd8ccf020"/>
        <function-ref name="initMaster" scoped="" ref="0x7f8fd8cd1020"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f8fd8cd11b0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f8fd8cd1340"/>
        <function-ref name="read" scoped="" ref="0x7f8fd8cd14d0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f8fd8cd1660"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f8fd8cd17f0"/>
        <function-ref name="setClock" scoped="" ref="0x7f8fd8cd1980"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f8fd8cd1b10"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f8fd8cd1ca0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f8fd8cd0020"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f8fd8cd01b0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8cd0340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f8fd8cd04d0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f8fd8cd0660"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f8fd8cd07f0"/>
        <function-ref name="getClock" scoped="" ref="0x7f8fd8cd0980"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f8fd8cd0b10"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f8fd8cd4b20"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f8fd8cd4e40"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f8fd8cd0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x7f8fd8cc4ca0" loc="81:/home/sumukh/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x7f8fd8cc4ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd8cc30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd8cc3230"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd8cc33c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd8cc3550"/>
        <function-ref name="get" scoped="" ref="0x7f8fd8cc36e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd8cc3870"/>
        <function-ref name="set" scoped="" ref="0x7f8fd8cc3a00"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd8cc3b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7f8fd8cc77e0" loc="79:/home/sumukh/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7f8fd8cc77e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd8cc7b60"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd8cc7cf0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd8cc7e80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd8cc5030"/>
        <function-ref name="get" scoped="" ref="0x7f8fd8cc51c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd8cc5350"/>
        <function-ref name="set" scoped="" ref="0x7f8fd8cc54e0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd8cc5670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7f8fd8cc85a0" loc="78:/home/sumukh/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7f8fd8cc85a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd8cc8920"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd8cc8ab0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd8cc8c40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd8cc8dd0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd8cc7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd8cc71b0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd8cc7340"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd8cc74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f8fd8cc6c90" loc="75:/home/sumukh/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f8fd8cc6c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f8fd8cc80a0"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd8cc8230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x7f8fd8cc2020" loc="82:/home/sumukh/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x7f8fd8cc2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f8fd8cc23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x7f8fd8ccc4e0" loc="74:/home/sumukh/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x7f8fd8ccc4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f8fd8ccc860"/>
        <function-ref name="sleep" scoped="" ref="0x7f8fd8ccae30"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f8fd8cccb80"/>
        <function-ref name="dataReady" scoped="" ref="0x7f8fd8cc9020"/>
        <function-ref name="initMaster" scoped="" ref="0x7f8fd8ccb020"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f8fd8ccb1b0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f8fd8ccb340"/>
        <function-ref name="read" scoped="" ref="0x7f8fd8ccb4d0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f8fd8ccb660"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f8fd8ccb7f0"/>
        <function-ref name="setClock" scoped="" ref="0x7f8fd8ccb980"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f8fd8ccbb10"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f8fd8ccbca0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f8fd8cca020"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f8fd8cca1b0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8cca340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f8fd8cca4d0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f8fd8cca660"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f8fd8cca7f0"/>
        <function-ref name="getClock" scoped="" ref="0x7f8fd8cca980"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f8fd8ccab10"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f8fd8ccc9f0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f8fd8cccd10"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f8fd8ccaca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x7f8fd8cc5990" loc="80:/home/sumukh/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x7f8fd8cc5990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd8cc5d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd8cc4020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd8cc41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd8cc4340"/>
        <function-ref name="get" scoped="" ref="0x7f8fd8cc44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd8cc4660"/>
        <function-ref name="set" scoped="" ref="0x7f8fd8cc47f0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd8cc4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f8fd8c17150" loc="86:/home/sumukh/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f8fd8c17150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f8fd8c174f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f8fd8c17680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f8fd8c161f0" loc="89:/home/sumukh/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f8fd8c161f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f8fd8c16590"/>
        <function-ref name="configure" scoped="" ref="0x7f8fd8c16720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f8fd8c18390" loc="85:/home/sumukh/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f8fd8c18390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8fd8c18730"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8fd8c188c0"/>
        <function-ref name="request" scoped="" ref="0x7f8fd8c18a50"/>
        <function-ref name="granted" scoped="" ref="0x7f8fd8c18be0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8fd8c18d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f8fd8c178d0" loc="87:/home/sumukh/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f8fd8c178d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f8fd8c17c50"/>
        <function-ref name="userId" scoped="" ref="0x7f8fd8c17de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8fd7d17d70" loc="44:/home/sumukh/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f8fd7d17d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd7d16180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f8fd7d16410" loc="45:/home/sumukh/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f8fd7d16410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f8fd7d16790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f8fd7d16920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f8fd7d16ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f8fd7d16c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f8fd7d13220" loc="52:/home/sumukh/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f8fd7d13220"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f8fd7d135c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f8fd7d13750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f8fd7cfe400" loc="56:/home/sumukh/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f8fd7cfe400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f8fd7cfe7a0"/>
        <function-ref name="configure" scoped="" ref="0x7f8fd7cfe930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f8fd7cfebc0" loc="57:/home/sumukh/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f8fd7cfebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f8fd7cfd020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f8fd7cfd1b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f8fd7cfd340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f8fd7cfd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f8fd7d14490" loc="51:/home/sumukh/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f8fd7d14490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8fd7d14830"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8fd7d149c0"/>
        <function-ref name="request" scoped="" ref="0x7f8fd7d14b50"/>
        <function-ref name="granted" scoped="" ref="0x7f8fd7d14ce0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8fd7d14e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f8fd7d139a0" loc="53:/home/sumukh/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f8fd7d139a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f8fd7d13d20"/>
        <function-ref name="userId" scoped="" ref="0x7f8fd7cfe020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f8fd7cfd7a0" loc="69:/home/sumukh/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f8fd7cfd7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8fd7cfdb20"/>
        <function-ref name="runTask" scoped="" ref="0x7f8fd7cfdcb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7f8fd8c0ce40" loc="45:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7f8fd8c0ce40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd8c0b1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd8c0b370"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd8c0b500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd8c0b690"/>
        <function-ref name="get" scoped="" ref="0x7f8fd8c0b820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd8c0b9b0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd8c0bb40"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd8c0bcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f8fd8c0d3b0" loc="40:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f8fd8c0d3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8fd8c0d730"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8fd8c0d8c0"/>
        <function-ref name="request" scoped="" ref="0x7f8fd8c0da50"/>
        <function-ref name="granted" scoped="" ref="0x7f8fd8c0dbe0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8fd8c0dd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x7f8fd8c0c170" loc="44:/home/sumukh/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x7f8fd8c0c170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8fd8c0c4f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8fd8c0c680"/>
        <function-ref name="request" scoped="" ref="0x7f8fd8c0c810"/>
        <function-ref name="granted" scoped="" ref="0x7f8fd8c0c9a0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8fd8c0cb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f8fd8ba5c60" loc="69:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7f8fd8ba5c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8ba4210"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8ba43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f8fd8bb0da0" loc="47:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7f8fd8bb0da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8baf180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f8fd8ba9b50" loc="63:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f8fd8ba9b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8ba8020"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8ba81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f8fd8ba3670" loc="72:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f8fd8ba3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8ba39f0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8ba3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f8fd8ba3e50" loc="73:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7f8fd8ba3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8ba2210"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8ba23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f8fd8b97670" loc="94:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7f8fd8b97670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b979f0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b97b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f8fd8b99670" loc="90:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f8fd8b99670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b999f0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b99b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f8fd8bae120" loc="50:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7f8fd8bae120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8bae4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f8fd8b9b670" loc="88:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f8fd8b9b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b9b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b9bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f8fd8ba8c60" loc="65:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7f8fd8ba8c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8ba6020"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8ba61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f8fd8ba6c60" loc="67:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f8fd8ba6c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8ba5020"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8ba51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f8fd8b9fe50" loc="79:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7f8fd8b9fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b9e210"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b9e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f8fd8ba2670" loc="74:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7f8fd8ba2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8ba29f0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8ba2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f8fd8bb1760" loc="42:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f8fd8bb1760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f8fd8bb1ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f8fd8bb1c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f8fd8bb1e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f8fd8bacaa0" loc="54:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f8fd8bacaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8bace20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f8fd8bab120" loc="55:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7f8fd8bab120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8bab5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f8fd8bab870" loc="56:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7f8fd8bab870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8babbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f8fd8b9be50" loc="89:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f8fd8b9be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b99210"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b993a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f8fd8baedc0" loc="52:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f8fd8baedc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8bac180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f8fd8ba6480" loc="66:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7f8fd8ba6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8ba6800"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8ba6990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f8fd8ba8480" loc="64:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f8fd8ba8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8ba8800"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8ba8990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f8fd8bb0750" loc="46:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7f8fd8bb0750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8bb0ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f8fd8b98e50" loc="93:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7f8fd8b98e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b97210"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b973a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f8fd8b99e50" loc="91:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f8fd8b99e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b98210"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b983a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f8fd8b9e670" loc="80:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7f8fd8b9e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b9e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b9eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f8fd8b9ce50" loc="87:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7f8fd8b9ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b9b210"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b9b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f8fd8ba1670" loc="76:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7f8fd8ba1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8ba19f0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8ba1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f8fd8b97e50" loc="97:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7f8fd8b97e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f8fd8b96610"/>
        <function-ref name="writeDone" scoped="" ref="0x7f8fd8b967a0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b96930"/>
        <function-ref name="beginRead" scoped="" ref="0x7f8fd8b96ac0"/>
        <function-ref name="readDone" scoped="" ref="0x7f8fd8b96c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f8fd8bb0100" loc="45:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f8fd8bb0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8bb0480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f8fd8ba9370" loc="62:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7f8fd8ba9370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8ba96f0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8ba9880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f8fd8ba5480" loc="68:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7f8fd8ba5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8ba5800"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8ba5990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f8fd8ba2e50" loc="75:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7f8fd8ba2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8ba1210"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8ba13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f8fd8ba4670" loc="70:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7f8fd8ba4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8ba49f0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8ba4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f8fd8baf450" loc="48:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7f8fd8baf450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8baf7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f8fd8ba4e50" loc="71:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f8fd8ba4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8ba3210"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8ba33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f8fd8bb29e0" loc="41:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f8fd8bb29e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8fd8bb2d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8fd8bb1020"/>
        <function-ref name="request" scoped="" ref="0x7f8fd8bb11b0"/>
        <function-ref name="granted" scoped="" ref="0x7f8fd8bb1340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8fd8bb14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f8fd8baa020" loc="57:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7f8fd8baa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8baa3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f8fd8baacc0" loc="59:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7f8fd8baacc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8ba90a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f8fd8b9c670" loc="86:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7f8fd8b9c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b9c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b9cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f8fd8b9de50" loc="85:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7f8fd8b9de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b9c210"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b9c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f8fd8bac450" loc="53:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f8fd8bac450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8bac7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f8fd8b9d670" loc="82:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f8fd8b9d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b9d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b9db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f8fd8b98670" loc="92:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7f8fd8b98670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b989f0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b98b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f8fd8b9ee50" loc="81:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7f8fd8b9ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b9d210"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b9d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f8fd8bafaa0" loc="49:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7f8fd8bafaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8bafe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f8fd8b9f670" loc="78:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7f8fd8b9f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b9f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b9fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f8fd8bae770" loc="51:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7f8fd8bae770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8baeaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f8fd8ba1e50" loc="77:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7f8fd8ba1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b9f210"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b9f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f8fd8baa670" loc="58:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7f8fd8baa670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8baa9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f8fd8b95020" loc="98:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7f8fd8b95020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f8fd8b953a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f8fd8b95530"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b956c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f8fd8b95850"/>
        <function-ref name="readDone" scoped="" ref="0x7f8fd8b959e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f8fd8b82c60" loc="69:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7f8fd8b82c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b81210"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b813a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f8fd8b8dda0" loc="47:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7f8fd8b8dda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8b8b180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f8fd8b85b50" loc="63:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f8fd8b85b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b84020"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b841b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f8fd8b7f670" loc="72:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f8fd8b7f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b7f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b7fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f8fd8b7fe50" loc="73:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7f8fd8b7fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b7e210"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b7e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f8fd8b74670" loc="94:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7f8fd8b74670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b749f0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b74b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f8fd8b76670" loc="90:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f8fd8b76670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b769f0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b76b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f8fd8b8a120" loc="50:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7f8fd8b8a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8b8a4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f8fd8b77670" loc="88:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f8fd8b77670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b779f0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b77b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f8fd8b84c60" loc="65:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7f8fd8b84c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b83020"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b831b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f8fd8b83c60" loc="67:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f8fd8b83c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b82020"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b821b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f8fd8b7ce50" loc="79:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7f8fd8b7ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b7b210"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b7b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f8fd8b7e670" loc="74:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7f8fd8b7e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b7e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b7eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f8fd8b8e760" loc="42:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f8fd8b8e760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f8fd8b8eae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f8fd8b8ec70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f8fd8b8ee00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f8fd8b89aa0" loc="54:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f8fd8b89aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8b89e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f8fd8b88120" loc="55:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7f8fd8b88120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8b885a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f8fd8b88870" loc="56:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7f8fd8b88870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8b88bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f8fd8b77e50" loc="89:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f8fd8b77e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b76210"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b763a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f8fd8b8adc0" loc="52:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f8fd8b8adc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8b89180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f8fd8b83480" loc="66:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7f8fd8b83480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b83800"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b83990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f8fd8b84480" loc="64:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f8fd8b84480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b84800"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b84990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f8fd8b8d750" loc="46:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7f8fd8b8d750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8b8dad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f8fd8b75e50" loc="93:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7f8fd8b75e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b74210"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b743a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f8fd8b76e50" loc="91:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f8fd8b76e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b75210"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b753a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f8fd8b7b670" loc="80:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7f8fd8b7b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b7b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b7bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f8fd8b78e50" loc="87:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7f8fd8b78e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b77210"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b773a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f8fd8b7d670" loc="76:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7f8fd8b7d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b7d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b7db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f8fd8b74e50" loc="97:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7f8fd8b74e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f8fd8b73610"/>
        <function-ref name="writeDone" scoped="" ref="0x7f8fd8b737a0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b73930"/>
        <function-ref name="beginRead" scoped="" ref="0x7f8fd8b73ac0"/>
        <function-ref name="readDone" scoped="" ref="0x7f8fd8b73c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f8fd8b8d100" loc="45:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f8fd8b8d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8b8d480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f8fd8b85370" loc="62:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7f8fd8b85370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b856f0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b85880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f8fd8b82480" loc="68:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7f8fd8b82480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b82800"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b82990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f8fd8b7ee50" loc="75:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7f8fd8b7ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b7d210"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b7d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f8fd8b81670" loc="70:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7f8fd8b81670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b819f0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b81b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f8fd8b8b450" loc="48:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7f8fd8b8b450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8b8b7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f8fd8b81e50" loc="71:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f8fd8b81e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b7f210"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b7f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f8fd8b8faa0" loc="41:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f8fd8b8faa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8fd8b8fe20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8fd8b8e020"/>
        <function-ref name="request" scoped="" ref="0x7f8fd8b8e1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f8fd8b8e340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8fd8b8e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f8fd8b87020" loc="57:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7f8fd8b87020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8b873a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f8fd8b87cc0" loc="59:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7f8fd8b87cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8b850a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f8fd8b78670" loc="86:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7f8fd8b78670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b789f0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b78b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f8fd8b7ae50" loc="85:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7f8fd8b7ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b78210"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b783a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f8fd8b89450" loc="53:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f8fd8b89450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8b897d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f8fd8b7a670" loc="82:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f8fd8b7a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b7a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b7ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f8fd8b75670" loc="92:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7f8fd8b75670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b759f0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b75b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f8fd8b7be50" loc="81:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7f8fd8b7be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b7a210"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b7a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f8fd8b8baa0" loc="49:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7f8fd8b8baa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8b8be20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f8fd8b7c670" loc="78:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7f8fd8b7c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b7c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b7cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f8fd8b8a770" loc="51:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7f8fd8b8a770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8b8aaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f8fd8b7de50" loc="77:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7f8fd8b7de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b7c210"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b7c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f8fd8b87670" loc="58:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7f8fd8b87670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8b879f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f8fd8b72020" loc="98:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7f8fd8b72020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f8fd8b723a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f8fd8b72530"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b726c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f8fd8b72850"/>
        <function-ref name="readDone" scoped="" ref="0x7f8fd8b729e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f8fd8b6bb90" loc="54:/home/sumukh/tinyos-main/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f8fd8b6bb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f8fd8b68020"/>
        <function-ref name="changed" scoped="" ref="0x7f8fd8b681b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f8fd8b68340"/>
        <function-ref name="setAddress" scoped="" ref="0x7f8fd8b684d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f8fd8b58020" loc="40:/home/sumukh/tinyos-main/tos/platforms/micaz/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f8fd8b58020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f8fd8b583a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f8fd8b44cb0" loc="46:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7f8fd8b44cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f8fd8b430a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f8fd8b43230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f8fd8b433c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f8fd8b43550"/>
        <function-ref name="setCca" scoped="" ref="0x7f8fd8b436e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f8fd8b43870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f8fd8b409f0" loc="47:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f8fd8b409f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f8fd8b40d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7f8fd8b44020" loc="45:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f8fd8b44020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd8b443a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f8fd8b44530"/>
        <function-ref name="modify" scoped="" ref="0x7f8fd8b446c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8fd8b44850"/>
        <function-ref name="resend" scoped="" ref="0x7f8fd8b449e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f8fd8b496d0" loc="44:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f8fd8b496d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f8fd8b49a50"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd8b49be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f8fd8b42190" loc="48:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x7f8fd8b42190"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f8fd8b42510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f8fd8b1c0c0" loc="51:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7f8fd8b1c0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f8fd8b1c440"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f8fd8b1c5d0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f8fd8b1c760"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f8fd8b1c8f0"/>
        <function-ref name="setCca" scoped="" ref="0x7f8fd8b1ca80"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f8fd8b1cc10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f8fd8b13200" loc="58:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f8fd8b13200"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed9e0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8fd96edd50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f8fd8b127c0"/>
        <function-ref name="clear" scoped="" ref="0x7f8fd8b11020"/>
        <function-ref name="isValid" scoped="" ref="0x7f8fd8b12090"/>
        <function-ref name="set" scoped="" ref="0x7f8fd8b11750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f8fd8afd990" loc="78:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f8fd8afd990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8afdd10"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8afc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f8fd8afc380" loc="79:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f8fd8afc380"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8afc700"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8afc890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f8fd8b1b060" loc="52:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f8fd8b1b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f8fd8b1b3e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7f8fd8b01e60" loc="72:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7f8fd8b01e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8aff210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7f8fd8b0f1e0" loc="60:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x7f8fd8b0f1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f8fd8b0f560"/>
        <function-ref name="disable" scoped="" ref="0x7f8fd8b0f6f0"/>
        <function-ref name="captured" scoped="" ref="0x7f8fd8b0f880"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f8fd8b0fa10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7f8fd8b1a220" loc="55:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0x7f8fd8b1a220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed9e0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8fd96edd50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8fd8b17b30"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd8b18a60"/>
        <function-ref name="startAt" scoped="" ref="0x7f8fd8b174e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8fd8b17020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f8fd8b16020"/>
        <function-ref name="start" scoped="" ref="0x7f8fd8b18090"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd8b185a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f8fd8b164d0" loc="56:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f8fd8b164d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f8fd8b16850"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f8fd8b169e0"/>
        <function-ref name="getRssi" scoped="" ref="0x7f8fd8b16b70"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f8fd8b16d00"/>
        <function-ref name="getPower" scoped="" ref="0x7f8fd8b15020"/>
        <function-ref name="getLqi" scoped="" ref="0x7f8fd8b151b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7f8fd8b03d80" loc="68:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f8fd8b03d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b02180"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b02310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f8fd8b026b0" loc="69:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f8fd8b026b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8b02a30"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b02bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7f8fd8af6780" loc="83:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7f8fd8af6780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8fd8af6b00"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f8fd8af6c90"/>
        <function-ref name="sfd" scoped="" ref="0x7f8fd8af6e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f8fd8b1d3b0" loc="50:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f8fd8b1d3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd8b1d730"/>
        <function-ref name="cancel" scoped="" ref="0x7f8fd8b1d8c0"/>
        <function-ref name="modify" scoped="" ref="0x7f8fd8b1da50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8fd8b1dbe0"/>
        <function-ref name="resend" scoped="" ref="0x7f8fd8b1dd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7f8fd8b044e0" loc="66:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f8fd8b044e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f8fd8b04860"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f8fd8b049f0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f8fd8b04b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7f8fd8aff5c0" loc="73:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f8fd8aff5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8aff940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f8fd8b0c080" loc="62:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7f8fd8b0c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd8b0c400"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd8b0c590"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd8b0c720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd8b0c8b0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd8b0ca40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd8b0cbd0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd8b0cd60"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd8b06020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8fd8b1e450" loc="48:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f8fd8b1e450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd8b1e7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f8fd8b154f0" loc="57:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f8fd8b154f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd8b15870"/>
        <function-ref name="getHeader" scoped="" ref="0x7f8fd8b15a00"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f8fd8b15b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7f8fd8b07570" loc="59:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f8fd8b07570"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8fd8b078f0"/>
        <function-ref name="isSet" scoped="" ref="0x7f8fd8b07a80"/>
        <function-ref name="cancel" scoped="" ref="0x7f8fd8b07c10"/>
        <function-ref name="set" scoped="" ref="0x7f8fd8b07da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f8fd8affd00" loc="74:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f8fd8affd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8afe410"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8afe5a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f8fd8b056e0" loc="65:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f8fd8b056e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8fd8b05a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8fd8b05bf0"/>
        <function-ref name="request" scoped="" ref="0x7f8fd8b05d80"/>
        <function-ref name="granted" scoped="" ref="0x7f8fd8b04020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8fd8b041b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7f8fd8b0fd60" loc="61:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7f8fd8b0fd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd8b0e210"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd8b0e3a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd8b0e530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd8b0e6c0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd8b0e850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd8b0e9e0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd8b0eb70"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd8b0ed00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f8fd8afcbf0" loc="80:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f8fd8afcbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8afb020"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8afb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7f8fd8afb530" loc="81:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7f8fd8afb530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8afb8b0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8afba40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f8fd8b01020" loc="70:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f8fd8b01020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8b013a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7f8fd8b06370" loc="63:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x7f8fd8b06370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd8b066f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd8b06880"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd8b06a10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd8b06ba0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd8b06d30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd8b05020"/>
        <function-ref name="set" scoped="" ref="0x7f8fd8b051b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd8b05340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f8fd8afa110" loc="84:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f8fd8afa110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f8fd8afa490"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f8fd8afa620"/>
        <function-ref name="led1On" scoped="" ref="0x7f8fd8afa7b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f8fd8afa940"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f8fd8afaad0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd8afac60"/>
        <function-ref name="led1Off" scoped="" ref="0x7f8fd8afadf0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f8fd8af94d0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd8af9020"/>
        <function-ref name="led0On" scoped="" ref="0x7f8fd8af91b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f8fd8af9340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f8fd8afd0c0" loc="77:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f8fd8afd0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8afd440"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8afd5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f8fd8b1ead0" loc="49:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f8fd8b1ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f8fd8b1ee50"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd8b1d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7f8fd8b03020" loc="67:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7f8fd8b03020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f8fd8b033a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f8fd8b03530"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8b036c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f8fd8b03850"/>
        <function-ref name="readDone" scoped="" ref="0x7f8fd8b039e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7f8fd8b01730" loc="71:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7f8fd8b01730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8b01ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7f8fd8afe930" loc="76:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7f8fd8afe930"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8afecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f8fd8b1b7f0" loc="53:/home/sumukh/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x7f8fd8b1b7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f8fd8b1bb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f8fd8a5bc60" loc="69:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7f8fd8a5bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8a5a210"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8a5a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f8fd8a65020" loc="47:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7f8fd8a65020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8a653a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f8fd8a5fc70" loc="63:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f8fd8a5fc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8a5e020"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8a5e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f8fd8a59670" loc="72:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f8fd8a59670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8a599f0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8a59b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f8fd8a59e50" loc="73:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7f8fd8a59e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8a58210"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8a583a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f8fd8a4d670" loc="94:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7f8fd8a4d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8a4d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8a4db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f8fd8a50670" loc="90:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f8fd8a50670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8a509f0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8a50b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f8fd8a64370" loc="50:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7f8fd8a64370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8a646f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f8fd8a51670" loc="88:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f8fd8a51670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8a519f0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8a51b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f8fd8a5ec60" loc="65:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7f8fd8a5ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8a5c020"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8a5c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f8fd8a5cc60" loc="67:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f8fd8a5cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8a5b020"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8a5b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f8fd8a55e50" loc="79:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7f8fd8a55e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8a54210"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8a543a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f8fd8a58670" loc="74:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7f8fd8a58670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8a589f0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8a58b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f8fd8a678f0" loc="42:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f8fd8a678f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f8fd8a67c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f8fd8a67e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f8fd8a66020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f8fd8a63d00" loc="54:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f8fd8a63d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8a610a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f8fd8a61370" loc="55:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7f8fd8a61370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8a617f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f8fd8a61ac0" loc="56:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7f8fd8a61ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8a61e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f8fd8a51e50" loc="89:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f8fd8a51e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8a50210"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8a503a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f8fd8a63060" loc="52:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f8fd8a63060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8a633e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f8fd8a5c480" loc="66:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7f8fd8a5c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8a5c800"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8a5c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f8fd8a5e480" loc="64:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f8fd8a5e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8a5e800"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8a5e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f8fd8a66940" loc="46:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7f8fd8a66940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8a66cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f8fd8a4ee50" loc="93:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7f8fd8a4ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8a4d210"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8a4d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f8fd8a50e50" loc="91:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f8fd8a50e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8a4e210"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8a4e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f8fd8a54670" loc="80:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7f8fd8a54670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8a549f0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8a54b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f8fd8a52e50" loc="87:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7f8fd8a52e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8a51210"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8a513a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f8fd8a57670" loc="76:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7f8fd8a57670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8a579f0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8a57b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f8fd8a4de50" loc="97:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7f8fd8a4de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f8fd8a4c610"/>
        <function-ref name="writeDone" scoped="" ref="0x7f8fd8a4c7a0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8a4c930"/>
        <function-ref name="beginRead" scoped="" ref="0x7f8fd8a4cac0"/>
        <function-ref name="readDone" scoped="" ref="0x7f8fd8a4cc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f8fd8a662f0" loc="45:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f8fd8a662f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8a66670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f8fd8a5f490" loc="62:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7f8fd8a5f490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8a5f810"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8a5f9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f8fd8a5b480" loc="68:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7f8fd8a5b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8a5b800"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8a5b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f8fd8a58e50" loc="75:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7f8fd8a58e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8a57210"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8a573a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f8fd8a5a670" loc="70:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7f8fd8a5a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8a5a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8a5ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f8fd8a65670" loc="48:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7f8fd8a65670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8a659f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f8fd8a5ae50" loc="71:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f8fd8a5ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8a59210"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8a593a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f8fd8a68c30" loc="41:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f8fd8a68c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8fd8a67020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8fd8a671b0"/>
        <function-ref name="request" scoped="" ref="0x7f8fd8a67340"/>
        <function-ref name="granted" scoped="" ref="0x7f8fd8a674d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8fd8a67660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f8fd8a60160" loc="57:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7f8fd8a60160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8a604e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f8fd8a60e00" loc="59:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7f8fd8a60e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8a5f1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f8fd8a52670" loc="86:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7f8fd8a52670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8a529f0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8a52b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f8fd8a53e50" loc="85:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7f8fd8a53e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8a52210"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8a523a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f8fd8a636b0" loc="53:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f8fd8a636b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8a63a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f8fd8a53670" loc="82:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f8fd8a53670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8a539f0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8a53b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f8fd8a4e670" loc="92:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7f8fd8a4e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8a4e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8a4eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f8fd8a54e50" loc="81:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7f8fd8a54e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8a53210"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8a533a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f8fd8a65cc0" loc="49:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7f8fd8a65cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8a640a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f8fd8a55670" loc="78:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7f8fd8a55670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8a559f0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8a55b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f8fd8a649c0" loc="51:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7f8fd8a649c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8a64d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f8fd8a57e50" loc="77:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7f8fd8a57e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8a55210"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8a553a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f8fd8a607b0" loc="58:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7f8fd8a607b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8a60b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f8fd8a4b020" loc="98:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7f8fd8a4b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f8fd8a4b3a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f8fd8a4b530"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8a4b6c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f8fd8a4b850"/>
        <function-ref name="readDone" scoped="" ref="0x7f8fd8a4b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f8fd8a3e020" loc="42:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7f8fd8a3e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8fd8a3e3a0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f8fd8a3e530"/>
        <function-ref name="sfd" scoped="" ref="0x7f8fd8a3e6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f8fd8a3e9a0" loc="43:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f8fd8a3e9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8fd8a3ed20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f8fd8a3d1a0" loc="44:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x7f8fd8a3d1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f8fd8a3d520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f8fd8a41680" loc="41:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f8fd8a41680"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f8fd8a41a00"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd8a41b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7f8fd8a35390" loc="54:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x7f8fd8a35390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd8a35710"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd8a358a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd8a35a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd8a35bc0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd8a35d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd8a34020"/>
        <function-ref name="set" scoped="" ref="0x7f8fd8a341b0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd8a34340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f8fd8a2eb90" loc="64:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7f8fd8a2eb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f8fd8a2d020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f8fd8a2d1b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f8fd8a2d340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f8fd8a2d4d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f8fd8a2d660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f8fd8a2d7f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f8fd8a2d980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f8fd8a2db10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f8fd8a2dca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f8fd8a2de30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f8fd8a2c020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f8fd8a2c1b0"/>
        <function-ref name="sync" scoped="" ref="0x7f8fd8a2c340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f8fd8a2c5d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f8fd8a2c760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7f8fd8a179d0" loc="148:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0x7f8fd8a179d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8fd8a17d50"/>
        <function-ref name="runTask" scoped="" ref="0x7f8fd8a16020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f8fd8a2cd70" loc="65:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f8fd8a2cd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed9e0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8fd96edd50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f8fd8a2a330"/>
        <function-ref name="clear" scoped="" ref="0x7f8fd8a2aa60"/>
        <function-ref name="isValid" scoped="" ref="0x7f8fd8a2bba0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd8a28210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7f8fd8a346b0" loc="55:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x7f8fd8a346b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd8a34a30"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd8a34bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd8a34d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd8a33020"/>
        <function-ref name="get" scoped="" ref="0x7f8fd8a331b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd8a33340"/>
        <function-ref name="set" scoped="" ref="0x7f8fd8a334d0"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd8a33660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f8fd8a27cb0" loc="69:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f8fd8a27cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8a260a0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8a26230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f8fd8a26590" loc="70:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f8fd8a26590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8a26910"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8a26aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7f8fd8a256d0" loc="72:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7f8fd8a256d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8a25a50"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8a25be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f8fd8a2f330" loc="62:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f8fd8a2f330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f8fd8a2f6b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f8fd8a2f840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f8fd8a2f9d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f8fd8a2fb60"/>
        <function-ref name="getPower" scoped="" ref="0x7f8fd8a2fcf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f8fd8a2fe80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f8fd8a39850" loc="49:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7f8fd8a39850"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8fd8a39bd0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f8fd8a39d60"/>
        <function-ref name="sfd" scoped="" ref="0x7f8fd8a38020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7f8fd8a303a0" loc="60:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7f8fd8a303a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8a30720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f8fd8a361a0" loc="53:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7f8fd8a361a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8fd8a36520"/>
        <function-ref name="isInput" scoped="" ref="0x7f8fd8a366b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8fd8a36840"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8fd8a369d0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd8a36b60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8fd8a36cf0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd8a36e80"/>
        <function-ref name="clr" scoped="" ref="0x7f8fd8a35030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7f8fd8a24020" loc="73:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f8fd8a24020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8a243a0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8a24530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8fd8a3c810" loc="47:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f8fd8a3c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd8a3cb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f8fd8a2e1e0" loc="63:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f8fd8a2e1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd8a2e560"/>
        <function-ref name="getHeader" scoped="" ref="0x7f8fd8a2e6f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f8fd8a2e880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f8fd8a38300" loc="50:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f8fd8a38300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8fd8a38680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f8fd8a326e0" loc="58:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f8fd8a326e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8fd8a32a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8fd8a32bf0"/>
        <function-ref name="request" scoped="" ref="0x7f8fd8a32d80"/>
        <function-ref name="granted" scoped="" ref="0x7f8fd8a31020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8fd8a311b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f8fd8a26e00" loc="71:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f8fd8a26e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8a251c0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8a25350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7f8fd8a31530" loc="59:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7f8fd8a31530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f8fd8a318b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f8fd8a31a40"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8a31bd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f8fd8a31d60"/>
        <function-ref name="readDone" scoped="" ref="0x7f8fd8a30020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f8fd8a248b0" loc="74:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f8fd8a248b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8a24e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f8fd8a38aa0" loc="51:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x7f8fd8a38aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f8fd8a38e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f8fd8a23150" loc="76:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f8fd8a23150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f8fd8a234d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f8fd8a23660"/>
        <function-ref name="led1On" scoped="" ref="0x7f8fd8a237f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f8fd8a23980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f8fd8a23b10"/>
        <function-ref name="get" scoped="" ref="0x7f8fd8a23ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f8fd8a23e30"/>
        <function-ref name="led2Off" scoped="" ref="0x7f8fd8a224d0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd8a22020"/>
        <function-ref name="led0On" scoped="" ref="0x7f8fd8a221b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f8fd8a22340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f8fd8a273e0" loc="68:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f8fd8a273e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd8a27760"/>
        <function-ref name="write" scoped="" ref="0x7f8fd8a278f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7f8fd8a28b10" loc="67:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7f8fd8a28b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8a27020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7f8fd8a33a50" loc="56:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f8fd8a33a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8fd8a33dd0"/>
        <function-ref name="disable" scoped="" ref="0x7f8fd8a32020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f8fd8a321b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f8fd8a32340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7f8fd8a30ad0" loc="61:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f8fd8a30ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd8a2f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f8fd8a39020" loc="48:/home/sumukh/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f8fd8a39020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f8fd8a393a0"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd8a39530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f8fd89b6a70" loc="44:/home/sumukh/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f8fd89b6a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f8fd89b6df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f8fd89ba680" loc="41:/home/sumukh/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f8fd89ba680"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f8fd89baa00"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f8fd89bab90"/>
        <function-ref name="getRssi" scoped="" ref="0x7f8fd89bad20"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f8fd89b7020"/>
        <function-ref name="getPower" scoped="" ref="0x7f8fd89b71b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f8fd89b7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f8fd89b5550" loc="46:/home/sumukh/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f8fd89b5550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed9e0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8fd96edd50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f8fd89b4b00"/>
        <function-ref name="clear" scoped="" ref="0x7f8fd89b22a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f8fd89b43d0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd89b29d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f8fd89b60c0" loc="43:/home/sumukh/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f8fd89b60c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd89b6440"/>
        <function-ref name="getHeader" scoped="" ref="0x7f8fd89b65d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f8fd89b6760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f8fd89ad480" loc="48:/home/sumukh/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f8fd89ad480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8fd89ad800"/>
        <function-ref name="isSet" scoped="" ref="0x7f8fd89ad990"/>
        <function-ref name="cancel" scoped="" ref="0x7f8fd89adb20"/>
        <function-ref name="set" scoped="" ref="0x7f8fd89adcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f8fd89b1660" loc="47:/home/sumukh/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f8fd89b1660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8fd96ed5a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f8fd89b0ce0"/>
        <function-ref name="clear" scoped="" ref="0x7f8fd89ae460"/>
        <function-ref name="isValid" scoped="" ref="0x7f8fd89b05b0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd89aeb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f8fd89b76e0" loc="42:/home/sumukh/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f8fd89b76e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f8fd89b7a60"/>
        <function-ref name="noAck" scoped="" ref="0x7f8fd89b7bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f8fd89b7d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f8fd89a7020" loc="49:/home/sumukh/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f8fd89a7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f8fd89a73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f8fd89acd30" loc="46:/home/sumukh/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f8fd89acd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f8fd89a90e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f8fd89a9270"/>
        <function-ref name="getRssi" scoped="" ref="0x7f8fd89a9400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f8fd89a9590"/>
        <function-ref name="getPower" scoped="" ref="0x7f8fd89a9720"/>
        <function-ref name="getLqi" scoped="" ref="0x7f8fd89a98b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f8fd899e4a0" loc="56:/home/sumukh/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f8fd899e4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8fd899e820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f8fd899e9b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd899eb40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd899ecd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f8fd899ee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f8fd89a7a80" loc="51:/home/sumukh/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f8fd89a7a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed9e0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8fd96edd50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f8fd89a4020"/>
        <function-ref name="clear" scoped="" ref="0x7f8fd89a4750"/>
        <function-ref name="isValid" scoped="" ref="0x7f8fd89a68d0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd89a4e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f8fd89a8640" loc="48:/home/sumukh/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f8fd89a8640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd89a89c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f8fd89a8b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f8fd89a8ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f8fd899f8b0" loc="53:/home/sumukh/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f8fd899f8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8fd899fc30"/>
        <function-ref name="isSet" scoped="" ref="0x7f8fd899fdc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f8fd899e020"/>
        <function-ref name="set" scoped="" ref="0x7f8fd899e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7f8fd899a820" loc="57:/home/sumukh/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0x7f8fd899a820"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed9e0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8fd96edd50"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8fd899c4c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f8fd899cb80" loc="58:/home/sumukh/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f8fd899cb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8fd96ed5a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8fd899b7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f8fd89a3af0" loc="52:/home/sumukh/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f8fd89a3af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8fd96ed5a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f8fd89a00d0"/>
        <function-ref name="clear" scoped="" ref="0x7f8fd89a0800"/>
        <function-ref name="isValid" scoped="" ref="0x7f8fd89a2970"/>
        <function-ref name="set" scoped="" ref="0x7f8fd899f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f8fd89a9c50" loc="47:/home/sumukh/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f8fd89a9c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f8fd89a8020"/>
        <function-ref name="noAck" scoped="" ref="0x7f8fd89a81b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f8fd89a8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f8fd89484e0" loc="48:/home/sumukh/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f8fd89484e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed9e0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8fd96edd50"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8fd893f150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f8fd893f7c0" loc="49:/home/sumukh/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f8fd893f7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed9e0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f8fd96edd50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8fd893e620"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8fd893d020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8fd893eae0"/>
        <function-ref name="overflow" scoped="" ref="0x7f8fd893d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f8fd89377d0" loc="46:/home/sumukh/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f8fd89377d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8fd96ed5a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8fd892ac40"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd892c260"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f8fd892a020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f8fd892cb60"/>
        <function-ref name="getdt" scoped="" ref="0x7f8fd8929590"/>
        <function-ref name="gett0" scoped="" ref="0x7f8fd8929110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8fd892c6e0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f8fd8936400"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f8fd892a630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f8fd89368d0"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd8936da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f8fd8929b80" loc="47:/home/sumukh/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f8fd8929b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8fd96ed5a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8fd89277d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8fd8938200" loc="45:/home/sumukh/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f8fd8938200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd8938580"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7f8fd891e3b0" loc="29:/home/sumukh/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7f8fd891e3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8fd96ed5a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8fd891d1f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8fd891db70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8fd891d6b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f8fd891b090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8fd8923350" loc="27:/home/sumukh/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f8fd8923350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd89236d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7f8fd8923d40" loc="28:/home/sumukh/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7f8fd8923d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8fd96ed5a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8fd891f670"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd8921590"/>
        <function-ref name="startAt" scoped="" ref="0x7f8fd891f020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8fd8921a50"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f8fd891fb30"/>
        <function-ref name="start" scoped="" ref="0x7f8fd8922ba0"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd89210d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f8fd88b0a90" loc="26:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f8fd88b0a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8fd96ed5a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8fd88ac2e0"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd88ae2e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f8fd88aec60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8fd88ae7a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f8fd88ac7a0"/>
        <function-ref name="start" scoped="" ref="0x7f8fd88af8d0"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd88afde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8fd88b0280" loc="25:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f8fd88b0280"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f8fd9779660"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f8fd9779660"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd88b0600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f8fd88acdd0" loc="27:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f8fd88acdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8fd96ed5a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8fd88abca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8fd88aa670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8fd88aa1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f8fd88aab30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7f8fd7c2bc90" loc="31:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f8fd7c2bc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7f8fd7c290a0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f8fd7c29230"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f8fd7c293c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f8fd7c29550"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f8fd7c296e0"/>
        <function-ref name="setControl" scoped="" ref="0x7f8fd7c29870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f8fd7c36260" loc="26:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f8fd7c36260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8fd96ed5a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8fd7c33b30"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd7c35a60"/>
        <function-ref name="startAt" scoped="" ref="0x7f8fd7c334e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8fd7c33020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f8fd7c32020"/>
        <function-ref name="start" scoped="" ref="0x7f8fd7c35090"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd7c355a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8fd7c379f0" loc="25:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f8fd7c379f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd7c37d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f8fd7c32650" loc="27:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f8fd7c32650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8fd96ed5a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8fd7c315b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8fd7c30020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8fd7c31a70"/>
        <function-ref name="overflow" scoped="" ref="0x7f8fd7c304e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x7f8fd7c24020" loc="33:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f8fd7c24020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7f8fd7c243a0"/>
        <function-ref name="compareBusy" scoped="" ref="0x7f8fd7c24530"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7f8fd7c246c0"/>
        <function-ref name="countBusy" scoped="" ref="0x7f8fd7c24850"/>
        <function-ref name="getAssr" scoped="" ref="0x7f8fd7c249e0"/>
        <function-ref name="setAssr" scoped="" ref="0x7f8fd7c24b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7f8fd7c29c20" loc="32:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f8fd7c29c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f8fd7c265d0"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd7c272a0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd7c288a0"/>
        <function-ref name="reset" scoped="" ref="0x7f8fd7c27760"/>
        <function-ref name="isOn" scoped="" ref="0x7f8fd7c26a90"/>
        <function-ref name="set" scoped="" ref="0x7f8fd7c28d60"/>
        <function-ref name="start" scoped="" ref="0x7f8fd7c27c20"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd7c26110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f8fd7c30a90" loc="30:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f8fd7c30a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f8fd7c2ce60"/>
        <function-ref name="test" scoped="" ref="0x7f8fd7c2c4e0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd7c2e6f0"/>
        <function-ref name="setScale" scoped="" ref="0x7f8fd7c2b350"/>
        <function-ref name="getScale" scoped="" ref="0x7f8fd7c2b860"/>
        <function-ref name="reset" scoped="" ref="0x7f8fd7c2d5d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f8fd7c2d110"/>
        <function-ref name="isOn" scoped="" ref="0x7f8fd7c2c9a0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd7c2ebb0"/>
        <function-ref name="start" scoped="" ref="0x7f8fd7c2da90"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd7c2c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f8fd8877490" loc="74:/home/sumukh/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7f8fd8877490"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8fd8877810"/>
        <function-ref name="runTask" scoped="" ref="0x7f8fd88779a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f8fd887b1d0" loc="49:/home/sumukh/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f8fd887b1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8fd96ed5a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8fd8878b30"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd887a9f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f8fd88784e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8fd8878020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f8fd8877020"/>
        <function-ref name="start" scoped="" ref="0x7f8fd887a020"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd887a530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f8fd8881cf0" loc="48:/home/sumukh/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f8fd8881cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8fd96ed5a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8fd887c220"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd887f7c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f8fd887d590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f8fd887d110"/>
        <function-ref name="getdt" scoped="" ref="0x7f8fd887cb20"/>
        <function-ref name="gett0" scoped="" ref="0x7f8fd887c6a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8fd887fc40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f8fd8880940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f8fd887dba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f8fd8880e10"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd887f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f8fd8827a00" loc="71:/home/sumukh/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7f8fd8827a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8fd8827d80"/>
        <function-ref name="runTask" scoped="" ref="0x7f8fd8826020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f8fd882c640" loc="49:/home/sumukh/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7f8fd882c640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8fd96ed5a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8fd8828c40"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd88291e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f8fd8828020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f8fd8829ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f8fd8827590"/>
        <function-ref name="gett0" scoped="" ref="0x7f8fd8827110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8fd8829660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f8fd882b390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f8fd8828630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f8fd882b860"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd882bd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f8fd8832150" loc="48:/home/sumukh/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f8fd8832150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8fd96ed5a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8fd882e700"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd8831c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f8fd882fa50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f8fd882f5b0"/>
        <function-ref name="getdt" scoped="" ref="0x7f8fd882c090"/>
        <function-ref name="gett0" scoped="" ref="0x7f8fd882eba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8fd882f110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f8fd8832d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f8fd882e0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f8fd88312a0"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd8831790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f8fd88242b0" loc="48:/home/sumukh/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f8fd88242b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8fd96ed5a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8fd8822020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f8fd8822690" loc="49:/home/sumukh/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f8fd8822690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8fd96ed5a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8fd88215b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8fd8820020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8fd8821a70"/>
        <function-ref name="overflow" scoped="" ref="0x7f8fd88204e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f8fd8809370" loc="45:/home/sumukh/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f8fd8809370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8fd96ed5a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8fd8806870"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd8808e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f8fd8807c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f8fd8807780"/>
        <function-ref name="getdt" scoped="" ref="0x7f8fd88041e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f8fd8806cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8fd8807300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f8fd8808020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f8fd8806260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f8fd88084f0"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd88089c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f8fd8813d90" loc="49:/home/sumukh/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f8fd8813d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96ed230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8fd96ed5a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8fd880d220"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd880f7f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f8fd880e5b0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f8fd880e130"/>
        <function-ref name="getdt" scoped="" ref="0x7f8fd880db20"/>
        <function-ref name="gett0" scoped="" ref="0x7f8fd880d6a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8fd880fc70"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f8fd88109a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f8fd880ebc0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f8fd8810e70"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd880f370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f8fd87f4800" loc="69:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7f8fd87f4800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd87f4d80"/>
        <function-ref name="write" scoped="" ref="0x7f8fd87f3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f8fd87ffaa0" loc="47:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7f8fd87ffaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd87ffe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f8fd87f8800" loc="63:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f8fd87f8800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd87f8b80"/>
        <function-ref name="write" scoped="" ref="0x7f8fd87f8d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f8fd87f22f0" loc="72:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f8fd87f22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd87f2670"/>
        <function-ref name="write" scoped="" ref="0x7f8fd87f2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f8fd87f2ad0" loc="73:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7f8fd87f2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd87f2e50"/>
        <function-ref name="write" scoped="" ref="0x7f8fd87f1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f8fd87e62f0" loc="94:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7f8fd87e62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd87e6670"/>
        <function-ref name="write" scoped="" ref="0x7f8fd87e6800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f8fd87e82f0" loc="90:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f8fd87e82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd87e8670"/>
        <function-ref name="write" scoped="" ref="0x7f8fd87e8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f8fd87fedc0" loc="50:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7f8fd87fedc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd87fc180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f8fd87ea2f0" loc="88:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f8fd87ea2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd87ea670"/>
        <function-ref name="write" scoped="" ref="0x7f8fd87ea800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f8fd87f7800" loc="65:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7f8fd87f7800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd87f7b80"/>
        <function-ref name="write" scoped="" ref="0x7f8fd87f7d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f8fd87f5800" loc="67:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f8fd87f5800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd87f5b80"/>
        <function-ref name="write" scoped="" ref="0x7f8fd87f5d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f8fd87eead0" loc="79:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7f8fd87eead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd87eee50"/>
        <function-ref name="write" scoped="" ref="0x7f8fd87ed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f8fd87f12f0" loc="74:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7f8fd87f12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd87f1670"/>
        <function-ref name="write" scoped="" ref="0x7f8fd87f1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f8fd8800440" loc="42:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f8fd8800440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f8fd88007c0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f8fd8800950"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f8fd8800ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f8fd87fb770" loc="54:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f8fd87fb770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd87fbaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f8fd87fbdc0" loc="55:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7f8fd87fbdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd87fa310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f8fd87fa5e0" loc="56:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7f8fd87fa5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd87fa960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f8fd87eaad0" loc="89:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f8fd87eaad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd87eae50"/>
        <function-ref name="write" scoped="" ref="0x7f8fd87e8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f8fd87fcaa0" loc="52:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f8fd87fcaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd87fce20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f8fd87f5020" loc="66:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7f8fd87f5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd87f53a0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd87f5530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f8fd87f7020" loc="64:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f8fd87f7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd87f73a0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd87f7530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f8fd87ff450" loc="46:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7f8fd87ff450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd87ff7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f8fd87e7ad0" loc="93:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7f8fd87e7ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd87e7e50"/>
        <function-ref name="write" scoped="" ref="0x7f8fd87e6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f8fd87e8ad0" loc="91:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f8fd87e8ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd87e8e50"/>
        <function-ref name="write" scoped="" ref="0x7f8fd87e7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f8fd87ed2f0" loc="80:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7f8fd87ed2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd87ed670"/>
        <function-ref name="write" scoped="" ref="0x7f8fd87ed800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f8fd87ebad0" loc="87:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7f8fd87ebad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd87ebe50"/>
        <function-ref name="write" scoped="" ref="0x7f8fd87ea020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f8fd87ef2f0" loc="76:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7f8fd87ef2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd87ef670"/>
        <function-ref name="write" scoped="" ref="0x7f8fd87ef800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f8fd87e6ad0" loc="97:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7f8fd87e6ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f8fd87e5610"/>
        <function-ref name="writeDone" scoped="" ref="0x7f8fd87e57a0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd87e5930"/>
        <function-ref name="beginRead" scoped="" ref="0x7f8fd87e5ac0"/>
        <function-ref name="readDone" scoped="" ref="0x7f8fd87e5c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f8fd8800db0" loc="45:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f8fd8800db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd87ff180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f8fd87f8020" loc="62:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7f8fd87f8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd87f83a0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd87f8530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f8fd87f4020" loc="68:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7f8fd87f4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd87f43a0"/>
        <function-ref name="write" scoped="" ref="0x7f8fd87f4530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f8fd87f1ad0" loc="75:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7f8fd87f1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd87f1e50"/>
        <function-ref name="write" scoped="" ref="0x7f8fd87ef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f8fd87f32f0" loc="70:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7f8fd87f32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd87f3670"/>
        <function-ref name="write" scoped="" ref="0x7f8fd87f3800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f8fd87fe120" loc="48:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7f8fd87fe120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd87fe4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f8fd87f3ad0" loc="71:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f8fd87f3ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd87f3e50"/>
        <function-ref name="write" scoped="" ref="0x7f8fd87f2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f8fd8801710" loc="41:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f8fd8801710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8fd8801a90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8fd8801c20"/>
        <function-ref name="request" scoped="" ref="0x7f8fd8801db0"/>
        <function-ref name="granted" scoped="" ref="0x7f8fd8800020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8fd88001b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f8fd87fac30" loc="57:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7f8fd87fac30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd87f9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f8fd87f9940" loc="59:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7f8fd87f9940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd87f9cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f8fd87eb2f0" loc="86:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7f8fd87eb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd87eb670"/>
        <function-ref name="write" scoped="" ref="0x7f8fd87eb800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f8fd87ecad0" loc="85:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7f8fd87ecad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd87ece50"/>
        <function-ref name="write" scoped="" ref="0x7f8fd87eb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f8fd87fb120" loc="53:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f8fd87fb120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd87fb4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f8fd87ec2f0" loc="82:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f8fd87ec2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd87ec670"/>
        <function-ref name="write" scoped="" ref="0x7f8fd87ec800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f8fd87e72f0" loc="92:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7f8fd87e72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd87e7670"/>
        <function-ref name="write" scoped="" ref="0x7f8fd87e7800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f8fd87edad0" loc="81:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7f8fd87edad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd87ede50"/>
        <function-ref name="write" scoped="" ref="0x7f8fd87ec020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f8fd87fe770" loc="49:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7f8fd87fe770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd87feaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f8fd87ee2f0" loc="78:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7f8fd87ee2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd87ee670"/>
        <function-ref name="write" scoped="" ref="0x7f8fd87ee800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f8fd87fc450" loc="51:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7f8fd87fc450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd87fc7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f8fd87efad0" loc="77:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7f8fd87efad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8fd87efe50"/>
        <function-ref name="write" scoped="" ref="0x7f8fd87ee020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f8fd87f92f0" loc="58:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7f8fd87f92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f8fd87f9670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f8fd87e4020" loc="98:/home/sumukh/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7f8fd87e4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f8fd87e43a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f8fd87e4530"/>
        <function-ref name="write" scoped="" ref="0x7f8fd87e46c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f8fd87e4850"/>
        <function-ref name="readDone" scoped="" ref="0x7f8fd87e49e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f8fd87b8a20" loc="46:/home/sumukh/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f8fd87b8a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f8fd87b8da0"/>
        <function-ref name="rand32" scoped="" ref="0x7f8fd87b7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f8fd87b6920" loc="45:/home/sumukh/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7f8fd87b6920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd87b8560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8fd87bc9a0" loc="44:/home/sumukh/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f8fd87bc9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd87bcd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f8fd87b2a20" loc="48:/home/sumukh/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f8fd87b2a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f8fd87b2da0"/>
        <function-ref name="rand32" scoped="" ref="0x7f8fd87b0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f8fd87b3940" loc="47:/home/sumukh/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7f8fd87b3940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd87b2560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8fd87b3080" loc="46:/home/sumukh/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f8fd87b3080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd87b3400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f8fd87baaa0" loc="67:/home/sumukh/tinyos-main/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f8fd87baaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f8fd87bae20"/>
        <function-ref name="toIdle" scoped="" ref="0x7f8fd87b4020"/>
        <function-ref name="isState" scoped="" ref="0x7f8fd87b41b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f8fd87b4340"/>
        <function-ref name="requestState" scoped="" ref="0x7f8fd87b44d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f8fd87b4660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f8fd879a020" loc="44:/home/sumukh/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f8fd879a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd879a3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd879a530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd879a6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f8fd879a850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8fd879a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f8fd879b220" loc="40:/home/sumukh/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f8fd879b220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd879b5a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd879b730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd879b8c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f8fd879ba50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8fd879bbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f8fd8796e60" loc="45:/home/sumukh/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f8fd8796e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd8795210"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd87953a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd8795530"/>
        <function-ref name="cancel" scoped="" ref="0x7f8fd87956c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8fd8795850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f8fd8799a20" loc="40:/home/sumukh/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f8fd8799a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd8799da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd8796020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd87961b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f8fd8796340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8fd87964d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f8fd87948f0" loc="47:/home/sumukh/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f8fd87948f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f8fd8794c70"/>
        <function-ref name="rand32" scoped="" ref="0x7f8fd8794e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8fd8796750" loc="41:/home/sumukh/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f8fd8796750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd8796ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f8fd8793170" loc="48:/home/sumukh/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f8fd8793170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd87934f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f8fd8793680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f8fd8793810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7f8fd8795ae0" loc="46:/home/sumukh/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f8fd8795ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f8fd8795e60"/>
        <function-ref name="toIdle" scoped="" ref="0x7f8fd8794020"/>
        <function-ref name="isState" scoped="" ref="0x7f8fd87941b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f8fd8794340"/>
        <function-ref name="requestState" scoped="" ref="0x7f8fd87944d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f8fd8794660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f8fd8797690" loc="67:/home/sumukh/tinyos-main/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f8fd8797690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f8fd8797a10"/>
        <function-ref name="toIdle" scoped="" ref="0x7f8fd8797ba0"/>
        <function-ref name="isState" scoped="" ref="0x7f8fd8797d30"/>
        <function-ref name="isIdle" scoped="" ref="0x7f8fd8782020"/>
        <function-ref name="requestState" scoped="" ref="0x7f8fd87821b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f8fd8782340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f8fd877b950" loc="47:/home/sumukh/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f8fd877b950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8fd877bcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f8fd877eab0" loc="42:/home/sumukh/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f8fd877eab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8fd877ee30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f8fd877b200" loc="43:/home/sumukh/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f8fd877b200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8fd877b580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f8fd87763f0" loc="49:/home/sumukh/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f8fd87763f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8fd8776770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8fd8777b70" loc="45:/home/sumukh/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f8fd8777b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd8776020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f8fd877ae40" loc="43:/home/sumukh/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f8fd877ae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8fd87771e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f8fd8776a70" loc="50:/home/sumukh/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f8fd8776a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd8776df0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f8fd8775020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f8fd87751b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f8fd8777570" loc="44:/home/sumukh/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f8fd8777570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8fd87778f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f8fd8747020" loc="75:/home/sumukh/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f8fd8747020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8fd87473a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f8fd87476b0" loc="76:/home/sumukh/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f8fd87476b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd8747a30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd8747bc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd8747d50"/>
        <function-ref name="cancel" scoped="" ref="0x7f8fd8746020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8fd87461b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f8fd874c960" loc="65:/home/sumukh/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f8fd874c960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd874cce0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd874ce70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd874b030"/>
        <function-ref name="cancel" scoped="" ref="0x7f8fd874b1c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8fd874b350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f8fd874bca0" loc="68:/home/sumukh/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x7f8fd874bca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd874a0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd874a230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd874a3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f8fd874a550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8fd874a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f8fd874b5f0" loc="66:/home/sumukh/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f8fd874b5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8fd874b970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f8fd874dcb0" loc="64:/home/sumukh/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f8fd874dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8fd874c0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8fd874c230"/>
        <function-ref name="request" scoped="" ref="0x7f8fd874c3c0"/>
        <function-ref name="granted" scoped="" ref="0x7f8fd874c550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8fd874c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f8fd874aa50" loc="69:/home/sumukh/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x7f8fd874aa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8fd874add0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f8fd8749170" loc="71:/home/sumukh/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x7f8fd8749170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8fd87494f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f8fd8749680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd8749810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd87499a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f8fd8749b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f8fd873dd70" loc="58:/home/sumukh/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f8fd873dd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd873c180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd873c310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd873c4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f8fd873c630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8fd873c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f8fd873cb10" loc="59:/home/sumukh/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f8fd873cb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8fd873b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7f8fd870ddb0" loc="180:/home/sumukh/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantTask" scoped="" ref="0x7f8fd870ddb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8fd870c180"/>
        <function-ref name="runTask" scoped="" ref="0x7f8fd870c310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f8fd873b2f0" loc="60:/home/sumukh/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f8fd873b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f8fd873b670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f8fd873b800"/>
        <function-ref name="getRssi" scoped="" ref="0x7f8fd873b990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f8fd873bb20"/>
        <function-ref name="getPower" scoped="" ref="0x7f8fd873bcb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f8fd873be40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f8fd873fa20" loc="51:/home/sumukh/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x7f8fd873fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd873fda0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd873e020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd873e1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f8fd873e340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8fd873e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f8fd873ab70" loc="62:/home/sumukh/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f8fd873ab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f8fd8738020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f8fd87381b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f8fd8738340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f8fd87384d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f8fd873a170" loc="61:/home/sumukh/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f8fd873a170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd873a4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f8fd873a680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f8fd873a810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f8fd873f370" loc="49:/home/sumukh/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7f8fd873f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8fd873f6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f8fd87417b0" loc="46:/home/sumukh/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f8fd87417b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8fd8741b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8fd8741cc0"/>
        <function-ref name="request" scoped="" ref="0x7f8fd8741e50"/>
        <function-ref name="granted" scoped="" ref="0x7f8fd8740020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8fd87401b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f8fd87404d0" loc="48:/home/sumukh/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f8fd87404d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd8740850"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd87409e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd8740b70"/>
        <function-ref name="cancel" scoped="" ref="0x7f8fd8740d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8fd873f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f8fd873e840" loc="52:/home/sumukh/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x7f8fd873e840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8fd873ebc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f8fd873d020" loc="54:/home/sumukh/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x7f8fd873d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8fd873d3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f8fd873d530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd873d6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd873d850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f8fd873d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8fd86eddd0" loc="44:/home/sumukh/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f8fd86eddd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd86ec180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f8fd86ec410" loc="45:/home/sumukh/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f8fd86ec410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f8fd86ec790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f8fd86ec920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f8fd86ecab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f8fd86ecc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f8fd86e1b80" loc="46:/home/sumukh/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f8fd86e1b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f8fd86e0020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f8fd86e01b0"/>
        <function-ref name="start" scoped="" ref="0x7f8fd86e0340"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd86e04d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f8fd86df860" loc="51:/home/sumukh/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f8fd86df860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd86dfbe0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd86dfd70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd86de020"/>
        <function-ref name="cancel" scoped="" ref="0x7f8fd86de1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8fd86de340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f8fd86de690" loc="52:/home/sumukh/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f8fd86de690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8fd86dea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f8fd86e5cf0" loc="43:/home/sumukh/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f8fd86e5cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd86e20a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd86e2230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd86e23c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f8fd86e2550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8fd86e26e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f8fd86e1080" loc="45:/home/sumukh/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f8fd86e1080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f8fd86e1400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f8fd86e1590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f8fd86e1720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f8fd86e18b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7f8fd86e0800" loc="47:/home/sumukh/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x7f8fd86e0800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f8fd86e0b80"/>
        <function-ref name="toIdle" scoped="" ref="0x7f8fd86e0d10"/>
        <function-ref name="isState" scoped="" ref="0x7f8fd86df020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f8fd86df1b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f8fd86df340"/>
        <function-ref name="forceState" scoped="" ref="0x7f8fd86df4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f8fd86ded90" loc="53:/home/sumukh/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f8fd86ded90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f8fd86dd180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f8fd86dd310"/>
        <function-ref name="start" scoped="" ref="0x7f8fd86dd4a0"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd86dd630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f8fd86e2980" loc="44:/home/sumukh/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f8fd86e2980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8fd86e2d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f8fd86da2d0" loc="41:/home/sumukh/tinyos-main/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f8fd86da2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f8fd86da650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f8fd86da7e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f8fd86da970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f8fd86dab00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f8fd86dc580" loc="67:/home/sumukh/tinyos-main/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f8fd86dc580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f8fd86dc900"/>
        <function-ref name="toIdle" scoped="" ref="0x7f8fd86dca90"/>
        <function-ref name="isState" scoped="" ref="0x7f8fd86dcc20"/>
        <function-ref name="isIdle" scoped="" ref="0x7f8fd86dcdb0"/>
        <function-ref name="requestState" scoped="" ref="0x7f8fd86db020"/>
        <function-ref name="forceState" scoped="" ref="0x7f8fd86db1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f8fd86ccd70" loc="45:/home/sumukh/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f8fd86ccd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd86cb180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd86cb310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd86cb4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f8fd86cb630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8fd86cb7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f8fd86cf360" loc="40:/home/sumukh/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f8fd86cf360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd86cf6e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd86cf870"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd86cfa00"/>
        <function-ref name="cancel" scoped="" ref="0x7f8fd86cfb90"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8fd86cfd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f8fd86cc020" loc="41:/home/sumukh/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f8fd86cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f8fd86cc3a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f8fd86cc530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f8fd86cc6c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f8fd86cc850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f8fd86cc9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f8fd86c71c0" loc="44:/home/sumukh/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f8fd86c71c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f8fd86c7540"/>
        <function-ref name="noAck" scoped="" ref="0x7f8fd86c76d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f8fd86c7860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f8fd86ca420" loc="40:/home/sumukh/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f8fd86ca420"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f8fd86ca7a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f8fd86ca930"/>
        <function-ref name="getRetries" scoped="" ref="0x7f8fd86caac0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f8fd86cac50"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f8fd86cade0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f8fd86a7690" loc="59:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f8fd86a7690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8fd86a7a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f8fd86a9860" loc="58:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f8fd86a9860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd86a9be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd86a9d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd86a7020"/>
        <function-ref name="cancel" scoped="" ref="0x7f8fd86a71b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8fd86a7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f8fd86a5610" loc="62:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7f8fd86a5610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f8fd86a5990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f8fd86a5b20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f8fd86a5cb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f8fd86a5e40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f8fd86a4020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f8fd86a41b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f8fd86a4340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f8fd86a44d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f8fd86a4660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f8fd86a47f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f8fd86a4980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f8fd86a4b10"/>
        <function-ref name="sync" scoped="" ref="0x7f8fd86a4ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f8fd86a3020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f8fd86a31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f8fd86aa8b0" loc="54:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7f8fd86aa8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f8fd96331b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f8fd86aac30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f8fd86aadc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f8fd86a9020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f8fd86a91b0"/>
        <function-ref name="setCca" scoped="" ref="0x7f8fd86a9340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f8fd86a94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f8fd86abce0" loc="53:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f8fd86abce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f8fd96331b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f8fd86aa0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f8fd86a21f0" loc="64:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x7f8fd86a21f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f8fd86a2570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f8fd86a2700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f8fd86a2890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f8fd86a2a20"/>
        <function-ref name="setCca" scoped="" ref="0x7f8fd86a2bb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f8fd86a2d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f8fd86aca80" loc="52:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f8fd86aca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8fd86ace00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f8fd86ab020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd86ab1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd86ab340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f8fd86ab4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f8fd86af020" loc="48:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f8fd86af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f8fd96331b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd86af3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd86af530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd86af6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f8fd86af850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8fd86af9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f8fd86aedf0" loc="50:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f8fd86aedf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f8fd96331b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8fd86ad1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f8fd86a7ce0" loc="60:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f8fd86a7ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f8fd86a60a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f8fd86a6230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f8fd86a63c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f8fd86a6550"/>
        <function-ref name="getPower" scoped="" ref="0x7f8fd86a66e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f8fd86a6870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f8fd86a34d0" loc="63:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f8fd86a34d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f8fd86a3950"/>
        <function-ref name="changed" scoped="" ref="0x7f8fd86a3ae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f8fd86a3c70"/>
        <function-ref name="setAddress" scoped="" ref="0x7f8fd86a3e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f8fd86a6b70" loc="61:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f8fd86a6b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd86a5020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f8fd86a51b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f8fd86a5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f8fd86ae210" loc="49:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f8fd86ae210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f8fd96331b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8fd86ae590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f8fd86a1d30" loc="67:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f8fd86a1d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f8fd86a00e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f8fd86a0270"/>
        <function-ref name="led1On" scoped="" ref="0x7f8fd86a0400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f8fd86a0590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f8fd86a0720"/>
        <function-ref name="get" scoped="" ref="0x7f8fd86a08b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f8fd86a0a40"/>
        <function-ref name="led2Off" scoped="" ref="0x7f8fd869f1b0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd86a0bd0"/>
        <function-ref name="led0On" scoped="" ref="0x7f8fd86a0d60"/>
        <function-ref name="led2On" scoped="" ref="0x7f8fd869f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f8fd86ad470" loc="51:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f8fd86ad470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f8fd86ad7f0"/>
        <function-ref name="source" scoped="" ref="0x7f8fd86ad980"/>
        <function-ref name="address" scoped="" ref="0x7f8fd86adb10"/>
        <function-ref name="destination" scoped="" ref="0x7f8fd86adca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f8fd86ade30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f8fd86ac020"/>
        <function-ref name="type" scoped="" ref="0x7f8fd86ac1b0"/>
        <function-ref name="setType" scoped="" ref="0x7f8fd86ac340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f8fd86ac4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f8fd86ac660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f8fd86ac7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7f8fd86a10f0" loc="66:/home/sumukh/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioResource" scoped="" ref="0x7f8fd86a10f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8fd86a1470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8fd86a1600"/>
        <function-ref name="request" scoped="" ref="0x7f8fd86a1790"/>
        <function-ref name="granted" scoped="" ref="0x7f8fd86a1920"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8fd86a1ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f8fd86175d0" loc="46:/home/sumukh/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f8fd86175d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f8fd8617950"/>
        <function-ref name="stopDone" scoped="" ref="0x7f8fd8617ae0"/>
        <function-ref name="start" scoped="" ref="0x7f8fd8617c70"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd8617e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f8fd8614600" loc="47:/home/sumukh/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f8fd8614600"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f8fd96331b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd8614980"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd8614b10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd8614ca0"/>
        <function-ref name="cancel" scoped="" ref="0x7f8fd8614e30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8fd8613020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f8fd8613e10" loc="49:/home/sumukh/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f8fd8613e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8fd86121c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f8fd8612350"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd86124e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd8612670"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f8fd8612800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f8fd8613800" loc="48:/home/sumukh/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f8fd8613800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f8fd96331b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8fd8613b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f8fd8610b20" loc="53:/home/sumukh/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f8fd8610b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f8fd860f020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f8fd860f1b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f8fd860f340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f8fd860f4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f8fd860f660"/>
        <function-ref name="get" scoped="" ref="0x7f8fd860f7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f8fd860f980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f8fd860e020"/>
        <function-ref name="set" scoped="" ref="0x7f8fd860fb10"/>
        <function-ref name="led0On" scoped="" ref="0x7f8fd860fca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f8fd860fe30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f8fd86101a0" loc="51:/home/sumukh/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f8fd86101a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f8fd8610520"/>
        <function-ref name="noAck" scoped="" ref="0x7f8fd86106b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f8fd8610840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f8fd8612ab0" loc="50:/home/sumukh/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f8fd8612ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f8fd8612e30"/>
        <function-ref name="source" scoped="" ref="0x7f8fd8611020"/>
        <function-ref name="address" scoped="" ref="0x7f8fd86111b0"/>
        <function-ref name="destination" scoped="" ref="0x7f8fd8611340"/>
        <function-ref name="setSource" scoped="" ref="0x7f8fd86114d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f8fd8611660"/>
        <function-ref name="type" scoped="" ref="0x7f8fd86117f0"/>
        <function-ref name="setType" scoped="" ref="0x7f8fd8611980"/>
        <function-ref name="isForMe" scoped="" ref="0x7f8fd8611b10"/>
        <function-ref name="setGroup" scoped="" ref="0x7f8fd8611ca0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f8fd8611e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f8fd85b2d90" loc="54:/home/sumukh/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f8fd85b2d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd85b1180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd85b1310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd85b14a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f8fd85b1630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8fd85b17c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f8fd85b1a50" loc="55:/home/sumukh/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f8fd85b1a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8fd85b1dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f8fd860cb40" loc="47:/home/sumukh/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f8fd860cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f8fd96331b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd85b6020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd85b61b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd85b6340"/>
        <function-ref name="cancel" scoped="" ref="0x7f8fd85b64d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8fd85b6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f8fd85b3720" loc="50:/home/sumukh/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f8fd85b3720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8fd85b3aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f8fd85b3c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd85b3dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd85b2020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f8fd85b21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f8fd85b69e0" loc="48:/home/sumukh/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f8fd85b69e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f8fd96331b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8fd85b6d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f8fd85b2400" loc="51:/home/sumukh/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f8fd85b2400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f8fd85b2780"/>
        <function-ref name="noAck" scoped="" ref="0x7f8fd85b2910"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f8fd85b2aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f8fd85b5020" loc="49:/home/sumukh/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f8fd85b5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f8fd85b53a0"/>
        <function-ref name="source" scoped="" ref="0x7f8fd85b5530"/>
        <function-ref name="address" scoped="" ref="0x7f8fd85b56c0"/>
        <function-ref name="destination" scoped="" ref="0x7f8fd85b5850"/>
        <function-ref name="setSource" scoped="" ref="0x7f8fd85b59e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f8fd85b5b70"/>
        <function-ref name="type" scoped="" ref="0x7f8fd85b5d00"/>
        <function-ref name="setType" scoped="" ref="0x7f8fd85b3020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f8fd85b31b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f8fd85b3340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f8fd85b34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f8fd85ac4e0" loc="50:/home/sumukh/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f8fd85ac4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f8fd85ac860"/>
        <function-ref name="stopDone" scoped="" ref="0x7f8fd85ac9f0"/>
        <function-ref name="start" scoped="" ref="0x7f8fd85acb80"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd85acd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f8fd85aa020" loc="52:/home/sumukh/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f8fd85aa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f8fd9632d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd85aa3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd85aa530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd85aa6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f8fd85aa850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8fd85aa9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8fd85afe60" loc="49:/home/sumukh/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f8fd85afe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd85ac210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f8fd85ab4c0" loc="51:/home/sumukh/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f8fd85ab4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f8fd9632d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8fd85ab840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f8fd85a9940" loc="56:/home/sumukh/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f8fd85a9940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f8fd85a9cc0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f8fd85a9e50"/>
        <function-ref name="led1On" scoped="" ref="0x7f8fd85a8020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f8fd85a81b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f8fd85a8340"/>
        <function-ref name="get" scoped="" ref="0x7f8fd85a84d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f8fd85a8660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f8fd85a8ca0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd85a87f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f8fd85a8980"/>
        <function-ref name="led2On" scoped="" ref="0x7f8fd85a8b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7f8fd85a9020" loc="55:/home/sumukh/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f8fd85a9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f8fd9632d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f8fd85a93a0"/>
        <function-ref name="offset" scoped="" ref="0x7f8fd85a9530"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f8fd85a96c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f8fd85a3e10" loc="66:/home/sumukh/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f8fd85a3e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f8fd85a01c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f8fd85a0350"/>
        <function-ref name="start" scoped="" ref="0x7f8fd85a04e0"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd85a0670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7f8fd853be40" loc="332:/home/sumukh/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x7f8fd853be40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8fd85391e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f8fd8539370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f8fd858e020" loc="74:/home/sumukh/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x7f8fd858e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f8fd858e3a0"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd858e530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7f8fd8572d10" loc="191:/home/sumukh/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x7f8fd8572d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8fd85710e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f8fd8571270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8fd85a37c0" loc="65:/home/sumukh/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f8fd85a37c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd85a3b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7f8fd858bbf0" loc="75:/home/sumukh/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x7f8fd858bbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7f8fd858d020"/>
        <function-ref name="flush" scoped="" ref="0x7f8fd858d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7f8fd853d400" loc="322:/home/sumukh/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x7f8fd853d400"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8fd853d780"/>
        <function-ref name="runTask" scoped="" ref="0x7f8fd853d910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7f8fd858f680" loc="72:/home/sumukh/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f8fd858f680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f8fd858fa00"/>
        <function-ref name="resetSend" scoped="" ref="0x7f8fd858fb90"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f8fd858fd20"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f8fd859e020"/>
        <function-ref name="putData" scoped="" ref="0x7f8fd859e1b0"/>
        <function-ref name="putDone" scoped="" ref="0x7f8fd859e340"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f8fd859e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f8fd859e750" loc="73:/home/sumukh/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f8fd859e750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f8fd859ead0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f8fd859ec60"/>
        <function-ref name="led1On" scoped="" ref="0x7f8fd859edf0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f8fd8599020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f8fd85991b0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd8599340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f8fd85994d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f8fd8599b10"/>
        <function-ref name="set" scoped="" ref="0x7f8fd8599660"/>
        <function-ref name="led0On" scoped="" ref="0x7f8fd85997f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f8fd8599980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7f8fd85360c0" loc="341:/home/sumukh/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f8fd85360c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8fd8536440"/>
        <function-ref name="runTask" scoped="" ref="0x7f8fd85365d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7f8fd859ae50" loc="67:/home/sumukh/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x7f8fd859ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f8fd859f210"/>
        <function-ref name="nextByte" scoped="" ref="0x7f8fd859f3a0"/>
        <function-ref name="startSend" scoped="" ref="0x7f8fd859f530"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f8fd859f6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7f8fd8595340" loc="68:/home/sumukh/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f8fd8595340"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f8fd85956c0"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f8fd8595850"/>
        <function-ref name="endPacket" scoped="" ref="0x7f8fd85959e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7f8fd846c020" loc="275:/home/sumukh/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x7f8fd846c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8fd846c3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f8fd846c530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f8fd8471de0" loc="51:/home/sumukh/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f8fd8471de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f8fd9632d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd84701c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd8470350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd84704e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f8fd8470670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8fd8470800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7f8fd846c800" loc="158:/home/sumukh/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x7f8fd846c800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8fd846cb80"/>
        <function-ref name="runTask" scoped="" ref="0x7f8fd846cd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f8fd84716c0" loc="50:/home/sumukh/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f8fd84716c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f8fd9632d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8fd8471a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7f8fd8470c20" loc="54:/home/sumukh/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x7f8fd8470c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f8fd9632d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f8fd846f020"/>
        <function-ref name="offset" scoped="" ref="0x7f8fd846f1b0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f8fd846f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f8fd846e920" loc="57:/home/sumukh/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f8fd846e920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f8fd846eca0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f8fd846ee30"/>
        <function-ref name="led1On" scoped="" ref="0x7f8fd846d020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f8fd846d1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f8fd846d340"/>
        <function-ref name="get" scoped="" ref="0x7f8fd846d4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f8fd846d660"/>
        <function-ref name="led2On" scoped="" ref="0x7f8fd846dca0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd846d980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f8fd846d7f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f8fd846db10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7f8fd846fe80" loc="56:/home/sumukh/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x7f8fd846fe80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f8fd846e220"/>
        <function-ref name="nextByte" scoped="" ref="0x7f8fd846e3b0"/>
        <function-ref name="startSend" scoped="" ref="0x7f8fd846e540"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f8fd846e6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7f8fd846f590" loc="55:/home/sumukh/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f8fd846f590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f8fd846f910"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f8fd846faa0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f8fd846fc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7f8fd845cd20" loc="50:/home/sumukh/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7f8fd845cd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd84650e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f8fd8465270"/>
        <function-ref name="receive" scoped="" ref="0x7f8fd8465400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f8fd8465590"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f8fd8465720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f8fd84658b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8fd8465a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7f8fd846ae10" loc="48:/home/sumukh/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f8fd846ae10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f8fd84671c0"/>
        <function-ref name="resetSend" scoped="" ref="0x7f8fd8467350"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f8fd84674e0"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f8fd8467670"/>
        <function-ref name="putData" scoped="" ref="0x7f8fd8467800"/>
        <function-ref name="putDone" scoped="" ref="0x7f8fd8467990"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f8fd8467b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f8fd8465cc0" loc="51:/home/sumukh/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f8fd8465cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f8fd84640a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f8fd8464230"/>
        <function-ref name="led1On" scoped="" ref="0x7f8fd84643c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f8fd8464550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f8fd84646e0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd8464870"/>
        <function-ref name="led1Off" scoped="" ref="0x7f8fd8464a00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f8fd845a1b0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd8464b90"/>
        <function-ref name="led0On" scoped="" ref="0x7f8fd8464d20"/>
        <function-ref name="led2On" scoped="" ref="0x7f8fd845a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f8fd8439d50" loc="42:/home/sumukh/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7f8fd8439d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd843d100"/>
        <function-ref name="receive" scoped="" ref="0x7f8fd843d290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f8fd843f960" loc="41:/home/sumukh/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7f8fd843f960"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd843fce0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f8fd843fe70"/>
        <function-ref name="receive" scoped="" ref="0x7f8fd843e030"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f8fd843e1c0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f8fd843e350"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f8fd843e4e0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8fd843e670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f8fd843f150" loc="40:/home/sumukh/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f8fd843f150"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f8fd843f4d0"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd843f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f8fd8437820" loc="41:/home/sumukh/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7f8fd8437820"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd8437ba0"/>
        <function-ref name="receive" scoped="" ref="0x7f8fd8437d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f8fd8436080" loc="42:/home/sumukh/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7f8fd8436080"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd8436400"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f8fd8436590"/>
        <function-ref name="receive" scoped="" ref="0x7f8fd8436720"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f8fd84368b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f8fd8436a40"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f8fd8436bd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8fd8436d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f8fd8435360" loc="43:/home/sumukh/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f8fd8435360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96eb1f0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f8fd96eb560"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8fd84331b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8fd8433b30"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8fd8433670"/>
        <function-ref name="overflow" scoped="" ref="0x7f8fd8432020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f8fd8437020" loc="40:/home/sumukh/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f8fd8437020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f8fd84373a0"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd8437530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f8fd83eedd0" loc="50:/home/sumukh/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7f8fd83eedd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd83ed180"/>
        <function-ref name="receive" scoped="" ref="0x7f8fd83ed310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x7f8fd83ec610" loc="53:/home/sumukh/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x7f8fd83ec610"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f8fd83ec990"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd83ecb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8fd83ee020" loc="48:/home/sumukh/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f8fd83ee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd83ee3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f8fd83ed5a0" loc="51:/home/sumukh/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7f8fd83ed5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd83ed920"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f8fd83edab0"/>
        <function-ref name="receive" scoped="" ref="0x7f8fd83edc40"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f8fd83eddd0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f8fd83ec020"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f8fd83ec1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8fd83ec340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f8fd83e9cc0" loc="56:/home/sumukh/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f8fd83e9cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96eb1f0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f8fd96eb560"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8fd83e8b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8fd83e7550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8fd83e7090"/>
        <function-ref name="overflow" scoped="" ref="0x7f8fd83e7a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x7f8fd83ea620" loc="55:/home/sumukh/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x7f8fd83ea620"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f8fd83ea9a0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f8fd83eab30"/>
        <function-ref name="rxDone" scoped="" ref="0x7f8fd83eacc0"/>
        <function-ref name="txDone" scoped="" ref="0x7f8fd83eae50"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f8fd83e9020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f8fd83e91b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f8fd83e9340"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f8fd83e94d0"/>
        <function-ref name="tx" scoped="" ref="0x7f8fd83e9660"/>
        <function-ref name="rx" scoped="" ref="0x7f8fd83e97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f8fd83ee630" loc="49:/home/sumukh/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f8fd83ee630"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f8fd83ee9b0"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd83eeb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x7f8fd83ecdf0" loc="54:/home/sumukh/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x7f8fd83ecdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f8fd83ea1c0"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd83ea350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x7f8fd83ca5f0" loc="49:/home/sumukh/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x7f8fd83ca5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f8fd83ca970"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f8fd83cab00"/>
        <function-ref name="rxDone" scoped="" ref="0x7f8fd83cac90"/>
        <function-ref name="txDone" scoped="" ref="0x7f8fd83cae20"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f8fd83c9020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f8fd83c91b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f8fd83c9340"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f8fd83c94d0"/>
        <function-ref name="tx" scoped="" ref="0x7f8fd83c9660"/>
        <function-ref name="rx" scoped="" ref="0x7f8fd83c97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x7f8fd83c8dd0" loc="53:/home/sumukh/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x7f8fd83c8dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f8fd83c7180"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f8fd83c7310"/>
        <function-ref name="rxDone" scoped="" ref="0x7f8fd83c74a0"/>
        <function-ref name="txDone" scoped="" ref="0x7f8fd83c7630"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f8fd83c77c0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f8fd83c7950"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f8fd83c7ae0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f8fd83c7c70"/>
        <function-ref name="tx" scoped="" ref="0x7f8fd83c7e00"/>
        <function-ref name="rx" scoped="" ref="0x7f8fd83c6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x7f8fd83cbd20" loc="48:/home/sumukh/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x7f8fd83cbd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f8fd83ca0e0"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd83ca270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x7f8fd83c9b80" loc="51:/home/sumukh/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x7f8fd83c9b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f8fd83c8020"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd83c81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x7f8fd83c8540" loc="52:/home/sumukh/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x7f8fd83c8540"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f8fd83c88c0"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd83c8a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x7f8fd83cb480" loc="47:/home/sumukh/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x7f8fd83cb480"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f8fd83cb800"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd83cb990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x7f8fd83c6d30" loc="80:/home/sumukh/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x7f8fd83c6d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd83c20e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x7f8fd83c16d0" loc="83:/home/sumukh/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x7f8fd83c16d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f8fd83c1a50"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f8fd83c1be0"/>
        <function-ref name="rxDone" scoped="" ref="0x7f8fd83c1d70"/>
        <function-ref name="txDone" scoped="" ref="0x7f8fd83c0020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f8fd83c01b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f8fd83c0340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f8fd83c04d0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f8fd83c0660"/>
        <function-ref name="tx" scoped="" ref="0x7f8fd83c07f0"/>
        <function-ref name="rx" scoped="" ref="0x7f8fd83c0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x7f8fd83c0ce0" loc="85:/home/sumukh/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x7f8fd83c0ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd83bf0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x7f8fd83be650" loc="88:/home/sumukh/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x7f8fd83be650"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f8fd83be9d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f8fd83beb60"/>
        <function-ref name="rxDone" scoped="" ref="0x7f8fd83becf0"/>
        <function-ref name="txDone" scoped="" ref="0x7f8fd83bee80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f8fd83bd030"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f8fd83bd1c0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f8fd83bd350"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f8fd83bd4e0"/>
        <function-ref name="tx" scoped="" ref="0x7f8fd83bd670"/>
        <function-ref name="rx" scoped="" ref="0x7f8fd83bd800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x7f8fd83c2d90" loc="82:/home/sumukh/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x7f8fd83c2d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f8fd83c1180"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd83c1310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x7f8fd83bf470" loc="86:/home/sumukh/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x7f8fd83bf470"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f8fd83bf7f0"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd83bf980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x7f8fd83bfd50" loc="87:/home/sumukh/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x7f8fd83bfd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f8fd83be100"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd83be290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7f8fd83bdb30" loc="90:/home/sumukh/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f8fd83bdb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f8fd83bc020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f8fd83bc1b0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f8fd83bc340"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f8fd83bc4d0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f8fd83bc660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f8fd83bc980" loc="91:/home/sumukh/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f8fd83bc980"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f8fd83bcd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x7f8fd83c24b0" loc="81:/home/sumukh/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x7f8fd83c24b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f8fd83c2830"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd83c29c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f8fd8358570" loc="24:/home/sumukh/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f8fd8358570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96eb1f0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f8fd96eb560"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8fd83573d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8fd8357d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8fd8357890"/>
        <function-ref name="overflow" scoped="" ref="0x7f8fd8356260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f8fd8352570" loc="24:/home/sumukh/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f8fd8352570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96eb1f0"/>
            <typename><typedef-ref name="TThree" ref="0x7f8fd96b3e30"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8fd83513d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8fd8351d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8fd8351890"/>
        <function-ref name="overflow" scoped="" ref="0x7f8fd8350260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f8fd83487c0" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f8fd83487c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f8fd8348b40"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7f8fd8348cd0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f8fd8348e60"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7f8fd8347020"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f8fd83471b0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f8fd8347340"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7f8fd83474d0"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7f8fd8347660"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7f8fd83477f0"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7f8fd8347980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f8fd8346020" loc="47:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f8fd8346020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f8fd83424e0"/>
        <function-ref name="test" scoped="" ref="0x7f8fd8343a10"/>
        <function-ref name="get" scoped="" ref="0x7f8fd8346c50"/>
        <function-ref name="captured" scoped="" ref="0x7f8fd8344660"/>
        <function-ref name="reset" scoped="" ref="0x7f8fd8344b70"/>
        <function-ref name="isOn" scoped="" ref="0x7f8fd8342020"/>
        <function-ref name="set" scoped="" ref="0x7f8fd8344150"/>
        <function-ref name="start" scoped="" ref="0x7f8fd8343090"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd8343550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f8fd83401d0" loc="48:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f8fd83401d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f8fd833eba0"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd833f850"/>
        <function-ref name="get" scoped="" ref="0x7f8fd8340e00"/>
        <function-ref name="reset" scoped="" ref="0x7f8fd833fd10"/>
        <function-ref name="isOn" scoped="" ref="0x7f8fd833d090"/>
        <function-ref name="set" scoped="" ref="0x7f8fd833f340"/>
        <function-ref name="start" scoped="" ref="0x7f8fd833e220"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd833e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f8fd834d390" loc="45:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f8fd834d390"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f8fd8349810"/>
        <function-ref name="test" scoped="" ref="0x7f8fd834ae60"/>
        <function-ref name="get" scoped="" ref="0x7f8fd834c020"/>
        <function-ref name="setScale" scoped="" ref="0x7f8fd8349cd0"/>
        <function-ref name="getScale" scoped="" ref="0x7f8fd8348260"/>
        <function-ref name="reset" scoped="" ref="0x7f8fd834a020"/>
        <function-ref name="overflow" scoped="" ref="0x7f8fd834c9f0"/>
        <function-ref name="isOn" scoped="" ref="0x7f8fd8349350"/>
        <function-ref name="set" scoped="" ref="0x7f8fd834c4e0"/>
        <function-ref name="start" scoped="" ref="0x7f8fd834a4e0"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd834a9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f8fd8334580" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f8fd8334580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f8fd8334900"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7f8fd8334a90"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f8fd8334c20"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7f8fd8334db0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f8fd8333020"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f8fd83331b0"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7f8fd8333340"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7f8fd83334d0"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7f8fd8333660"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7f8fd83337f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7f8fd832e7e0" loc="48:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7f8fd832e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f8fd832a1b0"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd832de10"/>
        <function-ref name="get" scoped="" ref="0x7f8fd832d440"/>
        <function-ref name="reset" scoped="" ref="0x7f8fd832c340"/>
        <function-ref name="isOn" scoped="" ref="0x7f8fd832a670"/>
        <function-ref name="set" scoped="" ref="0x7f8fd832d900"/>
        <function-ref name="start" scoped="" ref="0x7f8fd832c800"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd832ccc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f8fd8333d00" loc="47:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f8fd8333d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f8fd832e0d0"/>
        <function-ref name="test" scoped="" ref="0x7f8fd832f720"/>
        <function-ref name="get" scoped="" ref="0x7f8fd8332980"/>
        <function-ref name="captured" scoped="" ref="0x7f8fd8331380"/>
        <function-ref name="reset" scoped="" ref="0x7f8fd8331890"/>
        <function-ref name="isOn" scoped="" ref="0x7f8fd832fbe0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd8332e40"/>
        <function-ref name="start" scoped="" ref="0x7f8fd8331d50"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd832f260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7f8fd832ad30" loc="49:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7f8fd832ad30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f8fd83266e0"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd8328380"/>
        <function-ref name="get" scoped="" ref="0x7f8fd8329980"/>
        <function-ref name="reset" scoped="" ref="0x7f8fd8328840"/>
        <function-ref name="isOn" scoped="" ref="0x7f8fd8326ba0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd8329e40"/>
        <function-ref name="start" scoped="" ref="0x7f8fd8328d00"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd8326220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7f8fd83252a0" loc="50:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7f8fd83252a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f8fd8323e60"/>
        <function-ref name="fired" scoped="" ref="0x7f8fd83249f0"/>
        <function-ref name="get" scoped="" ref="0x7f8fd8324020"/>
        <function-ref name="reset" scoped="" ref="0x7f8fd8323020"/>
        <function-ref name="isOn" scoped="" ref="0x7f8fd8321350"/>
        <function-ref name="set" scoped="" ref="0x7f8fd83244e0"/>
        <function-ref name="start" scoped="" ref="0x7f8fd83234e0"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd83239a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f8fd8339190" loc="45:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f8fd8339190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f8fd83354e0"/>
        <function-ref name="test" scoped="" ref="0x7f8fd8337b30"/>
        <function-ref name="get" scoped="" ref="0x7f8fd8339dc0"/>
        <function-ref name="setScale" scoped="" ref="0x7f8fd83359a0"/>
        <function-ref name="getScale" scoped="" ref="0x7f8fd8334020"/>
        <function-ref name="reset" scoped="" ref="0x7f8fd8338cb0"/>
        <function-ref name="overflow" scoped="" ref="0x7f8fd83387f0"/>
        <function-ref name="isOn" scoped="" ref="0x7f8fd8335020"/>
        <function-ref name="set" scoped="" ref="0x7f8fd83382e0"/>
        <function-ref name="start" scoped="" ref="0x7f8fd83371b0"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd8337670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8fd829abe0" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f8fd829abe0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f8fd9779660"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f8fd9779660"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd8298020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f8fd8298410" loc="47:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f8fd8298410"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f8fd8295810"/>
        <function-ref name="test" scoped="" ref="0x7f8fd8296e60"/>
        <function-ref name="get" scoped="" ref="0x7f8fd8297090"/>
        <function-ref name="setScale" scoped="" ref="0x7f8fd8295cd0"/>
        <function-ref name="getScale" scoped="" ref="0x7f8fd8293260"/>
        <function-ref name="reset" scoped="" ref="0x7f8fd8296020"/>
        <function-ref name="overflow" scoped="" ref="0x7f8fd8297a60"/>
        <function-ref name="isOn" scoped="" ref="0x7f8fd8295350"/>
        <function-ref name="set" scoped="" ref="0x7f8fd8297550"/>
        <function-ref name="start" scoped="" ref="0x7f8fd82964e0"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd82969a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f8fd82913c0" loc="45:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f8fd82913c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96eb1f0"/>
            <typename><typedef-ref name="TThree" ref="0x7f8fd96b3e30"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8fd828f240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8fd828fbc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8fd828f700"/>
        <function-ref name="overflow" scoped="" ref="0x7f8fd828e0d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f8fd828e660" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f8fd828e660"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f8fd828aa90"/>
        <function-ref name="test" scoped="" ref="0x7f8fd828a110"/>
        <function-ref name="get" scoped="" ref="0x7f8fd828d3d0"/>
        <function-ref name="setScale" scoped="" ref="0x7f8fd8289020"/>
        <function-ref name="getScale" scoped="" ref="0x7f8fd8289530"/>
        <function-ref name="reset" scoped="" ref="0x7f8fd828c2a0"/>
        <function-ref name="overflow" scoped="" ref="0x7f8fd828dda0"/>
        <function-ref name="isOn" scoped="" ref="0x7f8fd828a5d0"/>
        <function-ref name="set" scoped="" ref="0x7f8fd828d890"/>
        <function-ref name="start" scoped="" ref="0x7f8fd828c760"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd828cc20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f8fd82810f0" loc="63:/home/sumukh/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7f8fd82810f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96eb1f0"/>
            <typename><typedef-ref name="TThree" ref="0x7f8fd96b3e30"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8fd8280020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8fd82809a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8fd82804e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f8fd8280e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f8fd8285cd0" loc="62:/home/sumukh/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f8fd8285cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8fd96eb1f0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f8fd96eb560"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8fd8284b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8fd8283550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8fd8283090"/>
        <function-ref name="overflow" scoped="" ref="0x7f8fd8283a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7f8fd82741e0" loc="47:/home/sumukh/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x7f8fd82741e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f8fd8274560"/>
        <function-ref name="offset" scoped="" ref="0x7f8fd82746f0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f8fd8274880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f8fd81e9870" loc="49:/home/sumukh/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f8fd81e9870"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd81e9bf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd81e9d80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd81e8020"/>
        <function-ref name="cancel" scoped="" ref="0x7f8fd81e81b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8fd81e8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f8fd81e8590" loc="50:/home/sumukh/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f8fd81e8590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8fd81e8910"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f8fd81e8aa0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd81e8c30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd81e8dc0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f8fd81e7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f8fd81e7270" loc="51:/home/sumukh/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f8fd81e7270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f8fd81e75f0"/>
        <function-ref name="source" scoped="" ref="0x7f8fd81e7780"/>
        <function-ref name="address" scoped="" ref="0x7f8fd81e7910"/>
        <function-ref name="destination" scoped="" ref="0x7f8fd81e7aa0"/>
        <function-ref name="setSource" scoped="" ref="0x7f8fd81e7c30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f8fd81e7dc0"/>
        <function-ref name="type" scoped="" ref="0x7f8fd81e5020"/>
        <function-ref name="setType" scoped="" ref="0x7f8fd81e51b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f8fd81e5340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f8fd81e54d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f8fd81e5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f8fd81e58f0" loc="52:/home/sumukh/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f8fd81e58f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f8fd81e5c70"/>
        <function-ref name="noAck" scoped="" ref="0x7f8fd81e5e00"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f8fd81e4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f8fd7ad5020" loc="44:/home/sumukh/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f8fd7ad5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd7ad53a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd7ad5530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd7ad56c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f8fd7ad5850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8fd7ad59e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f8fd7ad5c90" loc="46:/home/sumukh/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f8fd7ad5c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd7ad40a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd7ad4230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd7ad43c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f8fd7ad4550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8fd7ad46e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f8fd7ad4930" loc="47:/home/sumukh/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f8fd7ad4930"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f8fd7ad4cb0"/>
        <function-ref name="source" scoped="" ref="0x7f8fd7ad4e40"/>
        <function-ref name="address" scoped="" ref="0x7f8fd7ad3020"/>
        <function-ref name="destination" scoped="" ref="0x7f8fd7ad31b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f8fd7ad3340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f8fd7ad34d0"/>
        <function-ref name="type" scoped="" ref="0x7f8fd7ad3660"/>
        <function-ref name="setType" scoped="" ref="0x7f8fd7ad37f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f8fd7ad3980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f8fd7ad3b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f8fd7ad3ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f8fd8246a00" loc="44:/home/sumukh/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f8fd8246a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd8246d80"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd8243020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd82431b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f8fd8243340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8fd82434d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f8fd81f5400" loc="48:/home/sumukh/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f8fd81f5400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f8fd96331b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd81f57a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd81f5930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd81f5ac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f8fd81f5c50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8fd81f5de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f8fd81f6580" loc="46:/home/sumukh/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f8fd81f6580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd81f6920"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd81f6ab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd81f6c40"/>
        <function-ref name="cancel" scoped="" ref="0x7f8fd81f6dd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8fd81f5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f8fd81f3720" loc="50:/home/sumukh/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f8fd81f3720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8fd81f3aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f8fd81f3c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd81f3dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd81f2020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f8fd81f21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f8fd81f2480" loc="169:/home/sumukh/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x7f8fd81f2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8fd81f2800"/>
        <function-ref name="runTask" scoped="" ref="0x7f8fd81f2990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f8fd81f2c60" loc="126:/home/sumukh/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x7f8fd81f2c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8fd81f1020"/>
        <function-ref name="runTask" scoped="" ref="0x7f8fd81f11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f8fd81f4060" loc="49:/home/sumukh/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f8fd81f4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f8fd81f43e0"/>
        <function-ref name="source" scoped="" ref="0x7f8fd81f4570"/>
        <function-ref name="address" scoped="" ref="0x7f8fd81f4700"/>
        <function-ref name="destination" scoped="" ref="0x7f8fd81f4890"/>
        <function-ref name="setSource" scoped="" ref="0x7f8fd81f4a20"/>
        <function-ref name="setDestination" scoped="" ref="0x7f8fd81f4bb0"/>
        <function-ref name="type" scoped="" ref="0x7f8fd81f4d40"/>
        <function-ref name="setType" scoped="" ref="0x7f8fd81f3020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f8fd81f31b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f8fd81f3340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f8fd81f34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7f8fd81e2b70" loc="43:/home/sumukh/tinyos-main/tos/system/QueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f8fd81e2b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f8fd81c0550"/>
        <function-ref name="enqueue" scoped="" ref="0x7f8fd81be2f0"/>
        <function-ref name="element" scoped="" ref="0x7f8fd81be960"/>
        <function-ref name="maxSize" scoped="" ref="0x7f8fd81c00d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f8fd81c0c00"/>
        <function-ref name="empty" scoped="" ref="0x7f8fd81e1790"/>
        <function-ref name="size" scoped="" ref="0x7f8fd81e1c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f8fd81b92f0" loc="93:/home/sumukh/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f8fd81b92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f8fd81b8da0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f8fd81b5b40"/>
        <function-ref name="element" scoped="" ref="0x7f8fd81b4220"/>
        <function-ref name="maxSize" scoped="" ref="0x7f8fd81b8920"/>
        <function-ref name="dequeue" scoped="" ref="0x7f8fd81b5490"/>
        <function-ref name="empty" scoped="" ref="0x7f8fd81b8020"/>
        <function-ref name="size" scoped="" ref="0x7f8fd81b84a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f8fd81b48d0" loc="94:/home/sumukh/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f8fd81b48d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8fd81b4c50"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd81b4de0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd81b3020"/>
        <function-ref name="cancel" scoped="" ref="0x7f8fd81b31b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8fd81b3340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f8fd81b35d0" loc="95:/home/sumukh/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f8fd81b35d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8fd81b3950"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f8fd81b3ae0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8fd81b3c70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8fd81b3e00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f8fd81b2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0x7f8fd81ad890" loc="114:/home/sumukh/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="retrySend" scoped="" ref="0x7f8fd81ad890"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8fd81adc10"/>
        <function-ref name="runTask" scoped="" ref="0x7f8fd81adda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8fd81ba380" loc="89:/home/sumukh/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f8fd81ba380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd81ba700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f8fd81b22a0" loc="96:/home/sumukh/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f8fd81b22a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f8fd81b2620"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f8fd81b27b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f8fd81b2940"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f8fd81b2ad0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f8fd81b2c60"/>
        <function-ref name="get" scoped="" ref="0x7f8fd81b2df0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f8fd81b1020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f8fd81b1660"/>
        <function-ref name="set" scoped="" ref="0x7f8fd81b11b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f8fd81b1340"/>
        <function-ref name="led2On" scoped="" ref="0x7f8fd81b14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x7f8fd81b7a30" loc="90:/home/sumukh/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x7f8fd81b7a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f8fd81b7db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f8fd8193020" loc="43:/home/sumukh/tinyos-main/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x7f8fd8193020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f8fd81933a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8fd818dd10" loc="94:/home/sumukh/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f8fd818dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8fd818c0e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f8fd818c3c0" loc="95:/home/sumukh/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x7f8fd818c3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f8fd818c740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f8fd8186ac0" loc="39:/home/sumukh/tinyos-main/tos/lib/printf/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f8fd8186ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f8fd8186e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f8fd8183210" loc="40:/home/sumukh/tinyos-main/tos/lib/printf/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x7f8fd8183210"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f8fd8183590"/>
        <function-ref name="stopDone" scoped="" ref="0x7f8fd8183720"/>
        <function-ref name="start" scoped="" ref="0x7f8fd81838b0"/>
        <function-ref name="stop" scoped="" ref="0x7f8fd8183a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f8fd8170330" loc="10:RssiBaseC.nc">
      <component-ref qname="RssiBaseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f8fd8170330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f8fd81706b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f8fd8170840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f8fd81709d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f8fd8170b60"/>
        <function-ref name="getPower" scoped="" ref="0x7f8fd8170cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f8fd8170e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiMsgIntercept" ref="0x7f8fd8173c20" loc="7:RssiBaseC.nc">
      <component-ref qname="RssiBaseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiMsgIntercept" scoped="" ref="0x7f8fd8173c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7f8fd8170020"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Intercept" loc="15:/home/sumukh/tinyos-main/tos/interfaces/Intercept.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="forward" ref="0x7f8fd95d9720" loc="31:/home/sumukh/tinyos-main/tos/interfaces/Intercept.nc">
        <documentation loc="16:/home/sumukh/tinyos-main/tos/interfaces/Intercept.nc">
          <short>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination.</short>
          <long>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination. &#10;&#10; @param 'message_t* ONE msg' The complete message received.&#10;&#10; @param 'void* COUNT(len) payload' The payload portion of the packet for this&#10; protocol layer.&#10;&#10; @param len The length of the payload buffer.&#10;&#10; @return TRUE indicates the packet should be forwarded, FALSE&#10; indicates that it should not be forwarded.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Intercept"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8fd95dddd0" loc="31:/home/sumukh/tinyos-main/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f8fd95d9150" loc="31:/home/sumukh/tinyos-main/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f8fd95d9480" loc="31:/home/sumukh/tinyos-main/tos/interfaces/Intercept.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/home/sumukh/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f8fd95d4840" loc="62:/home/sumukh/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/home/sumukh/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/sumukh/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/sumukh/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f8fd95d2460" loc="60:/home/sumukh/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/sumukh/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7f8fd95c7b70" loc="60:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7f8fd95c78f0" loc="60:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7f8fd95c9020" loc="31:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7f8fd95c9aa0" loc="39:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f8fd95c9820" loc="39:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7f8fd95c85e0" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f8fd95c8360" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7f8fd95c7020" loc="53:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/home/sumukh/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/sumukh/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f8fd95b50e0" loc="44:/home/sumukh/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f8fd95b5810" loc="45:/home/sumukh/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f8fd95b62b0" loc="42:/home/sumukh/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f8fd95b4760" loc="47:/home/sumukh/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f8fd95b69b0" loc="43:/home/sumukh/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f8fd95b4020" loc="46:/home/sumukh/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f8fd95b74c0" loc="40:/home/sumukh/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f8fd95b7b90" loc="41:/home/sumukh/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/sumukh/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/sumukh/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f8fd9778d30" loc="57:/home/sumukh/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/sumukh/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f8fd9774ce0" loc="72:/home/sumukh/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/sumukh/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f8fd97744d0" loc="65:/home/sumukh/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/sumukh/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/sumukh/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f8fd976cc50" loc="67:/home/sumukh/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/sumukh/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f8fd976a4f0" loc="75:/home/sumukh/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/sumukh/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/sumukh/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/sumukh/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7f8fd96a92b0" loc="76:/home/sumukh/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/sumukh/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/sumukh/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/home/sumukh/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f8fd968a2b0" loc="62:/home/sumukh/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/sumukh/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f8fd970eac0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/sumukh/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/sumukh/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f8fd968c420" loc="52:/home/sumukh/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/sumukh/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/sumukh/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/sumukh/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f8fd93d5ab0" loc="113:/home/sumukh/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/sumukh/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f8fd93d5830" loc="113:/home/sumukh/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f8fd93d2020" loc="138:/home/sumukh/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/sumukh/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f8fd93d4d30" loc="138:/home/sumukh/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f8fd93d8bb0" loc="104:/home/sumukh/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/sumukh/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f8fd93d4350" loc="130:/home/sumukh/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/sumukh/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/sumukh/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f8fd93c5cd0" loc="78:/home/sumukh/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/sumukh/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
              <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8fd93c5370" loc="78:/home/sumukh/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f8fd93c56c0" loc="78:/home/sumukh/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f8fd93c59f0" loc="78:/home/sumukh/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/sumukh/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/sumukh/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f8fd93ab040" loc="177:/home/sumukh/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/sumukh/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f8fd9633590"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f8fd93add90" loc="177:/home/sumukh/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f8fd93b4bc0" loc="88:/home/sumukh/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/sumukh/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f8fd9633970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f8fd93b4940" loc="88:/home/sumukh/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f8fd93b7020" loc="68:/home/sumukh/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/sumukh/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f8fd9633970"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f8fd93b7ae0" loc="78:/home/sumukh/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/sumukh/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f8fd9633970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f8fd93b7860" loc="78:/home/sumukh/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f8fd93b2600" loc="121:/home/sumukh/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/sumukh/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f8fd9633970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f8fd93b2020" loc="121:/home/sumukh/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f8fd93b2370" loc="121:/home/sumukh/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f8fd9633970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f8fd93b5020" loc="103:/home/sumukh/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/sumukh/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f8fd9633970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f8fd93b39e0" loc="103:/home/sumukh/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f8fd93b3d30" loc="103:/home/sumukh/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f8fd9633970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f8fd93aeae0" loc="147:/home/sumukh/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/sumukh/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f8fd96331b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f8fd93ae860" loc="147:/home/sumukh/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f8fd93ace60" loc="162:/home/sumukh/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/sumukh/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f8fd96331b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f8fd93ac8b0" loc="162:/home/sumukh/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f8fd93acbd0" loc="162:/home/sumukh/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f8fd96331b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f8fd93af890" loc="136:/home/sumukh/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/sumukh/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f8fd93af610" loc="136:/home/sumukh/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f8fd93aa600" loc="187:/home/sumukh/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/sumukh/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f8fd9633590"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f8fd93aa020" loc="187:/home/sumukh/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f8fd93aa370" loc="187:/home/sumukh/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f8fd9633590"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f8fd93a8490" loc="195:/home/sumukh/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/sumukh/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f8fd9633590"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/sumukh/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/sumukh/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f8fd93c0020" loc="65:/home/sumukh/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/sumukh/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8fd93d1c70" loc="65:/home/sumukh/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f8fd93bf110" loc="78:/home/sumukh/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/sumukh/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8fd93c0e10" loc="78:/home/sumukh/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f8fd93ba490" loc="126:/home/sumukh/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/sumukh/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8fd93bce50" loc="126:/home/sumukh/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f8fd93ba1c0" loc="126:/home/sumukh/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f8fd93bc560" loc="106:/home/sumukh/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/sumukh/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f8fd93bd5e0" loc="94:/home/sumukh/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/sumukh/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8fd93bd020" loc="94:/home/sumukh/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f8fd93bd350" loc="94:/home/sumukh/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/sumukh/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/sumukh/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f8fd939dc70" loc="61:/home/sumukh/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/sumukh/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f8fd939c490" loc="67:/home/sumukh/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/sumukh/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f8fd939cc70" loc="72:/home/sumukh/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/sumukh/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f8fd939bbd0" loc="83:/home/sumukh/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/sumukh/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f8fd9398350" loc="100:/home/sumukh/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/sumukh/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f8fd9398b60" loc="117:/home/sumukh/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/sumukh/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f8fd939b420" loc="77:/home/sumukh/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/sumukh/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f8fd9397710" loc="134:/home/sumukh/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/sumukh/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f8fd9397490" loc="134:/home/sumukh/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f8fd939d4e0" loc="56:/home/sumukh/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/sumukh/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f8fd93993e0" loc="89:/home/sumukh/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/sumukh/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f8fd9399b70" loc="94:/home/sumukh/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/sumukh/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/sumukh/tinyos-main/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f8fd93cf020" loc="80:/home/sumukh/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/sumukh/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f8fd9633970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f8fd93d05d0" loc="80:/home/sumukh/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f8fd9633970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f8fd93d0950" loc="80:/home/sumukh/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f8fd93d0c80" loc="80:/home/sumukh/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f8fd93cb660" loc="135:/home/sumukh/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/sumukh/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8fd93cb060" loc="135:/home/sumukh/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f8fd93cb390" loc="135:/home/sumukh/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f8fd93ca790" loc="123:/home/sumukh/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/sumukh/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f8fd93ce390" loc="96:/home/sumukh/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/sumukh/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8fd93ce110" loc="96:/home/sumukh/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f8fd93cd8b0" loc="110:/home/sumukh/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/sumukh/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8fd93cd2d0" loc="110:/home/sumukh/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f8fd93cd620" loc="110:/home/sumukh/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/sumukh/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f8fd92f81e0" loc="35:/home/sumukh/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f8fd92f81e0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f8fd92f8420" loc="35:/home/sumukh/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8fd92f8420"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f8fd92f32a0" loc="63:/home/sumukh/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/sumukh/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8fd92f8420"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8fd92f3020" loc="63:/home/sumukh/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f8fd92f2430" loc="70:/home/sumukh/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/sumukh/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8fd92f21b0" loc="70:/home/sumukh/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f8fd92f4020" loc="49:/home/sumukh/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/sumukh/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8fd92f8d60" loc="49:/home/sumukh/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f8fd92f1740" loc="78:/home/sumukh/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/sumukh/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8fd92f8420"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8fd92f1150" loc="78:/home/sumukh/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f8fd92f14b0" loc="78:/home/sumukh/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8fd92f8420"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/sumukh/tinyos-main/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f8fd92e5b50" loc="65:/home/sumukh/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/sumukh/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8fd92e5530" loc="65:/home/sumukh/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f8fd92e58c0" loc="65:/home/sumukh/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f8fd92e2d00" loc="71:/home/sumukh/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/sumukh/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8fd92e2a80" loc="71:/home/sumukh/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f8fd92e6c60" loc="57:/home/sumukh/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/sumukh/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f8fd92e62a0" loc="52:/home/sumukh/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/sumukh/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f8fd92e6020" loc="52:/home/sumukh/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/sumukh/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f8fd92fb5f0" loc="59:/home/sumukh/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/sumukh/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8fd92fb370" loc="59:/home/sumukh/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f8fd92fa7d0" loc="71:/home/sumukh/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/sumukh/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8fd92fa550" loc="71:/home/sumukh/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f8fd92f7940" loc="85:/home/sumukh/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/sumukh/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8fd92f76c0" loc="85:/home/sumukh/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7f8fd92bc980" loc="95:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8fd92bc700" loc="95:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7f8fd92bfc30" loc="81:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8fd92bf9b0" loc="81:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7f8fd92c0350" loc="66:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f8fd92c00d0" loc="66:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7f8fd92c2800" loc="60:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f8fd92c2580" loc="60:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7f8fd92c0d80" loc="73:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7f8fd92c0b00" loc="73:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7f8fd92bdb10" loc="88:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8fd92bd890" loc="88:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/sumukh/tinyos-main/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f8fd92af2b0" loc="59:/home/sumukh/tinyos-main/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/sumukh/tinyos-main/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f8fd9633970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f8fd92bac60" loc="59:/home/sumukh/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f8fd9633970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f8fd92af020" loc="59:/home/sumukh/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7f8fd92cb810" loc="56:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f8fd92cb230" loc="56:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7f8fd92cb580" loc="56:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7f8fd92c7e20" loc="77:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f8fd92c7820" loc="77:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7f8fd92c7b90" loc="77:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7f8fd92ca350" loc="64:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f8fda1b4290"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f8fd92ca0d0" loc="64:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7f8fd92c8d30" loc="75:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f8fd92c8ab0" loc="75:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7f8fd92cc9c0" loc="47:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f8fd92cc740" loc="47:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7f8fd92cae80" loc="72:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f8fd92cac00" loc="72:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/sumukh/tinyos-main/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f8fd92b3b30" loc="65:/home/sumukh/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/sumukh/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8fd92b38b0" loc="65:/home/sumukh/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f8fd92b8c10" loc="46:/home/sumukh/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/sumukh/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8fd92b85f0" loc="46:/home/sumukh/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f8fd92b8980" loc="46:/home/sumukh/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f8fd92b7b00" loc="59:/home/sumukh/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/sumukh/tinyos-main/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8fd92b7880" loc="59:/home/sumukh/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f8fd92b7050" loc="53:/home/sumukh/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/sumukh/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8fd92b6a10" loc="53:/home/sumukh/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f8fd92b6da0" loc="53:/home/sumukh/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f8fd92b2b70" loc="71:/home/sumukh/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/sumukh/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8fd92b28f0" loc="71:/home/sumukh/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/sumukh/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f8fd92c4780" loc="47:/home/sumukh/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/sumukh/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8fd92c4500" loc="47:/home/sumukh/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/sumukh/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f8fd92a3690" loc="75:/home/sumukh/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/home/sumukh/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8fd92a30d0" loc="75:/home/sumukh/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f8fd92a3400" loc="75:/home/sumukh/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f8fd929ecb0" loc="125:/home/sumukh/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/home/sumukh/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8fd929e6b0" loc="125:/home/sumukh/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f8fd929e9e0" loc="125:/home/sumukh/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f8fd92a1d70" loc="112:/home/sumukh/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/home/sumukh/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f8fd92a09c0" loc="89:/home/sumukh/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/home/sumukh/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8fd92a0740" loc="89:/home/sumukh/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f8fd929fe80" loc="100:/home/sumukh/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/home/sumukh/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8fd929f8a0" loc="100:/home/sumukh/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f8fd929fbf0" loc="100:/home/sumukh/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/sumukh/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/sumukh/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f8fd92a6120" loc="120:/home/sumukh/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/sumukh/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f8fd92a7120" loc="97:/home/sumukh/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/sumukh/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f8fd92a9770" loc="88:/home/sumukh/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/sumukh/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f8fd92a7910" loc="102:/home/sumukh/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/sumukh/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f8fd92a6b80" loc="128:/home/sumukh/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/sumukh/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f8fd927dca0" loc="51:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f8fd927d6e0" loc="51:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7f8fd927da10" loc="51:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f8fd927b020" loc="65:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7f8fd9278930" loc="84:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f8fd927aab0" loc="84:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f8fd9278360" loc="84:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f8fd9278690" loc="84:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f8fd927a2b0" loc="73:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f8fd927bbb0" loc="73:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f8fd927a020" loc="73:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7f8fd927c780" loc="58:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7f8fd927c500" loc="58:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/sumukh/tinyos-main/tos/interfaces/Random.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f8fd9275b50" loc="52:/home/sumukh/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="48:/home/sumukh/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f8fd9275350" loc="46:/home/sumukh/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="42:/home/sumukh/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/sumukh/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/sumukh/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f8fd9280270" loc="95:/home/sumukh/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/sumukh/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f8fd9280a80" loc="105:/home/sumukh/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/sumukh/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7f8fd926e020" loc="49:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8fd926fc90" loc="49:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7f8fd926f490" loc="42:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7f8fd966f960"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7f8fd966d390"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8fd926f190" loc="42:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7f8fd926d360" loc="53:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7f8fd966de90"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7f8fd966a7e0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8fd926d060" loc="53:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7f8fd9284070" loc="71:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7f8fd92820e0" loc="97:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7f8fd92838f0" loc="90:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7f8fd9287730" loc="51:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7f8fd92867e0" loc="63:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7f8fd92848e0" loc="76:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7f8fd9283120" loc="83:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7f8fd9286020" loc="56:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/home/sumukh/tinyos-main/tos/interfaces/State.nc">
      <documentation loc="33:/home/sumukh/tinyos-main/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7f8fd9268a70" loc="71:/home/sumukh/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="68:/home/sumukh/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7f8fd9269020" loc="56:/home/sumukh/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="53:/home/sumukh/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7f8fd92682a0" loc="66:/home/sumukh/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="63:/home/sumukh/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7f8fd9268020" loc="66:/home/sumukh/tinyos-main/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7f8fd9269790" loc="61:/home/sumukh/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="58:/home/sumukh/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7f8fd9272cb0" loc="45:/home/sumukh/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="40:/home/sumukh/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f8fd9272a30" loc="45:/home/sumukh/tinyos-main/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7f8fd926a7a0" loc="51:/home/sumukh/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="47:/home/sumukh/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f8fd926a520" loc="51:/home/sumukh/tinyos-main/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7f8fd920b640" loc="106:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7f8fd920b060" loc="106:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7f8fd920b3b0" loc="106:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7f8fd920d020" loc="93:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7f8fd920e690" loc="87:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7f8fd920e020" loc="87:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7f8fd920e400" loc="87:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7f8fd9214a40" loc="55:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f8fd92147c0" loc="55:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7f8fd920d8a0" loc="98:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7f8fd9210540" loc="72:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f8fd92102c0" loc="72:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f8fd9213b90" loc="61:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f8fd9213910" loc="61:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7f8fd920a8a0" loc="117:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7f8fd920f6b0" loc="78:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f8fd920f430" loc="78:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7f8fd920a070" loc="112:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7f8fd9212350" loc="66:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f8fd92e0020"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f8fd92e0780"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7f8fd9212b40" loc="71:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7f8fd9214020" loc="54:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f8fd92131f0" loc="60:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7f8fd9210ce0" loc="77:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/sumukh/tinyos-main/tos/interfaces/Read.nc">
      <documentation loc="33:/home/sumukh/tinyos-main/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f8fd92062b0" loc="49:/home/sumukh/tinyos-main/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f8fd92062b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f8fd9206b70" loc="55:/home/sumukh/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="50:/home/sumukh/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f8fd92058f0" loc="63:/home/sumukh/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="57:/home/sumukh/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f8fd92062b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f8fd9205340" loc="63:/home/sumukh/tinyos-main/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f8fd9205660" loc="63:/home/sumukh/tinyos-main/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f8fd92062b0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f8fd91dbc10" loc="55:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f8fd9672a50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f8fd91db990" loc="55:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f8fd91da710" loc="63:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f8fd9672a50"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f8fd91da490" loc="63:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/home/sumukh/tinyos-main/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/home/sumukh/tinyos-main/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7f8fd91fbc60" loc="48:/home/sumukh/tinyos-main/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/home/sumukh/tinyos-main/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f8fd92e0020"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f8fd92e0780"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/sumukh/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/sumukh/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f8fd91f6020" loc="56:/home/sumukh/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f8fd91f6020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f8fd91f6260" loc="56:/home/sumukh/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8fd91f6260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f8fd91f3e00" loc="109:/home/sumukh/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/sumukh/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8fd91f6260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f8fd91f5e40" loc="78:/home/sumukh/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/sumukh/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f8fd91f3460" loc="103:/home/sumukh/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/sumukh/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8fd91f6260"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8fd91f6260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f8fd91f4e60" loc="103:/home/sumukh/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8fd91f6260"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f8fd91f31d0" loc="103:/home/sumukh/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8fd91f6260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f8fd91f4640" loc="88:/home/sumukh/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/sumukh/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f8fd91f1620" loc="116:/home/sumukh/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/sumukh/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8fd91f6260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f8fd91f6dc0" loc="66:/home/sumukh/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/sumukh/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8fd91f6260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f8fd91f6b40" loc="66:/home/sumukh/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8fd91f6260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f8fd91f5680" loc="73:/home/sumukh/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/sumukh/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/sumukh/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f8fd91e3560" loc="50:/home/sumukh/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/sumukh/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f8fd9633970"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f8fd91e24f0" loc="60:/home/sumukh/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/sumukh/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f8fd91e3d40" loc="55:/home/sumukh/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/sumukh/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f8fd9633590"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f8fd91e5cd0" loc="45:/home/sumukh/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/sumukh/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f8fd9633590"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f8fd9633970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f8fd91e56f0" loc="45:/home/sumukh/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f8fd9633590"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f8fd91e5a40" loc="45:/home/sumukh/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f8fd9633970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7f8fd91d6e50" loc="53:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f8fd9672a50"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f8fd91e0e80" loc="52:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f8fd9672a50"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f8fd91e0020" loc="52:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f8fd91e0890" loc="52:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f8fd91e0be0" loc="52:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f8fd91dd610" loc="63:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f8fd9672a50"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f8fd91de770" loc="63:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f8fd91dd020" loc="63:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f8fd91dd370" loc="63:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/home/sumukh/tinyos-main/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f8fd91e7c30" loc="68:/home/sumukh/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/home/sumukh/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f8fd91e7470" loc="61:/home/sumukh/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/home/sumukh/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f8fd91e8ce0" loc="54:/home/sumukh/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f8fd91e8420" loc="53:/home/sumukh/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/home/sumukh/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="42:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f8fd91192b0" loc="58:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="57:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f8fd96b6b10"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f8fd96b4020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x7f8fd911dd50" loc="50:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f8fd96c6a70"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f8fd96c5020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f8fd911dad0" loc="50:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f8fd96c6a70"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f8fd96c5020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f8fd911b020" loc="54:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="53:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f8fd96b8590"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f8fd96b89b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x7f8fd9120630" loc="45:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f8fd96cd490"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f8fd96cd8b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f8fd911ba60" loc="55:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f8fd96b8590"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f8fd96b89b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f8fd911b7e0" loc="55:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f8fd96b8590"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f8fd96b89b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f8fd9119cf0" loc="59:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f8fd96b6b10"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f8fd96b4020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f8fd9119a70" loc="59:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f8fd96b6b10"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f8fd96b4020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x7f8fd911e830" loc="47:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f8fd96c3160"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f8fd96c3580"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x7f8fd911e020" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f8fd96c6a70"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f8fd96c5020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x7f8fd911d2e0" loc="49:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f8fd96cd490"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f8fd96cd8b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f8fd911d060" loc="49:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f8fd96cd490"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f8fd96cd8b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x7f8fd911c7b0" loc="51:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f8fd96c3160"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f8fd96c3580"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f8fd911c530" loc="51:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f8fd96c3160"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f8fd96c3580"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f8fd9121bd0" loc="40:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8fd9121bd0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x7f8fd9111aa0" loc="88:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x7f8fd9111820" loc="88:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f8fd9112900" loc="76:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f8fd9116560" loc="47:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8fd9121bd0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f8fd9115a40" loc="60:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8fd9121bd0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f8fd91157c0" loc="60:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8fd9121bd0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f8fd9113270" loc="64:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f8fd91110e0" loc="82:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f8fd9115020" loc="53:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8fd9121bd0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f8fd9116c80" loc="53:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8fd9121bd0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f8fd91139e0" loc="67:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f8fd9112190" loc="70:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f8fd910b020" loc="41:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8fd910b020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7f8fd9107970" loc="74:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f8fd9109b00" loc="58:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f8fd910b960" loc="48:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8fd910b020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f8fd91082b0" loc="62:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f8fd9106190" loc="80:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f8fd9109350" loc="54:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8fd910b020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f8fd91090d0" loc="54:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8fd910b020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f8fd9108a20" loc="65:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f8fd91071f0" loc="68:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f8fd912d540" loc="55:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f8fd912d540"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7f8fd9127020" loc="98:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f8fd9128020" loc="87:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f8fd912de70" loc="61:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f8fd912d540"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7f8fd9127a00" loc="104:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f8fd9127780" loc="104:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7f8fd9126270" loc="110:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f8fd912b7b0" loc="75:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f8fd912b020" loc="70:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f8fd91287e0" loc="93:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f8fd912c850" loc="67:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f8fd912d540"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f8fd912c5d0" loc="67:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f8fd912d540"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f8fd912a020" loc="78:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f8fd912a770" loc="81:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x7f8fd90faad0" loc="45:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f8fd96dfaf0"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f8fd96de020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f8fd90f4030" loc="53:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f8fd96d3580"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f8fd96d39a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f8fd90f7d80" loc="49:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f8fd96d7c90"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f8fd96d50e0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f8fd90f67f0" loc="50:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f8fd96d7c90"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f8fd96d50e0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f8fd90f6570" loc="50:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f8fd96d7c90"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f8fd96d50e0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f8fd90f4a70" loc="54:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f8fd96d3580"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f8fd96d39a0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f8fd90f47f0" loc="54:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f8fd96d3580"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f8fd96d39a0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f8fd90f7570" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f8fd96dfaf0"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f8fd96de020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f8fd90f72f0" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f8fd96dfaf0"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f8fd96de020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x7f8fd90ec7e0" loc="38:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x7f8fd90eb030" loc="44:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x7f8fd90ec070" loc="32:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7f8fd90eb840" loc="50:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7f8fd90f0d80" loc="21:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f8fd96d9410"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x7f8fd96d9830"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7f8fd90ed7e0" loc="27:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f8fd96d9410"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x7f8fd96d9830"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f8fd90ed560" loc="27:/home/sumukh/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f8fd96d9410"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x7f8fd96d9830"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/sumukh/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/sumukh/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f8fd8f7f410" loc="57:/home/sumukh/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f8fd8f7f410"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f8fd8f7f650" loc="57:/home/sumukh/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8fd8f7f650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f8fd8f7d020" loc="64:/home/sumukh/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/sumukh/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8fd8f7f650"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f8fd8f7c120" loc="76:/home/sumukh/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/sumukh/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f8fd8f7d8a0" loc="71:/home/sumukh/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/sumukh/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f8fd8f7c880" loc="82:/home/sumukh/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/sumukh/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/sumukh/tinyos-main/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f8fd8ed6c80" loc="54:/home/sumukh/tinyos-main/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f8fd8ed5e00" loc="66:/home/sumukh/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/sumukh/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f8fd8ed5650" loc="61:/home/sumukh/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/sumukh/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f8fd8ed53d0" loc="61:/home/sumukh/tinyos-main/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f8fd8ed6420" loc="53:/home/sumukh/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/sumukh/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f8fd8eb3770" loc="56:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f8fd8eb12b0" loc="75:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f8fd8eb3020" loc="51:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f8fd8eb2a60" loc="70:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f8fd8eb27e0" loc="70:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f8fd8eb6800" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f8fd8eb2020" loc="63:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f8fd8e94680" loc="48:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:/home/sumukh/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7f8fd8e1c020" loc="24:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7f8fd8e1c870" loc="31:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7f8fd8e1b0e0" loc="39:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7f8fd8dfc2b0" loc="62:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f8fd8dfdc60" loc="62:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f8fd8dfc020" loc="62:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f8fd8df7610" loc="91:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f8fd8df8be0" loc="91:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f8fd8df7020" loc="91:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f8fd8df7370" loc="91:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f8fd8dfae40" loc="82:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f8fd9672a50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f8fd8dfa860" loc="82:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f8fd8dfabb0" loc="82:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7f8fd8dffe40" loc="51:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f8fd9672a50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f8fd8dff860" loc="51:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f8fd8dffbb0" loc="51:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f8fd8dfba10" loc="71:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f8fd8dfb0d0" loc="71:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f8fd8dfb420" loc="71:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f8fd8dfb770" loc="71:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/home/sumukh/tinyos-main/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/home/sumukh/tinyos-main/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f8fd8ddd990" loc="70:/home/sumukh/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/home/sumukh/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f8fd8ddd020" loc="70:/home/sumukh/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f8fd8ddd3b0" loc="70:/home/sumukh/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f8fd8ddd6f0" loc="70:/home/sumukh/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f8fd8dd9020" loc="82:/home/sumukh/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/home/sumukh/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f8fd8ddc1d0" loc="82:/home/sumukh/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f8fd8ddc560" loc="82:/home/sumukh/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f8fd8ddc8a0" loc="82:/home/sumukh/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f8fd8ddcc10" loc="83:/home/sumukh/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/sumukh/tinyos-main/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f8fd8ddf8f0" loc="45:/home/sumukh/tinyos-main/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/sumukh/tinyos-main/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f8fd8ddf670" loc="45:/home/sumukh/tinyos-main/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/sumukh/tinyos-main/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/sumukh/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f8fd8d4a2a0" loc="62:/home/sumukh/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/sumukh/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f8fd8d4a020" loc="62:/home/sumukh/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f8fd8d49680" loc="74:/home/sumukh/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/sumukh/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f8fd8d49400" loc="74:/home/sumukh/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f8fd8d4ab10" loc="68:/home/sumukh/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/sumukh/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f8fd8d482a0" loc="81:/home/sumukh/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/sumukh/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f8fd8d48020" loc="81:/home/sumukh/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x7f8fd8d340e0" loc="86:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x7f8fd8d2a070" loc="126:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x7f8fd8d2fa00" loc="117:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x7f8fd8d2aa90" loc="128:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x7f8fd8d2a810" loc="128:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x7f8fd8d358f0" loc="83:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x7f8fd8d2d5c0" loc="122:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x7f8fd8d2d340" loc="122:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7f8fd8d30020" loc="113:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7f8fd8d32cf0" loc="113:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f8fd8d33070" loc="97:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x7f8fd8d254e0" loc="141:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f8fd8d25260" loc="141:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7f8fd8d307c0" loc="114:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x7f8fd8d29c10" loc="131:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7f8fd8d29990" loc="131:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f8fd8d28b70" loc="136:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x7f8fd8d2b8a0" loc="125:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x7f8fd8d2b620" loc="125:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x7f8fd8d26b10" loc="140:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x7f8fd8d2e3f0" loc="119:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x7f8fd8d2e170" loc="119:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f8fd8d33a50" loc="103:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f8fd8d337d0" loc="103:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f8fd8d2f2a0" loc="116:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x7f8fd8d2f020" loc="116:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x7f8fd8d2de30" loc="123:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x7f8fd8d29270" loc="129:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x7f8fd8d28390" loc="132:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7f8fd8d26350" loc="138:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x7f8fd8d2eb70" loc="120:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f8fd8d34870" loc="89:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f8fd8d324d0" loc="109:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f8fd8d32250" loc="109:/home/sumukh/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/sumukh/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/sumukh/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f8fd8d1f550" loc="90:/home/sumukh/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/sumukh/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f8fd8d1fdb0" loc="98:/home/sumukh/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/sumukh/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/sumukh/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/sumukh/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f8fd8cc6020" loc="95:/home/sumukh/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/sumukh/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f8fd8cc6870" loc="105:/home/sumukh/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/sumukh/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/sumukh/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/sumukh/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f8fd8c73a70" loc="53:/home/sumukh/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/sumukh/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f8fd8c703e0" loc="61:/home/sumukh/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/sumukh/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/sumukh/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/sumukh/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f8fd8c6d350" loc="65:/home/sumukh/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/sumukh/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f8fd8c71aa0" loc="59:/home/sumukh/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/sumukh/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/sumukh/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/sumukh/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f8fd8c644c0" loc="79:/home/sumukh/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/sumukh/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f8fd8c6c400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f8fd8c64240" loc="79:/home/sumukh/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f8fd8c6c400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f8fd8c663b0" loc="53:/home/sumukh/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/sumukh/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f8fd8c65020" loc="62:/home/sumukh/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/sumukh/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f8fd8c6c400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f8fd8c66c30" loc="62:/home/sumukh/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f8fd8c6c400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f8fd8c65930" loc="70:/home/sumukh/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/sumukh/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f8fd8c6c400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7f8fd8b405e0" loc="43:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f8fd8af6420" loc="63:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f8fd8af7a20" loc="63:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7f8fd8af6190" loc="63:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7f8fd8af7270" loc="55:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7f8fd8af8a00" loc="49:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f8fd8af8780" loc="49:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7f8fd8b0bcb0" loc="58:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8fd8b0ba30" loc="58:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f8fd8b10ca0" loc="50:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8fd8b10a20" loc="50:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f8fd8b09c80" loc="72:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8fd8b09a00" loc="72:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f8fd8b0aca0" loc="65:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8fd8b0aa20" loc="65:/home/sumukh/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/sumukh/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/sumukh/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f8fd899d920" loc="53:/home/sumukh/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f8fd899d920"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f8fd899a270" loc="61:/home/sumukh/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/sumukh/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/sumukh/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/sumukh/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f8fd8935020" loc="53:/home/sumukh/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f8fd8935020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f8fd892fc50" loc="136:/home/sumukh/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/sumukh/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f8fd89325b0" loc="83:/home/sumukh/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/sumukh/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f8fd8930360" loc="114:/home/sumukh/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/sumukh/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f8fd8931d60" loc="114:/home/sumukh/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f8fd89300d0" loc="114:/home/sumukh/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f8fd89315b0" loc="98:/home/sumukh/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/sumukh/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f8fd892dca0" loc="151:/home/sumukh/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/sumukh/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f8fd892d420" loc="144:/home/sumukh/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/sumukh/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f8fd8932d90" loc="92:/home/sumukh/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/sumukh/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f8fd8935b90" loc="64:/home/sumukh/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/sumukh/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f8fd8935910" loc="64:/home/sumukh/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f8fd892f2f0" loc="129:/home/sumukh/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/sumukh/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f8fd8930d00" loc="129:/home/sumukh/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f8fd892f060" loc="129:/home/sumukh/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f8fd8933680" loc="73:/home/sumukh/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/sumukh/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f8fd8933400" loc="73:/home/sumukh/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f8fda1b2090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f8fd8933e80" loc="78:/home/sumukh/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/sumukh/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/sumukh/tinyos-main/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f8fd87b9600" loc="53:/home/sumukh/tinyos-main/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f8fd87b9600"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f8fd87b62a0" loc="64:/home/sumukh/tinyos-main/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/sumukh/tinyos-main/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f8fd87b9600"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f8fd87b6020" loc="64:/home/sumukh/tinyos-main/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f8fd87b9600"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/sumukh/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/sumukh/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7f8fd85a4670" loc="31:/home/sumukh/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/sumukh/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8fd85a4060" loc="31:/home/sumukh/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7f8fd85a43e0" loc="31:/home/sumukh/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7f8fd85a7820" loc="15:/home/sumukh/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/sumukh/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7f8fd85a56d0" loc="23:/home/sumukh/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/sumukh/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8fd85a50d0" loc="23:/home/sumukh/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8fd96243c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f8fd9622a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7f8fd85a5440" loc="23:/home/sumukh/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/sumukh/tinyos-main/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7f8fd858b900" loc="54:/home/sumukh/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/sumukh/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7f8fd858b190" loc="49:/home/sumukh/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/sumukh/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/sumukh/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7f8fd8594940" loc="56:/home/sumukh/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/sumukh/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7f8fd8593d60" loc="72:/home/sumukh/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/sumukh/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7f8fd8591ab0" loc="94:/home/sumukh/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/sumukh/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f8fd8591830" loc="94:/home/sumukh/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7f8fd85926a0" loc="79:/home/sumukh/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/sumukh/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7f8fd85934d0" loc="65:/home/sumukh/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/sumukh/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f8fd8593250" loc="65:/home/sumukh/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7f8fd858f350" loc="100:/home/sumukh/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/sumukh/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7f8fd8591020" loc="85:/home/sumukh/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/sumukh/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/sumukh/tinyos-main/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7f8fd859b4a0" loc="71:/home/sumukh/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/sumukh/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7f8fd859bdd0" loc="81:/home/sumukh/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/sumukh/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7f8fd859db10" loc="62:/home/sumukh/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/sumukh/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7f8fd859d890" loc="62:/home/sumukh/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7f8fd859a9d0" loc="91:/home/sumukh/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/sumukh/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f8fd859a750" loc="91:/home/sumukh/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/sumukh/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/sumukh/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7f8fd85985e0" loc="62:/home/sumukh/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/sumukh/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7f8fd85972a0" loc="69:/home/sumukh/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/sumukh/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f8fd8597020" loc="69:/home/sumukh/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7f8fd8597d70" loc="80:/home/sumukh/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/sumukh/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f8fd8597af0" loc="80:/home/sumukh/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/sumukh/tinyos-main/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f8fd8466de0" loc="48:/home/sumukh/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/sumukh/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f8fd8466810" loc="48:/home/sumukh/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f8fd8466b50" loc="48:/home/sumukh/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7f8fd8460ac0" loc="79:/home/sumukh/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/sumukh/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f8fd8460840" loc="79:/home/sumukh/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f8fd845d930" loc="90:/home/sumukh/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/sumukh/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f8fd845d360" loc="90:/home/sumukh/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f8fd845d6a0" loc="90:/home/sumukh/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7f8fd845f740" loc="65:/home/sumukh/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/sumukh/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7f8fd845c2c0" loc="99:/home/sumukh/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/sumukh/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f8fd845b920" loc="99:/home/sumukh/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f8fd845bc60" loc="99:/home/sumukh/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f8fd845c020" loc="99:/home/sumukh/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7f8fd8460070" loc="72:/home/sumukh/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/sumukh/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f8fd8461720" loc="57:/home/sumukh/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/sumukh/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f8fd8462db0" loc="57:/home/sumukh/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f8fd8461130" loc="57:/home/sumukh/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8fda1b35a0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f8fd8461480" loc="57:/home/sumukh/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/home/sumukh/tinyos-main/tos/interfaces/UartByte.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f8fd843a5b0" loc="46:/home/sumukh/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="39:/home/sumukh/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f8fd843a330" loc="46:/home/sumukh/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f8fd8439430" loc="56:/home/sumukh/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="48:/home/sumukh/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f8fd843ae20" loc="56:/home/sumukh/tinyos-main/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7f8fd84391a0" loc="56:/home/sumukh/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/home/sumukh/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f8fd8426820" loc="44:/home/sumukh/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f8fd8428910" loc="42:/home/sumukh/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x7f8fd8422110" loc="49:/home/sumukh/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f8fd8424e60" loc="49:/home/sumukh/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f8fd8424070" loc="47:/home/sumukh/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f8fd842b9b0" loc="40:/home/sumukh/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f8fd8428190" loc="41:/home/sumukh/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f8fd84260e0" loc="43:/home/sumukh/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x7f8fd8425020" loc="45:/home/sumukh/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f8fd8425950" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f8fd84256d0" loc="46:/home/sumukh/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f8fd8424790" loc="48:/home/sumukh/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/home/sumukh/tinyos-main/tos/interfaces/Queue.nc">
      <documentation loc="33:/home/sumukh/tinyos-main/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f8fd81e0b10" loc="43:/home/sumukh/tinyos-main/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f8fd81e0b10"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7f8fd81dcb50" loc="73:/home/sumukh/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="67:/home/sumukh/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f8fd81e0b10"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7f8fd81db5c0" loc="90:/home/sumukh/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="83:/home/sumukh/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8fd976f670"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f8fd81e0b10"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f8fd81db340" loc="90:/home/sumukh/tinyos-main/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f8fd81e0b10"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x7f8fda1b9b50"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:1"><attribute-ref name="one" ref="0x7f8fda1b9b50"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7f8fd81d85a0" loc="101:/home/sumukh/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="92:/home/sumukh/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f8fd81e0b10"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f8fd81d8320" loc="101:/home/sumukh/tinyos-main/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f8fd81dc3e0" loc="65:/home/sumukh/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="60:/home/sumukh/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f8fd81da780" loc="81:/home/sumukh/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="75:/home/sumukh/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f8fd81e0b10"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f8fd81dd420" loc="50:/home/sumukh/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="45:/home/sumukh/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8fd977bb00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f8fd81ddbb0" loc="58:/home/sumukh/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="52:/home/sumukh/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8fda1b4a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/home/sumukh/tinyos-main/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/home/sumukh/tinyos-main/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TOSDIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x7f8fd81b76e0" loc="49:/home/sumukh/tinyos-main/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/home/sumukh/tinyos-main/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x7f8fd81b7460" loc="49:/home/sumukh/tinyos-main/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
